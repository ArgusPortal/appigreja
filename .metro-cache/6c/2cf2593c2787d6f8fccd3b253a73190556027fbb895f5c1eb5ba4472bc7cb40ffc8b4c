{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":38,"index":1272}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":38,"index":1272}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"./ExpoFontLoader","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":84},"end":{"line":3,"column":46,"index":130}}],"key":"7dk3JQGwGYesJt8OOG3pkBz+dtE="}},{"name":"expo-asset","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":35,"index":35}}],"key":"ZXJFWHziJpBZf3W7vl00wXf6fd8="}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":47,"index":83}},{"start":{"line":2,"column":0,"index":36},"end":{"line":2,"column":47,"index":83}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getAssetForSource = getAssetForSource;\n  exports.loadSingleFontAsync = loadSingleFontAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _ExpoFontLoader = _interopRequireDefault(require(_dependencyMap[2], \"./ExpoFontLoader\"));\n  function getAssetForSource(source) {\n    if (source instanceof require(_dependencyMap[3], \"expo-asset\").Asset) {\n      return source;\n    }\n    if (typeof source === 'string') {\n      return require(_dependencyMap[3], \"expo-asset\").Asset.fromURI(source);\n    } else if (typeof source === 'number') {\n      return require(_dependencyMap[3], \"expo-asset\").Asset.fromModule(source);\n    } else if (typeof source === 'object' && typeof source.uri !== 'undefined') {\n      return getAssetForSource(source.uri);\n    }\n    // @ts-ignore Error: Type 'string' is not assignable to type 'Asset'\n    // We can't have a string here, we would have thrown an error if !isWeb\n    // or returned Asset.fromModule if isWeb.\n    return source;\n  }\n  function loadSingleFontAsync(_x, _x2) {\n    return _loadSingleFontAsync.apply(this, arguments);\n  }\n  function _loadSingleFontAsync() {\n    _loadSingleFontAsync = (0, _asyncToGenerator2.default)(function* (name, input) {\n      var asset = input;\n      if (!asset.downloadAsync) {\n        throw new (require(_dependencyMap[4], \"expo-modules-core\").CodedError)(`ERR_FONT_SOURCE`, '`loadSingleFontAsync` expected resource of type `Asset` from expo-asset on native');\n      }\n      yield asset.downloadAsync();\n      if (!asset.downloaded) {\n        throw new (require(_dependencyMap[4], \"expo-modules-core\").CodedError)(`ERR_DOWNLOAD`, `Failed to download asset for font \"${name}\"`);\n      }\n      yield _ExpoFontLoader.default.loadAsync(name, asset.localUri);\n    });\n    return _loadSingleFontAsync.apply(this, arguments);\n  }\n});","lineCount":43,"map":[[9,2,3,0],[9,6,3,0,"_ExpoFontLoader"],[9,21,3,0],[9,24,3,0,"_interopRequireDefault"],[9,46,3,0],[9,47,3,0,"require"],[9,54,3,0],[9,55,3,0,"_dependencyMap"],[9,69,3,0],[10,2,4,7],[10,11,4,16,"getAssetForSource"],[10,28,4,33,"getAssetForSource"],[10,29,4,34,"source"],[10,35,4,40],[10,37,4,42],[11,4,5,4],[11,8,5,8,"source"],[11,14,5,14],[11,26,5,26,"Asset"],[11,52,5,26],[11,53,5,26,"Asset"],[11,72,5,31],[11,74,5,33],[12,6,6,8],[12,13,6,15,"source"],[12,19,6,21],[13,4,7,4],[14,4,8,4],[14,8,8,8],[14,15,8,15,"source"],[14,21,8,21],[14,26,8,26],[14,34,8,34],[14,36,8,36],[15,6,9,8],[15,13,9,15,"Asset"],[15,39,9,15],[15,40,9,15,"Asset"],[15,59,9,20],[15,60,9,21,"fromURI"],[15,67,9,28],[15,68,9,29,"source"],[15,74,9,35],[15,75,9,36],[16,4,10,4],[16,5,10,5],[16,11,11,9],[16,15,11,13],[16,22,11,20,"source"],[16,28,11,26],[16,33,11,31],[16,41,11,39],[16,43,11,41],[17,6,12,8],[17,13,12,15,"Asset"],[17,39,12,15],[17,40,12,15,"Asset"],[17,59,12,20],[17,60,12,21,"fromModule"],[17,70,12,31],[17,71,12,32,"source"],[17,77,12,38],[17,78,12,39],[18,4,13,4],[18,5,13,5],[18,11,14,9],[18,15,14,13],[18,22,14,20,"source"],[18,28,14,26],[18,33,14,31],[18,41,14,39],[18,45,14,43],[18,52,14,50,"source"],[18,58,14,56],[18,59,14,57,"uri"],[18,62,14,60],[18,67,14,65],[18,78,14,76],[18,80,14,78],[19,6,15,8],[19,13,15,15,"getAssetForSource"],[19,30,15,32],[19,31,15,33,"source"],[19,37,15,39],[19,38,15,40,"uri"],[19,41,15,43],[19,42,15,44],[20,4,16,4],[21,4,17,4],[22,4,18,4],[23,4,19,4],[24,4,20,4],[24,11,20,11,"source"],[24,17,20,17],[25,2,21,0],[26,2,21,1],[26,11,22,22,"loadSingleFontAsync"],[26,30,22,41,"loadSingleFontAsync"],[26,31,22,41,"_x"],[26,33,22,41],[26,35,22,41,"_x2"],[26,38,22,41],[27,4,22,41],[27,11,22,41,"_loadSingleFontAsync"],[27,31,22,41],[27,32,22,41,"apply"],[27,37,22,41],[27,44,22,41,"arguments"],[27,53,22,41],[28,2,22,41],[29,2,22,41],[29,11,22,41,"_loadSingleFontAsync"],[29,32,22,41],[30,4,22,41,"_loadSingleFontAsync"],[30,24,22,41],[30,31,22,41,"_asyncToGenerator2"],[30,49,22,41],[30,50,22,41,"default"],[30,57,22,41],[30,59,22,7],[30,70,22,42,"name"],[30,74,22,46],[30,76,22,48,"input"],[30,81,22,53],[30,83,22,55],[31,6,23,4],[31,10,23,10,"asset"],[31,15,23,15],[31,18,23,18,"input"],[31,23,23,23],[32,6,24,4],[32,10,24,8],[32,11,24,9,"asset"],[32,16,24,14],[32,17,24,15,"downloadAsync"],[32,30,24,28],[32,32,24,30],[33,8,25,8],[33,14,25,14],[33,19,25,18,"CodedError"],[33,45,25,18],[33,46,25,18,"CodedError"],[33,77,25,28],[33,79,25,29],[33,96,25,46],[33,98,25,48],[33,181,25,131],[33,182,25,132],[34,6,26,4],[35,6,27,4],[35,12,27,10,"asset"],[35,17,27,15],[35,18,27,16,"downloadAsync"],[35,31,27,29],[35,32,27,30],[35,33,27,31],[36,6,28,4],[36,10,28,8],[36,11,28,9,"asset"],[36,16,28,14],[36,17,28,15,"downloaded"],[36,27,28,25],[36,29,28,27],[37,8,29,8],[37,14,29,14],[37,19,29,18,"CodedError"],[37,45,29,18],[37,46,29,18,"CodedError"],[37,77,29,28],[37,79,29,29],[37,93,29,43],[37,95,29,45],[37,133,29,83,"name"],[37,137,29,87],[37,140,29,90],[37,141,29,91],[38,6,30,4],[39,6,31,4],[39,12,31,10,"ExpoFontLoader"],[39,35,31,24],[39,36,31,25,"loadAsync"],[39,45,31,34],[39,46,31,35,"name"],[39,50,31,39],[39,52,31,41,"asset"],[39,57,31,46],[39,58,31,47,"localUri"],[39,66,31,55],[39,67,31,56],[40,4,32,0],[40,5,32,1],[41,4,32,1],[41,11,32,1,"_loadSingleFontAsync"],[41,31,32,1],[41,32,32,1,"apply"],[41,37,32,1],[41,44,32,1,"arguments"],[41,53,32,1],[42,2,32,1],[43,0,32,1],[43,3]],"functionMap":{"names":["<global>","getAssetForSource","loadSingleFontAsync"],"mappings":"AAA;OCG;CDiB;OEC;CFU"}},"type":"js/module"}]}