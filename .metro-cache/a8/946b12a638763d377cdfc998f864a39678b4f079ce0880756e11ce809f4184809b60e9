{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":492,"column":48,"index":22502}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":492,"column":48,"index":22502}}],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0="}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":36,"index":222},"end":{"line":8,"column":52,"index":238}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY="}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":48,"index":325},"end":{"line":10,"column":78,"index":355}}],"key":"Pp42meoAsoBb9zFxGL4kkNu1jlQ="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":37,"column":18,"index":1883},"end":{"line":37,"column":46,"index":1911}}],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE="}},{"name":"./types.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":13,"index":875},"end":{"line":20,"column":34,"index":896}}],"key":"v1w+pnJrgvUP3JbmDiiF/Rw8c9Q="}},{"name":"./Screen.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":14,"index":838},"end":{"line":19,"column":36,"index":860}}],"key":"8SnoR+UrxjfxCANvsop63w62RIE="}},{"name":"./Group.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":13,"index":417},"end":{"line":12,"column":34,"index":438}},{"start":{"line":12,"column":13,"index":417},"end":{"line":12,"column":34,"index":438}}],"key":"w40I7fSAl4cArv0sXdY5PzQp/gY="}},{"name":"react-is","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":15,"index":256},"end":{"line":9,"column":34,"index":275}}],"key":"hoZupclAije+HbYquo78nDVN6Z8="}},{"name":"./useRegisterNavigator.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":35,"column":28,"index":1767},"end":{"line":35,"column":64,"index":1803}}],"key":"O7i+dLjDRiPzaa5y8QpxQ8DDztA="}},{"name":"./NavigationRouteContext.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":30,"index":646},"end":{"line":16,"column":68,"index":684}}],"key":"5gWCKrrjrgRIYljcPNzcln9Btzk="}},{"name":"./useLazyValue.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":30,"column":20,"index":1487},"end":{"line":30,"column":48,"index":1515}}],"key":"HgDCzEiSAV0yTGYyjttKBvY79WQ="}},{"name":"./NavigationStateContext.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":30,"index":716},"end":{"line":17,"column":68,"index":754}}],"key":"qhsKKNGciKBrWk6APM3SsDmjdJc="}},{"name":"./isArrayEqual.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":20,"index":460},"end":{"line":13,"column":48,"index":488}}],"key":"J42REN97/MZDKzfzDiREOCKQEZg="}},{"name":"./isRecordEqual.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":21,"index":511},"end":{"line":14,"column":50,"index":540}}],"key":"bgTBGByImll0KHpaLtMugoWLVnI="}},{"name":"@react-navigation/routers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":15,"index":148},"end":{"line":7,"column":51,"index":184}},{"start":{"line":7,"column":15,"index":148},"end":{"line":7,"column":51,"index":184}}],"key":"vLkNXgxjksXU+0sgY9F+q8Dw3b8="}},{"name":"./useScheduleUpdate.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":36,"column":25,"index":1830},"end":{"line":36,"column":58,"index":1863}}],"key":"dM5Od3yYf8v2580uJzsN1ecJu08="}},{"name":"./useIsomorphicLayoutEffect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":28,"column":33,"index":1357},"end":{"line":28,"column":71,"index":1395}}],"key":"foIcciQOlm+nL/x1NySTH6kTbFI="}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":18,"index":376},"end":{"line":11,"column":44,"index":402}}],"key":"tNACf9IEs8kJ6FfN3urwJPRnTEk="}},{"name":"./useEventEmitter.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":23,"index":1143},"end":{"line":25,"column":54,"index":1174}}],"key":"2ZGv8kx5So0f4Yj+9NGPYeg5WrU="}},{"name":"./useFocusEvents.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":22,"index":1292},"end":{"line":27,"column":52,"index":1322}}],"key":"UxvIwU/ayiO/l2d/5y79ivoQTzI="}},{"name":"./useChildListeners.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":25,"index":923},"end":{"line":21,"column":58,"index":956}}],"key":"SMvuDfd78eXDOi/PD6SQXskGK8U="}},{"name":"./useKeyedChildListeners.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":30,"index":1427},"end":{"line":29,"column":68,"index":1465}}],"key":"Ng1K6OvBh7jYN95BN+CARdLETXk="}},{"name":"./useOnAction.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":32,"column":19,"index":1602},"end":{"line":32,"column":46,"index":1629}}],"key":"dExasn09rF96hkvZF6vI5POqLRQ="}},{"name":"./useOnRouteFocus.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":34,"column":23,"index":1706},"end":{"line":34,"column":54,"index":1737}}],"key":"Yv9IAV90GbH/zxNOkia76xp7J/Y="}},{"name":"./useNavigationHelpers.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":31,"column":28,"index":1545},"end":{"line":31,"column":64,"index":1581}}],"key":"CsctbMNXcq1fw+pk72PkbKO5gy4="}},{"name":"./useFocusedListenersChildrenAdapter.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":42,"index":1218},"end":{"line":26,"column":92,"index":1268}}],"key":"N3WuNA9CkeBBGF3QDk7GrpTVUSk="}},{"name":"./useOnGetState.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":33,"column":21,"index":1652},"end":{"line":33,"column":50,"index":1681}}],"key":"9iKt1Dz+e2f7rkd0KS2wi4k+diw="}},{"name":"./useDescriptors.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":22,"index":1088},"end":{"line":24,"column":52,"index":1118}}],"key":"3BJTG03UW5KlNWFxVU3q7UVQd38="}},{"name":"./useCurrentRender.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":24,"index":1032},"end":{"line":23,"column":56,"index":1064}}],"key":"jSJVhQwYPyP3eHYrBu4CiYrWUIc="}},{"name":"./useComponent.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":20,"index":978},"end":{"line":22,"column":48,"index":1006}}],"key":"o/end7Yh7Ih5HNuxYWePE2PQRJg="}},{"name":"./NavigationHelpersContext.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":32,"index":574},"end":{"line":15,"column":72,"index":614}}],"key":"cDJxg6lugakIu5MajpGs42S2Yag="}},{"name":"./PreventRemoveProvider.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":29,"index":785},"end":{"line":18,"column":66,"index":822}}],"key":"bJ6KoGmzbssZqTAA79DINuYJ6nU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _objectWithoutProperties = require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\");\n  var _excluded = [\"children\", \"layout\", \"screenOptions\", \"screenLayout\", \"screenListeners\"];\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigationBuilder = useNavigationBuilder;\n  var React = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var _useLatestCallback = _interopRequireDefault(require(_dependencyMap[3], \"use-latest-callback\"));\n  var _jsxRuntime = require(_dependencyMap[4], \"react/jsx-runtime\");\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(),\n      t = new WeakMap();\n    return (_getRequireWildcardCache = function (e) {\n      return e ? t : r;\n    })(e);\n  }\n  function _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n      default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n      },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n      var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n      i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n  }\n  // This is to make TypeScript compiler happy\n  require(_dependencyMap[5], \"./types.js\").PrivateValueStore;\n  var isValidKey = key => key === undefined || typeof key === 'string' && key !== '';\n\n  /**\n   * Extract route config object from React children elements.\n   *\n   * @param children React Elements to extract the config from.\n   */\n  var getRouteConfigsFromChildren = (children, groupKey, groupOptions, groupLayout) => {\n    var configs = React.Children.toArray(children).reduce((acc, child) => {\n      if (/*#__PURE__*/React.isValidElement(child)) {\n        if (child.type === require(_dependencyMap[6], \"./Screen.js\").Screen) {\n          // We can only extract the config from `Screen` elements\n          // If something else was rendered, it's probably a bug\n\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the screen '${child.props.name}'. It must be a non-empty string or 'undefined'.`);\n          }\n          acc.push({\n            keys: [groupKey, child.props.navigationKey],\n            options: groupOptions,\n            layout: groupLayout,\n            props: child.props\n          });\n          return acc;\n        }\n        if (child.type === React.Fragment || child.type === require(_dependencyMap[7], \"./Group.js\").Group) {\n          if (!isValidKey(child.props.navigationKey)) {\n            throw new Error(`Got an invalid 'navigationKey' prop (${JSON.stringify(child.props.navigationKey)}) for the group. It must be a non-empty string or 'undefined'.`);\n          }\n\n          // When we encounter a fragment or group, we need to dive into its children to extract the configs\n          // This is handy to conditionally define a group of screens\n          acc.push(...getRouteConfigsFromChildren(child.props.children, child.props.navigationKey, child.type !== require(_dependencyMap[7], \"./Group.js\").Group ? groupOptions : groupOptions != null ? [...groupOptions, child.props.screenOptions] : [child.props.screenOptions], typeof child.props.screenLayout === 'function' ? child.props.screenLayout : groupLayout));\n          return acc;\n        }\n      }\n      throw new Error(`A navigator can only contain 'Screen', 'Group' or 'React.Fragment' as its direct children (found ${/*#__PURE__*/React.isValidElement(child) ? `'${typeof child.type === 'string' ? child.type : child.type?.name}'${child.props != null && typeof child.props === 'object' && 'name' in child.props && child.props?.name ? ` for the screen '${child.props.name}'` : ''}` : typeof child === 'object' ? JSON.stringify(child) : `'${String(child)}'`}). To render this component in the navigator, pass it in the 'component' prop to 'Screen'.`);\n    }, []);\n    if (process.env.NODE_ENV !== 'production') {\n      configs.forEach(config => {\n        var _config$props = config.props,\n          name = _config$props.name,\n          children = _config$props.children,\n          component = _config$props.component,\n          getComponent = _config$props.getComponent;\n        if (typeof name !== 'string' || !name) {\n          throw new Error(`Got an invalid name (${JSON.stringify(name)}) for the screen. It must be a non-empty string.`);\n        }\n        if (children != null || component !== undefined || getComponent !== undefined) {\n          if (children != null && component !== undefined) {\n            throw new Error(`Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && getComponent !== undefined) {\n            throw new Error(`Got both 'getComponent' and 'children' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (component !== undefined && getComponent !== undefined) {\n            throw new Error(`Got both 'component' and 'getComponent' props for the screen '${name}'. You must pass only one of them.`);\n          }\n          if (children != null && typeof children !== 'function') {\n            throw new Error(`Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`);\n          }\n          if (component !== undefined && !(0, require(_dependencyMap[8], \"react-is\").isValidElementType)(component)) {\n            throw new Error(`Got an invalid value for 'component' prop for the screen '${name}'. It must be a valid React Component.`);\n          }\n          if (getComponent !== undefined && typeof getComponent !== 'function') {\n            throw new Error(`Got an invalid value for 'getComponent' prop for the screen '${name}'. It must be a function returning a React Component.`);\n          }\n          if (typeof component === 'function') {\n            if (component.name === 'component') {\n              // Inline anonymous functions passed in the `component` prop will have the name of the prop\n              // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n              // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n              console.warn(`Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`);\n            } else if (/^[a-z]/.test(component.name)) {\n              console.warn(`Got a component with the name '${component.name}' for the screen '${name}'. React Components must start with an uppercase letter. If you're passing a regular function and not a component, pass it as children to 'Screen' instead. Otherwise capitalize your component's name.`);\n            }\n          }\n        } else {\n          throw new Error(`Couldn't find a 'component', 'getComponent' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n        }\n      });\n    }\n    return configs;\n  };\n\n  /**\n   * Hook for building navigators.\n   *\n   * @param createRouter Factory method which returns router object.\n   * @param options Options object containing `children` and additional options for the router.\n   * @returns An object containing `state`, `navigation`, `descriptors` objects.\n   */\n  function useNavigationBuilder(createRouter, options) {\n    var navigatorKey = (0, require(_dependencyMap[9], \"./useRegisterNavigator.js\").useRegisterNavigator)();\n    var route = React.useContext(require(_dependencyMap[10], \"./NavigationRouteContext.js\").NavigationRouteContext);\n    var children = options.children,\n      layout = options.layout,\n      screenOptions = options.screenOptions,\n      screenLayout = options.screenLayout,\n      screenListeners = options.screenListeners,\n      rest = _objectWithoutProperties(options, _excluded);\n    var routeConfigs = getRouteConfigsFromChildren(children);\n    var router = (0, require(_dependencyMap[11], \"./useLazyValue.js\").useLazyValue)(() => {\n      if (rest.initialRouteName != null && routeConfigs.every(config => config.props.name !== rest.initialRouteName)) {\n        throw new Error(`Couldn't find a screen named '${rest.initialRouteName}' to use as 'initialRouteName'.`);\n      }\n      return createRouter(rest);\n    });\n    var screens = routeConfigs.reduce((acc, config) => {\n      if (config.props.name in acc) {\n        throw new Error(`A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${config.props.name}')`);\n      }\n      acc[config.props.name] = config;\n      return acc;\n    }, {});\n    var routeNames = routeConfigs.map(config => config.props.name);\n    var routeKeyList = routeNames.reduce((acc, curr) => {\n      acc[curr] = screens[curr].keys.map(key => key ?? '').join(':');\n      return acc;\n    }, {});\n    var routeParamList = routeNames.reduce((acc, curr) => {\n      var initialParams = screens[curr].props.initialParams;\n      acc[curr] = initialParams;\n      return acc;\n    }, {});\n    var routeGetIdList = routeNames.reduce((acc, curr) => Object.assign(acc, {\n      [curr]: screens[curr].props.getId\n    }), {});\n    if (!routeNames.length) {\n      throw new Error(\"Couldn't find any screens for the navigator. Have you defined any screens as its children?\");\n    }\n    var isStateValid = React.useCallback(state => state.type === undefined || state.type === router.type, [router.type]);\n    var isStateInitialized = React.useCallback(state => state !== undefined && state.stale === false && isStateValid(state), [isStateValid]);\n    var _React$useContext = React.useContext(require(_dependencyMap[12], \"./NavigationStateContext.js\").NavigationStateContext),\n      currentState = _React$useContext.state,\n      getCurrentState = _React$useContext.getState,\n      setCurrentState = _React$useContext.setState,\n      setKey = _React$useContext.setKey,\n      getKey = _React$useContext.getKey,\n      getIsInitial = _React$useContext.getIsInitial;\n    var stateCleanedUp = React.useRef(false);\n    var setState = (0, _useLatestCallback.default)(state => {\n      if (stateCleanedUp.current) {\n        // State might have been already cleaned up due to unmount\n        // We do not want to expose API allowing to override this\n        // This would lead to old data preservation on main navigator unmount\n        return;\n      }\n      setCurrentState(state);\n    });\n    var _React$useMemo = React.useMemo(() => {\n        var initialRouteParamList = routeNames.reduce((acc, curr) => {\n          var initialParams = screens[curr].props.initialParams;\n          var initialParamsFromParams = route?.params?.state == null && route?.params?.initial !== false && route?.params?.screen === curr ? route.params.params : undefined;\n          acc[curr] = initialParams !== undefined || initialParamsFromParams !== undefined ? {\n            ...initialParams,\n            ...initialParamsFromParams\n          } : undefined;\n          return acc;\n        }, {});\n\n        // If the current state isn't initialized on first render, we initialize it\n        // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n        // Otherwise assume that the state was provided as initial state\n        // So we need to rehydrate it to make it usable\n        if ((currentState === undefined || !isStateValid(currentState)) && route?.params?.state == null && !(typeof route?.params?.screen === 'string' && route?.params?.initial !== false)) {\n          return [router.getInitialState({\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList\n          }), true];\n        } else {\n          var stateFromParams;\n          if (route?.params?.state != null) {\n            stateFromParams = route.params.state;\n          } else if (typeof route?.params?.screen === 'string' && route?.params?.initial !== false) {\n            stateFromParams = {\n              index: 0,\n              routes: [{\n                name: route.params.screen,\n                params: route.params.params,\n                path: route.params.path\n              }]\n            };\n          }\n          return [router.getRehydratedState(stateFromParams ?? currentState, {\n            routeNames,\n            routeParamList: initialRouteParamList,\n            routeGetIdList\n          }), false];\n        }\n        // We explicitly don't include routeNames, route.params etc. in the dep list\n        // below. We want to avoid forcing a new state to be calculated in those cases\n        // Instead, we handle changes to these in the nextState code below. Note\n        // that some changes to routeConfigs are explicitly ignored, such as changes\n        // to initialParams\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentState, router, isStateValid]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      initializedState = _React$useMemo2[0],\n      isFirstStateInitialization = _React$useMemo2[1];\n    var previousRouteKeyListRef = React.useRef(routeKeyList);\n    React.useEffect(() => {\n      previousRouteKeyListRef.current = routeKeyList;\n    });\n    var previousRouteKeyList = previousRouteKeyListRef.current;\n    var state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initialized locally\n    // So it'll be `undefined` or stale until the first navigation event happens\n    isStateInitialized(currentState) ? currentState : initializedState;\n    var nextState = state;\n    if (!(0, require(_dependencyMap[13], \"./isArrayEqual.js\").isArrayEqual)(state.routeNames, routeNames) || !(0, require(_dependencyMap[14], \"./isRecordEqual.js\").isRecordEqual)(routeKeyList, previousRouteKeyList)) {\n      var navigatorStateForNextRouteNamesChange = options.UNSTABLE_getStateForRouteNamesChange?.(state);\n      // When the list of route names change, the router should handle it to remove invalid routes\n      nextState = navigatorStateForNextRouteNamesChange ?\n      // @ts-expect-error this is ok\n      router.getRehydratedState(navigatorStateForNextRouteNamesChange, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : router.getStateForRouteNamesChange(state, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n        routeKeyChanges: Object.keys(routeKeyList).filter(name => name in previousRouteKeyList && routeKeyList[name] !== previousRouteKeyList[name])\n      });\n    }\n    var previousNestedParamsRef = React.useRef(route?.params);\n    React.useEffect(() => {\n      previousNestedParamsRef.current = route?.params;\n    }, [route?.params]);\n    if (route?.params) {\n      var previousParams = previousNestedParamsRef.current;\n      var action;\n      if (typeof route.params.state === 'object' && route.params.state != null && route.params !== previousParams) {\n        // If the route was updated with new state, we should reset to it\n        action = require(_dependencyMap[15], \"@react-navigation/routers\").CommonActions.reset(route.params.state);\n      } else if (typeof route.params.screen === 'string' && (route.params.initial === false && isFirstStateInitialization || route.params !== previousParams)) {\n        // If the route was updated with new screen name and/or params, we should navigate there\n        action = require(_dependencyMap[15], \"@react-navigation/routers\").CommonActions.navigate({\n          name: route.params.screen,\n          params: route.params.params,\n          path: route.params.path,\n          pop: route.params.pop\n        });\n      }\n\n      // The update should be limited to current navigator only, so we call the router manually\n      var updatedState = action ? router.getStateForAction(nextState, action, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : null;\n      nextState = updatedState !== null ? router.getRehydratedState(updatedState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      }) : nextState;\n    }\n    var shouldUpdate = state !== nextState;\n    (0, require(_dependencyMap[16], \"./useScheduleUpdate.js\").useScheduleUpdate)(() => {\n      if (shouldUpdate) {\n        // If the state needs to be updated, we'll schedule an update\n        setState(nextState);\n      }\n    });\n\n    // The up-to-date state will come in next render, but we don't need to wait for it\n    // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n    // So we override the state object we return to use the latest state as soon as possible\n    state = nextState;\n    React.useEffect(() => {\n      // In strict mode, React will double-invoke effects.\n      // So we need to reset the flag if component was not unmounted\n      stateCleanedUp.current = false;\n      setKey(navigatorKey);\n      if (!getIsInitial()) {\n        // If it's not initial render, we need to update the state\n        // This will make sure that our container gets notifier of state changes due to new mounts\n        // This is necessary for proper screen tracking, URL updates etc.\n        setState(nextState);\n      }\n      return () => {\n        // We need to clean up state for this navigator on unmount\n        if (getCurrentState() !== undefined && getKey() === navigatorKey) {\n          setCurrentState(undefined);\n          stateCleanedUp.current = true;\n        }\n      };\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    // In some cases (e.g. route names change), internal state might have changed\n    // But it hasn't been committed yet, so hasn't propagated to the sync external store\n    // During this time, we need to return the internal state in `getState`\n    // Otherwise it can result in inconsistent state during render in children\n    // To avoid this, we use a ref for render phase, and immediately clear it on commit\n    var stateRef = React.useRef(state);\n    stateRef.current = state;\n    (0, require(_dependencyMap[17], \"./useIsomorphicLayoutEffect\").useIsomorphicLayoutEffect)(() => {\n      stateRef.current = null;\n    });\n    var getState = (0, _useLatestCallback.default)(() => {\n      var currentState = getCurrentState();\n      return (0, require(_dependencyMap[18], \"./deepFreeze.js\").deepFreeze)(isStateInitialized(currentState) ? currentState : initializedState);\n    });\n    var emitter = (0, require(_dependencyMap[19], \"./useEventEmitter.js\").useEventEmitter)(e => {\n      var routeNames = [];\n      var route;\n      if (e.target) {\n        route = state.routes.find(route => route.key === e.target);\n        if (route?.name) {\n          routeNames.push(route.name);\n        }\n      } else {\n        route = state.routes[state.index];\n        routeNames.push(...Object.keys(screens).filter(name => route?.name === name));\n      }\n      if (route == null) {\n        return;\n      }\n      var navigation = descriptors[route.key].navigation;\n      var listeners = [].concat(\n      // Get an array of listeners for all screens + common listeners on navigator\n      ...[screenListeners, ...routeNames.map(name => {\n        var listeners = screens[name].props.listeners;\n        return listeners;\n      })].map(listeners => {\n        var map = typeof listeners === 'function' ? listeners({\n          route: route,\n          navigation\n        }) : listeners;\n        return map ? Object.keys(map).filter(type => type === e.type).map(type => map?.[type]) : undefined;\n      }))\n      // We don't want same listener to be called multiple times for same event\n      // So we remove any duplicate functions from the array\n      .filter((cb, i, self) => cb && self.lastIndexOf(cb) === i);\n      listeners.forEach(listener => listener?.(e));\n    });\n    (0, require(_dependencyMap[20], \"./useFocusEvents.js\").useFocusEvents)({\n      state,\n      emitter\n    });\n    React.useEffect(() => {\n      emitter.emit({\n        type: 'state',\n        data: {\n          state\n        }\n      });\n    }, [emitter, state]);\n    var _ref = (0, require(_dependencyMap[21], \"./useChildListeners.js\").useChildListeners)(),\n      childListeners = _ref.listeners,\n      addListener = _ref.addListener;\n    var _ref2 = (0, require(_dependencyMap[22], \"./useKeyedChildListeners.js\").useKeyedChildListeners)(),\n      keyedListeners = _ref2.keyedListeners,\n      addKeyedListener = _ref2.addKeyedListener;\n    var onAction = (0, require(_dependencyMap[23], \"./useOnAction.js\").useOnAction)({\n      router,\n      getState,\n      setState,\n      key: route?.key,\n      actionListeners: childListeners.action,\n      beforeRemoveListeners: keyedListeners.beforeRemove,\n      routerConfigOptions: {\n        routeNames,\n        routeParamList,\n        routeGetIdList\n      },\n      emitter\n    });\n    var onRouteFocus = (0, require(_dependencyMap[24], \"./useOnRouteFocus.js\").useOnRouteFocus)({\n      router,\n      key: route?.key,\n      getState,\n      setState\n    });\n    var navigation = (0, require(_dependencyMap[25], \"./useNavigationHelpers.js\").useNavigationHelpers)({\n      id: options.id,\n      onAction,\n      getState,\n      emitter,\n      router,\n      stateRef\n    });\n    (0, require(_dependencyMap[26], \"./useFocusedListenersChildrenAdapter.js\").useFocusedListenersChildrenAdapter)({\n      navigation,\n      focusedListeners: childListeners.focus\n    });\n    (0, require(_dependencyMap[27], \"./useOnGetState.js\").useOnGetState)({\n      getState,\n      getStateListeners: keyedListeners.getState\n    });\n    var _ref3 = (0, require(_dependencyMap[28], \"./useDescriptors.js\").useDescriptors)({\n        state,\n        screens,\n        navigation,\n        screenOptions,\n        screenLayout,\n        onAction,\n        getState,\n        setState,\n        onRouteFocus,\n        addListener,\n        addKeyedListener,\n        router,\n        // @ts-expect-error: this should have both core and custom events, but too much work right now\n        emitter\n      }),\n      describe = _ref3.describe,\n      descriptors = _ref3.descriptors;\n    (0, require(_dependencyMap[29], \"./useCurrentRender.js\").useCurrentRender)({\n      state,\n      navigation,\n      descriptors\n    });\n    var NavigationContent = (0, require(_dependencyMap[30], \"./useComponent.js\").useComponent)(children => {\n      var element = layout != null ? layout({\n        state,\n        descriptors,\n        navigation,\n        children\n      }) : children;\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(require(_dependencyMap[31], \"./NavigationHelpersContext.js\").NavigationHelpersContext.Provider, {\n        value: navigation,\n        children: /*#__PURE__*/(0, _jsxRuntime.jsx)(require(_dependencyMap[32], \"./PreventRemoveProvider.js\").PreventRemoveProvider, {\n          children: element\n        })\n      });\n    });\n    return {\n      state,\n      navigation,\n      describe,\n      descriptors,\n      NavigationContent\n    };\n  }\n});","lineCount":485,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,1,13],[5,6,1,13,"_objectWithoutProperties"],[5,30,1,13],[5,33,1,13,"require"],[5,40,1,13],[5,41,1,13,"_dependencyMap"],[5,55,1,13],[6,2,1,13],[6,6,1,13,"_excluded"],[6,15,1,13],[7,2,3,0,"Object"],[7,8,3,6],[7,9,3,7,"defineProperty"],[7,23,3,21],[7,24,3,22,"exports"],[7,31,3,29],[7,33,3,31],[7,45,3,43],[7,47,3,45],[8,4,4,2,"value"],[8,9,4,7],[8,11,4,9],[9,2,5,0],[9,3,5,1],[9,4,5,2],[10,2,6,0,"exports"],[10,9,6,7],[10,10,6,8,"useNavigationBuilder"],[10,30,6,28],[10,33,6,31,"useNavigationBuilder"],[10,53,6,51],[11,2,8,0],[11,6,8,4,"React"],[11,11,8,9],[11,14,8,12,"_interopRequireWildcard"],[11,37,8,35],[11,38,8,36,"require"],[11,45,8,43],[11,46,8,43,"_dependencyMap"],[11,60,8,43],[11,72,8,51],[11,73,8,52],[11,74,8,53],[12,2,10,0],[12,6,10,4,"_useLatestCallback"],[12,24,10,22],[12,27,10,25,"_interopRequireDefault"],[12,49,10,47],[12,50,10,48,"require"],[12,57,10,55],[12,58,10,55,"_dependencyMap"],[12,72,10,55],[12,98,10,77],[12,99,10,78],[12,100,10,79],[13,2,37,0],[13,6,37,4,"_jsxRuntime"],[13,17,37,15],[13,20,37,18,"require"],[13,27,37,25],[13,28,37,25,"_dependencyMap"],[13,42,37,25],[13,66,37,45],[13,67,37,46],[14,2,38,0],[14,11,38,9,"_interopRequireDefault"],[14,33,38,31,"_interopRequireDefault"],[14,34,38,32,"e"],[14,35,38,33],[14,37,38,35],[15,4,38,37],[15,11,38,44,"e"],[15,12,38,45],[15,16,38,49,"e"],[15,17,38,50],[15,18,38,51,"__esModule"],[15,28,38,61],[15,31,38,64,"e"],[15,32,38,65],[15,35,38,68],[16,6,38,70,"default"],[16,13,38,77],[16,15,38,79,"e"],[17,4,38,81],[17,5,38,82],[18,2,38,84],[19,2,39,0],[19,11,39,9,"_getRequireWildcardCache"],[19,35,39,33,"_getRequireWildcardCache"],[19,36,39,34,"e"],[19,37,39,35],[19,39,39,37],[20,4,39,39],[20,8,39,43],[20,18,39,53],[20,22,39,57],[20,29,39,64,"WeakMap"],[20,36,39,71],[20,38,39,73],[20,45,39,80],[20,49,39,84],[21,4,39,86],[21,8,39,90,"r"],[21,9,39,91],[21,12,39,94],[21,16,39,98,"WeakMap"],[21,23,39,105],[21,24,39,106],[21,25,39,107],[22,6,39,109,"t"],[22,7,39,110],[22,10,39,113],[22,14,39,117,"WeakMap"],[22,21,39,124],[22,22,39,125],[22,23,39,126],[23,4,39,128],[23,11,39,135],[23,12,39,136,"_getRequireWildcardCache"],[23,36,39,160],[23,39,39,163],[23,48,39,163,"_getRequireWildcardCache"],[23,49,39,173,"e"],[23,50,39,174],[23,52,39,176],[24,6,39,178],[24,13,39,185,"e"],[24,14,39,186],[24,17,39,189,"t"],[24,18,39,190],[24,21,39,193,"r"],[24,22,39,194],[25,4,39,196],[25,5,39,197],[25,7,39,199,"e"],[25,8,39,200],[25,9,39,201],[26,2,39,203],[27,2,40,0],[27,11,40,9,"_interopRequireWildcard"],[27,34,40,32,"_interopRequireWildcard"],[27,35,40,33,"e"],[27,36,40,34],[27,38,40,36,"r"],[27,39,40,37],[27,41,40,39],[28,4,40,41],[28,8,40,45],[28,9,40,46,"r"],[28,10,40,47],[28,14,40,51,"e"],[28,15,40,52],[28,19,40,56,"e"],[28,20,40,57],[28,21,40,58,"__esModule"],[28,31,40,68],[28,33,40,70],[28,40,40,77,"e"],[28,41,40,78],[29,4,40,80],[29,8,40,84],[29,12,40,88],[29,17,40,93,"e"],[29,18,40,94],[29,22,40,98],[29,30,40,106],[29,34,40,110],[29,41,40,117,"e"],[29,42,40,118],[29,46,40,122],[29,56,40,132],[29,60,40,136],[29,67,40,143,"e"],[29,68,40,144],[29,70,40,146],[29,77,40,153],[30,6,40,155,"default"],[30,13,40,162],[30,15,40,164,"e"],[31,4,40,166],[31,5,40,167],[32,4,40,169],[32,8,40,173,"t"],[32,9,40,174],[32,12,40,177,"_getRequireWildcardCache"],[32,36,40,201],[32,37,40,202,"r"],[32,38,40,203],[32,39,40,204],[33,4,40,206],[33,8,40,210,"t"],[33,9,40,211],[33,13,40,215,"t"],[33,14,40,216],[33,15,40,217,"has"],[33,18,40,220],[33,19,40,221,"e"],[33,20,40,222],[33,21,40,223],[33,23,40,225],[33,30,40,232,"t"],[33,31,40,233],[33,32,40,234,"get"],[33,35,40,237],[33,36,40,238,"e"],[33,37,40,239],[33,38,40,240],[34,4,40,242],[34,8,40,246,"n"],[34,9,40,247],[34,12,40,250],[35,8,40,252,"__proto__"],[35,17,40,261],[35,19,40,263],[36,6,40,268],[36,7,40,269],[37,6,40,271,"a"],[37,7,40,272],[37,10,40,275,"Object"],[37,16,40,281],[37,17,40,282,"defineProperty"],[37,31,40,296],[37,35,40,300,"Object"],[37,41,40,306],[37,42,40,307,"getOwnPropertyDescriptor"],[37,66,40,331],[38,4,40,333],[38,9,40,338],[38,13,40,342,"u"],[38,14,40,343],[38,18,40,347,"e"],[38,19,40,348],[38,21,40,350],[38,25,40,354],[38,34,40,363],[38,39,40,368,"u"],[38,40,40,369],[38,44,40,373],[38,45,40,374],[38,46,40,375],[38,47,40,376,"hasOwnProperty"],[38,61,40,390],[38,62,40,391,"call"],[38,66,40,395],[38,67,40,396,"e"],[38,68,40,397],[38,70,40,399,"u"],[38,71,40,400],[38,72,40,401],[38,74,40,403],[39,6,40,405],[39,10,40,409,"i"],[39,11,40,410],[39,14,40,413,"a"],[39,15,40,414],[39,18,40,417,"Object"],[39,24,40,423],[39,25,40,424,"getOwnPropertyDescriptor"],[39,49,40,448],[39,50,40,449,"e"],[39,51,40,450],[39,53,40,452,"u"],[39,54,40,453],[39,55,40,454],[39,58,40,457],[39,62,40,461],[40,6,40,463,"i"],[40,7,40,464],[40,12,40,469,"i"],[40,13,40,470],[40,14,40,471,"get"],[40,17,40,474],[40,21,40,478,"i"],[40,22,40,479],[40,23,40,480,"set"],[40,26,40,483],[40,27,40,484],[40,30,40,487,"Object"],[40,36,40,493],[40,37,40,494,"defineProperty"],[40,51,40,508],[40,52,40,509,"n"],[40,53,40,510],[40,55,40,512,"u"],[40,56,40,513],[40,58,40,515,"i"],[40,59,40,516],[40,60,40,517],[40,63,40,520,"n"],[40,64,40,521],[40,65,40,522,"u"],[40,66,40,523],[40,67,40,524],[40,70,40,527,"e"],[40,71,40,528],[40,72,40,529,"u"],[40,73,40,530],[40,74,40,531],[41,4,40,533],[42,4,40,535],[42,11,40,542,"n"],[42,12,40,543],[42,13,40,544,"default"],[42,20,40,551],[42,23,40,554,"e"],[42,24,40,555],[42,26,40,557,"t"],[42,27,40,558],[42,31,40,562,"t"],[42,32,40,563],[42,33,40,564,"set"],[42,36,40,567],[42,37,40,568,"e"],[42,38,40,569],[42,40,40,571,"n"],[42,41,40,572],[42,42,40,573],[42,44,40,575,"n"],[42,45,40,576],[43,2,40,578],[44,2,41,0],[45,2,42,0,"require"],[45,9,42,0],[45,10,42,0,"_dependencyMap"],[45,24,42,0],[45,43,42,7,"PrivateValueStore"],[45,60,42,24],[46,2,43,0],[46,6,43,6,"isValidKey"],[46,16,43,16],[46,19,43,19,"key"],[46,22,43,22],[46,26,43,26,"key"],[46,29,43,29],[46,34,43,34,"undefined"],[46,43,43,43],[46,47,43,47],[46,54,43,54,"key"],[46,57,43,57],[46,62,43,62],[46,70,43,70],[46,74,43,74,"key"],[46,77,43,77],[46,82,43,82],[46,84,43,84],[48,2,45,0],[49,0,46,0],[50,0,47,0],[51,0,48,0],[52,0,49,0],[53,2,50,0],[53,6,50,6,"getRouteConfigsFromChildren"],[53,33,50,33],[53,36,50,36,"getRouteConfigsFromChildren"],[53,37,50,37,"children"],[53,45,50,45],[53,47,50,47,"groupKey"],[53,55,50,55],[53,57,50,57,"groupOptions"],[53,69,50,69],[53,71,50,71,"groupLayout"],[53,82,50,82],[53,87,50,87],[54,4,51,2],[54,8,51,8,"configs"],[54,15,51,15],[54,18,51,18,"React"],[54,23,51,23],[54,24,51,24,"Children"],[54,32,51,32],[54,33,51,33,"toArray"],[54,40,51,40],[54,41,51,41,"children"],[54,49,51,49],[54,50,51,50],[54,51,51,51,"reduce"],[54,57,51,57],[54,58,51,58],[54,59,51,59,"acc"],[54,62,51,62],[54,64,51,64,"child"],[54,69,51,69],[54,74,51,74],[55,6,52,4],[55,10,52,8],[55,23,52,21,"React"],[55,28,52,26],[55,29,52,27,"isValidElement"],[55,43,52,41],[55,44,52,42,"child"],[55,49,52,47],[55,50,52,48],[55,52,52,50],[56,8,53,6],[56,12,53,10,"child"],[56,17,53,15],[56,18,53,16,"type"],[56,22,53,20],[56,27,53,25,"require"],[56,34,53,25],[56,35,53,25,"_dependencyMap"],[56,49,53,25],[56,69,53,33,"Screen"],[56,75,53,39],[56,77,53,41],[57,10,54,8],[58,10,55,8],[60,10,57,8],[60,14,57,12],[60,15,57,13,"isValidKey"],[60,25,57,23],[60,26,57,24,"child"],[60,31,57,29],[60,32,57,30,"props"],[60,37,57,35],[60,38,57,36,"navigationKey"],[60,51,57,49],[60,52,57,50],[60,54,57,52],[61,12,58,10],[61,18,58,16],[61,22,58,20,"Error"],[61,27,58,25],[61,28,58,26],[61,68,58,66,"JSON"],[61,72,58,70],[61,73,58,71,"stringify"],[61,82,58,80],[61,83,58,81,"child"],[61,88,58,86],[61,89,58,87,"props"],[61,94,58,92],[61,95,58,93,"navigationKey"],[61,108,58,106],[61,109,58,107],[61,130,58,128,"child"],[61,135,58,133],[61,136,58,134,"props"],[61,141,58,139],[61,142,58,140,"name"],[61,146,58,144],[61,196,58,194],[61,197,58,195],[62,10,59,8],[63,10,60,8,"acc"],[63,13,60,11],[63,14,60,12,"push"],[63,18,60,16],[63,19,60,17],[64,12,61,10,"keys"],[64,16,61,14],[64,18,61,16],[64,19,61,17,"groupKey"],[64,27,61,25],[64,29,61,27,"child"],[64,34,61,32],[64,35,61,33,"props"],[64,40,61,38],[64,41,61,39,"navigationKey"],[64,54,61,52],[64,55,61,53],[65,12,62,10,"options"],[65,19,62,17],[65,21,62,19,"groupOptions"],[65,33,62,31],[66,12,63,10,"layout"],[66,18,63,16],[66,20,63,18,"groupLayout"],[66,31,63,29],[67,12,64,10,"props"],[67,17,64,15],[67,19,64,17,"child"],[67,24,64,22],[67,25,64,23,"props"],[68,10,65,8],[68,11,65,9],[68,12,65,10],[69,10,66,8],[69,17,66,15,"acc"],[69,20,66,18],[70,8,67,6],[71,8,68,6],[71,12,68,10,"child"],[71,17,68,15],[71,18,68,16,"type"],[71,22,68,20],[71,27,68,25,"React"],[71,32,68,30],[71,33,68,31,"Fragment"],[71,41,68,39],[71,45,68,43,"child"],[71,50,68,48],[71,51,68,49,"type"],[71,55,68,53],[71,60,68,58,"require"],[71,67,68,58],[71,68,68,58,"_dependencyMap"],[71,82,68,58],[71,101,68,65,"Group"],[71,106,68,70],[71,108,68,72],[72,10,69,8],[72,14,69,12],[72,15,69,13,"isValidKey"],[72,25,69,23],[72,26,69,24,"child"],[72,31,69,29],[72,32,69,30,"props"],[72,37,69,35],[72,38,69,36,"navigationKey"],[72,51,69,49],[72,52,69,50],[72,54,69,52],[73,12,70,10],[73,18,70,16],[73,22,70,20,"Error"],[73,27,70,25],[73,28,70,26],[73,68,70,66,"JSON"],[73,72,70,70],[73,73,70,71,"stringify"],[73,82,70,80],[73,83,70,81,"child"],[73,88,70,86],[73,89,70,87,"props"],[73,94,70,92],[73,95,70,93,"navigationKey"],[73,108,70,106],[73,109,70,107],[73,173,70,171],[73,174,70,172],[74,10,71,8],[76,10,73,8],[77,10,74,8],[78,10,75,8,"acc"],[78,13,75,11],[78,14,75,12,"push"],[78,18,75,16],[78,19,75,17],[78,22,75,20,"getRouteConfigsFromChildren"],[78,49,75,47],[78,50,75,48,"child"],[78,55,75,53],[78,56,75,54,"props"],[78,61,75,59],[78,62,75,60,"children"],[78,70,75,68],[78,72,75,70,"child"],[78,77,75,75],[78,78,75,76,"props"],[78,83,75,81],[78,84,75,82,"navigationKey"],[78,97,75,95],[78,99,75,97,"child"],[78,104,75,102],[78,105,75,103,"type"],[78,109,75,107],[78,114,75,112,"require"],[78,121,75,112],[78,122,75,112,"_dependencyMap"],[78,136,75,112],[78,155,75,119,"Group"],[78,160,75,124],[78,163,75,127,"groupOptions"],[78,175,75,139],[78,178,75,142,"groupOptions"],[78,190,75,154],[78,194,75,158],[78,198,75,162],[78,201,75,165],[78,202,75,166],[78,205,75,169,"groupOptions"],[78,217,75,181],[78,219,75,183,"child"],[78,224,75,188],[78,225,75,189,"props"],[78,230,75,194],[78,231,75,195,"screenOptions"],[78,244,75,208],[78,245,75,209],[78,248,75,212],[78,249,75,213,"child"],[78,254,75,218],[78,255,75,219,"props"],[78,260,75,224],[78,261,75,225,"screenOptions"],[78,274,75,238],[78,275,75,239],[78,277,75,241],[78,284,75,248,"child"],[78,289,75,253],[78,290,75,254,"props"],[78,295,75,259],[78,296,75,260,"screenLayout"],[78,308,75,272],[78,313,75,277],[78,323,75,287],[78,326,75,290,"child"],[78,331,75,295],[78,332,75,296,"props"],[78,337,75,301],[78,338,75,302,"screenLayout"],[78,350,75,314],[78,353,75,317,"groupLayout"],[78,364,75,328],[78,365,75,329],[78,366,75,330],[79,10,76,8],[79,17,76,15,"acc"],[79,20,76,18],[80,8,77,6],[81,6,78,4],[82,6,79,4],[82,12,79,10],[82,16,79,14,"Error"],[82,21,79,19],[82,22,79,20],[82,122,79,120],[82,135,79,133,"React"],[82,140,79,138],[82,141,79,139,"isValidElement"],[82,155,79,153],[82,156,79,154,"child"],[82,161,79,159],[82,162,79,160],[82,165,79,163],[82,169,79,167],[82,176,79,174,"child"],[82,181,79,179],[82,182,79,180,"type"],[82,186,79,184],[82,191,79,189],[82,199,79,197],[82,202,79,200,"child"],[82,207,79,205],[82,208,79,206,"type"],[82,212,79,210],[82,215,79,213,"child"],[82,220,79,218],[82,221,79,219,"type"],[82,225,79,223],[82,227,79,225,"name"],[82,231,79,229],[82,235,79,233,"child"],[82,240,79,238],[82,241,79,239,"props"],[82,246,79,244],[82,250,79,248],[82,254,79,252],[82,258,79,256],[82,265,79,263,"child"],[82,270,79,268],[82,271,79,269,"props"],[82,276,79,274],[82,281,79,279],[82,289,79,287],[82,293,79,291],[82,299,79,297],[82,303,79,301,"child"],[82,308,79,306],[82,309,79,307,"props"],[82,314,79,312],[82,318,79,316,"child"],[82,323,79,321],[82,324,79,322,"props"],[82,329,79,327],[82,331,79,329,"name"],[82,335,79,333],[82,338,79,336],[82,358,79,356,"child"],[82,363,79,361],[82,364,79,362,"props"],[82,369,79,367],[82,370,79,368,"name"],[82,374,79,372],[82,377,79,375],[82,380,79,378],[82,382,79,380],[82,384,79,382],[82,387,79,385],[82,394,79,392,"child"],[82,399,79,397],[82,404,79,402],[82,412,79,410],[82,415,79,413,"JSON"],[82,419,79,417],[82,420,79,418,"stringify"],[82,429,79,427],[82,430,79,428,"child"],[82,435,79,433],[82,436,79,434],[82,439,79,437],[82,443,79,441,"String"],[82,449,79,447],[82,450,79,448,"child"],[82,455,79,453],[82,456,79,454],[82,459,79,457],[82,551,79,549],[82,552,79,550],[83,4,80,2],[83,5,80,3],[83,7,80,5],[83,9,80,7],[83,10,80,8],[84,4,81,2],[84,8,81,6,"process"],[84,15,81,13],[84,16,81,14,"env"],[84,19,81,17],[84,20,81,18,"NODE_ENV"],[84,28,81,26],[84,33,81,31],[84,45,81,43],[84,47,81,45],[85,6,82,4,"configs"],[85,13,82,11],[85,14,82,12,"forEach"],[85,21,82,19],[85,22,82,20,"config"],[85,28,82,26],[85,32,82,30],[86,8,83,6],[86,12,83,6,"_config$props"],[86,25,83,6],[86,28,88,10,"config"],[86,34,88,16],[86,35,88,17,"props"],[86,40,88,22],[87,10,84,8,"name"],[87,14,84,12],[87,17,84,12,"_config$props"],[87,30,84,12],[87,31,84,8,"name"],[87,35,84,12],[88,10,85,8,"children"],[88,18,85,16],[88,21,85,16,"_config$props"],[88,34,85,16],[88,35,85,8,"children"],[88,43,85,16],[89,10,86,8,"component"],[89,19,86,17],[89,22,86,17,"_config$props"],[89,35,86,17],[89,36,86,8,"component"],[89,45,86,17],[90,10,87,8,"getComponent"],[90,22,87,20],[90,25,87,20,"_config$props"],[90,38,87,20],[90,39,87,8,"getComponent"],[90,51,87,20],[91,8,89,6],[91,12,89,10],[91,19,89,17,"name"],[91,23,89,21],[91,28,89,26],[91,36,89,34],[91,40,89,38],[91,41,89,39,"name"],[91,45,89,43],[91,47,89,45],[92,10,90,8],[92,16,90,14],[92,20,90,18,"Error"],[92,25,90,23],[92,26,90,24],[92,50,90,48,"JSON"],[92,54,90,52],[92,55,90,53,"stringify"],[92,64,90,62],[92,65,90,63,"name"],[92,69,90,67],[92,70,90,68],[92,120,90,118],[92,121,90,119],[93,8,91,6],[94,8,92,6],[94,12,92,10,"children"],[94,20,92,18],[94,24,92,22],[94,28,92,26],[94,32,92,30,"component"],[94,41,92,39],[94,46,92,44,"undefined"],[94,55,92,53],[94,59,92,57,"getComponent"],[94,71,92,69],[94,76,92,74,"undefined"],[94,85,92,83],[94,87,92,85],[95,10,93,8],[95,14,93,12,"children"],[95,22,93,20],[95,26,93,24],[95,30,93,28],[95,34,93,32,"component"],[95,43,93,41],[95,48,93,46,"undefined"],[95,57,93,55],[95,59,93,57],[96,12,94,10],[96,18,94,16],[96,22,94,20,"Error"],[96,27,94,25],[96,28,94,26],[96,89,94,87,"name"],[96,93,94,91],[96,129,94,127],[96,130,94,128],[97,10,95,8],[98,10,96,8],[98,14,96,12,"children"],[98,22,96,20],[98,26,96,24],[98,30,96,28],[98,34,96,32,"getComponent"],[98,46,96,44],[98,51,96,49,"undefined"],[98,60,96,58],[98,62,96,60],[99,12,97,10],[99,18,97,16],[99,22,97,20,"Error"],[99,27,97,25],[99,28,97,26],[99,92,97,90,"name"],[99,96,97,94],[99,132,97,130],[99,133,97,131],[100,10,98,8],[101,10,99,8],[101,14,99,12,"component"],[101,23,99,21],[101,28,99,26,"undefined"],[101,37,99,35],[101,41,99,39,"getComponent"],[101,53,99,51],[101,58,99,56,"undefined"],[101,67,99,65],[101,69,99,67],[102,12,100,10],[102,18,100,16],[102,22,100,20,"Error"],[102,27,100,25],[102,28,100,26],[102,93,100,91,"name"],[102,97,100,95],[102,133,100,131],[102,134,100,132],[103,10,101,8],[104,10,102,8],[104,14,102,12,"children"],[104,22,102,20],[104,26,102,24],[104,30,102,28],[104,34,102,32],[104,41,102,39,"children"],[104,49,102,47],[104,54,102,52],[104,64,102,62],[104,66,102,64],[105,12,103,10],[105,18,103,16],[105,22,103,20,"Error"],[105,27,103,25],[105,28,103,26],[105,88,103,86,"name"],[105,92,103,90],[105,145,103,143],[105,146,103,144],[106,10,104,8],[107,10,105,8],[107,14,105,12,"component"],[107,23,105,21],[107,28,105,26,"undefined"],[107,37,105,35],[107,41,105,39],[107,42,105,40],[107,43,105,41],[107,44,105,42],[107,46,105,44,"require"],[107,53,105,44],[107,54,105,44,"_dependencyMap"],[107,68,105,44],[107,85,105,53,"isValidElementType"],[107,103,105,71],[107,105,105,73,"component"],[107,114,105,82],[107,115,105,83],[107,117,105,85],[108,12,106,10],[108,18,106,16],[108,22,106,20,"Error"],[108,27,106,25],[108,28,106,26],[108,89,106,87,"name"],[108,93,106,91],[108,133,106,131],[108,134,106,132],[109,10,107,8],[110,10,108,8],[110,14,108,12,"getComponent"],[110,26,108,24],[110,31,108,29,"undefined"],[110,40,108,38],[110,44,108,42],[110,51,108,49,"getComponent"],[110,63,108,61],[110,68,108,66],[110,78,108,76],[110,80,108,78],[111,12,109,10],[111,18,109,16],[111,22,109,20,"Error"],[111,27,109,25],[111,28,109,26],[111,92,109,90,"name"],[111,96,109,94],[111,151,109,149],[111,152,109,150],[112,10,110,8],[113,10,111,8],[113,14,111,12],[113,21,111,19,"component"],[113,30,111,28],[113,35,111,33],[113,45,111,43],[113,47,111,45],[114,12,112,10],[114,16,112,14,"component"],[114,25,112,23],[114,26,112,24,"name"],[114,30,112,28],[114,35,112,33],[114,46,112,44],[114,48,112,46],[115,14,113,12],[116,14,114,12],[117,14,115,12],[118,14,116,12,"console"],[118,21,116,19],[118,22,116,20,"warn"],[118,26,116,24],[118,27,116,25],[118,112,116,110,"name"],[118,116,116,114],[118,395,116,393],[118,396,116,394],[119,12,117,10],[119,13,117,11],[119,19,117,17],[119,23,117,21],[119,31,117,29],[119,32,117,30,"test"],[119,36,117,34],[119,37,117,35,"component"],[119,46,117,44],[119,47,117,45,"name"],[119,51,117,49],[119,52,117,50],[119,54,117,52],[120,14,118,12,"console"],[120,21,118,19],[120,22,118,20,"warn"],[120,26,118,24],[120,27,118,25],[120,61,118,59,"component"],[120,70,118,68],[120,71,118,69,"name"],[120,75,118,73],[120,96,118,94,"name"],[120,100,118,98],[120,301,118,299],[120,302,118,300],[121,12,119,10],[122,10,120,8],[123,8,121,6],[123,9,121,7],[123,15,121,13],[124,10,122,8],[124,16,122,14],[124,20,122,18,"Error"],[124,25,122,23],[124,26,122,24],[124,108,122,106,"name"],[124,112,122,110],[124,293,122,291],[124,294,122,292],[125,8,123,6],[126,6,124,4],[126,7,124,5],[126,8,124,6],[127,4,125,2],[128,4,126,2],[128,11,126,9,"configs"],[128,18,126,16],[129,2,127,0],[129,3,127,1],[131,2,129,0],[132,0,130,0],[133,0,131,0],[134,0,132,0],[135,0,133,0],[136,0,134,0],[137,0,135,0],[138,2,136,0],[138,11,136,9,"useNavigationBuilder"],[138,31,136,29,"useNavigationBuilder"],[138,32,136,30,"createRouter"],[138,44,136,42],[138,46,136,44,"options"],[138,53,136,51],[138,55,136,53],[139,4,137,2],[139,8,137,8,"navigatorKey"],[139,20,137,20],[139,23,137,23],[139,24,137,24],[139,25,137,25],[139,27,137,27,"require"],[139,34,137,27],[139,35,137,27,"_dependencyMap"],[139,49,137,27],[139,83,137,49,"useRegisterNavigator"],[139,103,137,69],[139,105,137,71],[139,106,137,72],[140,4,138,2],[140,8,138,8,"route"],[140,13,138,13],[140,16,138,16,"React"],[140,21,138,21],[140,22,138,22,"useContext"],[140,32,138,32],[140,33,138,33,"require"],[140,40,138,33],[140,41,138,33,"_dependencyMap"],[140,55,138,33],[140,92,138,57,"NavigationRouteContext"],[140,114,138,79],[140,115,138,80],[141,4,139,2],[141,8,140,4,"children"],[141,16,140,12],[141,19,146,6,"options"],[141,26,146,13],[141,27,140,4,"children"],[141,35,140,12],[142,6,141,4,"layout"],[142,12,141,10],[142,15,146,6,"options"],[142,22,146,13],[142,23,141,4,"layout"],[142,29,141,10],[143,6,142,4,"screenOptions"],[143,19,142,17],[143,22,146,6,"options"],[143,29,146,13],[143,30,142,4,"screenOptions"],[143,43,142,17],[144,6,143,4,"screenLayout"],[144,18,143,16],[144,21,146,6,"options"],[144,28,146,13],[144,29,143,4,"screenLayout"],[144,41,143,16],[145,6,144,4,"screenListeners"],[145,21,144,19],[145,24,146,6,"options"],[145,31,146,13],[145,32,144,4,"screenListeners"],[145,47,144,19],[146,6,145,7,"rest"],[146,10,145,11],[146,13,145,11,"_objectWithoutProperties"],[146,37,145,11],[146,38,146,6,"options"],[146,45,146,13],[146,47,146,13,"_excluded"],[146,56,146,13],[147,4,147,2],[147,8,147,8,"routeConfigs"],[147,20,147,20],[147,23,147,23,"getRouteConfigsFromChildren"],[147,50,147,50],[147,51,147,51,"children"],[147,59,147,59],[147,60,147,60],[148,4,148,2],[148,8,148,8,"router"],[148,14,148,14],[148,17,148,17],[148,18,148,18],[148,19,148,19],[148,21,148,21,"require"],[148,28,148,21],[148,29,148,21,"_dependencyMap"],[148,43,148,21],[148,70,148,35,"useLazyValue"],[148,82,148,47],[148,84,148,49],[148,90,148,55],[149,6,149,4],[149,10,149,8,"rest"],[149,14,149,12],[149,15,149,13,"initialRouteName"],[149,31,149,29],[149,35,149,33],[149,39,149,37],[149,43,149,41,"routeConfigs"],[149,55,149,53],[149,56,149,54,"every"],[149,61,149,59],[149,62,149,60,"config"],[149,68,149,66],[149,72,149,70,"config"],[149,78,149,76],[149,79,149,77,"props"],[149,84,149,82],[149,85,149,83,"name"],[149,89,149,87],[149,94,149,92,"rest"],[149,98,149,96],[149,99,149,97,"initialRouteName"],[149,115,149,113],[149,116,149,114],[149,118,149,116],[150,8,150,6],[150,14,150,12],[150,18,150,16,"Error"],[150,23,150,21],[150,24,150,22],[150,57,150,55,"rest"],[150,61,150,59],[150,62,150,60,"initialRouteName"],[150,78,150,76],[150,111,150,109],[150,112,150,110],[151,6,151,4],[152,6,152,4],[152,13,152,11,"createRouter"],[152,25,152,23],[152,26,152,24,"rest"],[152,30,152,28],[152,31,152,29],[153,4,153,2],[153,5,153,3],[153,6,153,4],[154,4,154,2],[154,8,154,8,"screens"],[154,15,154,15],[154,18,154,18,"routeConfigs"],[154,30,154,30],[154,31,154,31,"reduce"],[154,37,154,37],[154,38,154,38],[154,39,154,39,"acc"],[154,42,154,42],[154,44,154,44,"config"],[154,50,154,50],[154,55,154,55],[155,6,155,4],[155,10,155,8,"config"],[155,16,155,14],[155,17,155,15,"props"],[155,22,155,20],[155,23,155,21,"name"],[155,27,155,25],[155,31,155,29,"acc"],[155,34,155,32],[155,36,155,34],[156,8,156,6],[156,14,156,12],[156,18,156,16,"Error"],[156,23,156,21],[156,24,156,22],[156,133,156,131,"config"],[156,139,156,137],[156,140,156,138,"props"],[156,145,156,143],[156,146,156,144,"name"],[156,150,156,148],[156,154,156,152],[156,155,156,153],[157,6,157,4],[158,6,158,4,"acc"],[158,9,158,7],[158,10,158,8,"config"],[158,16,158,14],[158,17,158,15,"props"],[158,22,158,20],[158,23,158,21,"name"],[158,27,158,25],[158,28,158,26],[158,31,158,29,"config"],[158,37,158,35],[159,6,159,4],[159,13,159,11,"acc"],[159,16,159,14],[160,4,160,2],[160,5,160,3],[160,7,160,5],[160,8,160,6],[160,9,160,7],[160,10,160,8],[161,4,161,2],[161,8,161,8,"routeNames"],[161,18,161,18],[161,21,161,21,"routeConfigs"],[161,33,161,33],[161,34,161,34,"map"],[161,37,161,37],[161,38,161,38,"config"],[161,44,161,44],[161,48,161,48,"config"],[161,54,161,54],[161,55,161,55,"props"],[161,60,161,60],[161,61,161,61,"name"],[161,65,161,65],[161,66,161,66],[162,4,162,2],[162,8,162,8,"routeKeyList"],[162,20,162,20],[162,23,162,23,"routeNames"],[162,33,162,33],[162,34,162,34,"reduce"],[162,40,162,40],[162,41,162,41],[162,42,162,42,"acc"],[162,45,162,45],[162,47,162,47,"curr"],[162,51,162,51],[162,56,162,56],[163,6,163,4,"acc"],[163,9,163,7],[163,10,163,8,"curr"],[163,14,163,12],[163,15,163,13],[163,18,163,16,"screens"],[163,25,163,23],[163,26,163,24,"curr"],[163,30,163,28],[163,31,163,29],[163,32,163,30,"keys"],[163,36,163,34],[163,37,163,35,"map"],[163,40,163,38],[163,41,163,39,"key"],[163,44,163,42],[163,48,163,46,"key"],[163,51,163,49],[163,55,163,53],[163,57,163,55],[163,58,163,56],[163,59,163,57,"join"],[163,63,163,61],[163,64,163,62],[163,67,163,65],[163,68,163,66],[164,6,164,4],[164,13,164,11,"acc"],[164,16,164,14],[165,4,165,2],[165,5,165,3],[165,7,165,5],[165,8,165,6],[165,9,165,7],[165,10,165,8],[166,4,166,2],[166,8,166,8,"routeParamList"],[166,22,166,22],[166,25,166,25,"routeNames"],[166,35,166,35],[166,36,166,36,"reduce"],[166,42,166,42],[166,43,166,43],[166,44,166,44,"acc"],[166,47,166,47],[166,49,166,49,"curr"],[166,53,166,53],[166,58,166,58],[167,6,167,4],[167,10,168,6,"initialParams"],[167,23,168,19],[167,26,169,8,"screens"],[167,33,169,15],[167,34,169,16,"curr"],[167,38,169,20],[167,39,169,21],[167,40,169,22,"props"],[167,45,169,27],[167,46,168,6,"initialParams"],[167,59,168,19],[168,6,170,4,"acc"],[168,9,170,7],[168,10,170,8,"curr"],[168,14,170,12],[168,15,170,13],[168,18,170,16,"initialParams"],[168,31,170,29],[169,6,171,4],[169,13,171,11,"acc"],[169,16,171,14],[170,4,172,2],[170,5,172,3],[170,7,172,5],[170,8,172,6],[170,9,172,7],[170,10,172,8],[171,4,173,2],[171,8,173,8,"routeGetIdList"],[171,22,173,22],[171,25,173,25,"routeNames"],[171,35,173,35],[171,36,173,36,"reduce"],[171,42,173,42],[171,43,173,43],[171,44,173,44,"acc"],[171,47,173,47],[171,49,173,49,"curr"],[171,53,173,53],[171,58,173,58,"Object"],[171,64,173,64],[171,65,173,65,"assign"],[171,71,173,71],[171,72,173,72,"acc"],[171,75,173,75],[171,77,173,77],[172,6,174,4],[172,7,174,5,"curr"],[172,11,174,9],[172,14,174,12,"screens"],[172,21,174,19],[172,22,174,20,"curr"],[172,26,174,24],[172,27,174,25],[172,28,174,26,"props"],[172,33,174,31],[172,34,174,32,"getId"],[173,4,175,2],[173,5,175,3],[173,6,175,4],[173,8,175,6],[173,9,175,7],[173,10,175,8],[173,11,175,9],[174,4,176,2],[174,8,176,6],[174,9,176,7,"routeNames"],[174,19,176,17],[174,20,176,18,"length"],[174,26,176,24],[174,28,176,26],[175,6,177,4],[175,12,177,10],[175,16,177,14,"Error"],[175,21,177,19],[175,22,177,20],[175,114,177,112],[175,115,177,113],[176,4,178,2],[177,4,179,2],[177,8,179,8,"isStateValid"],[177,20,179,20],[177,23,179,23,"React"],[177,28,179,28],[177,29,179,29,"useCallback"],[177,40,179,40],[177,41,179,41,"state"],[177,46,179,46],[177,50,179,50,"state"],[177,55,179,55],[177,56,179,56,"type"],[177,60,179,60],[177,65,179,65,"undefined"],[177,74,179,74],[177,78,179,78,"state"],[177,83,179,83],[177,84,179,84,"type"],[177,88,179,88],[177,93,179,93,"router"],[177,99,179,99],[177,100,179,100,"type"],[177,104,179,104],[177,106,179,106],[177,107,179,107,"router"],[177,113,179,113],[177,114,179,114,"type"],[177,118,179,118],[177,119,179,119],[177,120,179,120],[178,4,180,2],[178,8,180,8,"isStateInitialized"],[178,26,180,26],[178,29,180,29,"React"],[178,34,180,34],[178,35,180,35,"useCallback"],[178,46,180,46],[178,47,180,47,"state"],[178,52,180,52],[178,56,180,56,"state"],[178,61,180,61],[178,66,180,66,"undefined"],[178,75,180,75],[178,79,180,79,"state"],[178,84,180,84],[178,85,180,85,"stale"],[178,90,180,90],[178,95,180,95],[178,100,180,100],[178,104,180,104,"isStateValid"],[178,116,180,116],[178,117,180,117,"state"],[178,122,180,122],[178,123,180,123],[178,125,180,125],[178,126,180,126,"isStateValid"],[178,138,180,138],[178,139,180,139],[178,140,180,140],[179,4,181,2],[179,8,181,2,"_React$useContext"],[179,25,181,2],[179,28,188,6,"React"],[179,33,188,11],[179,34,188,12,"useContext"],[179,44,188,22],[179,45,188,23,"require"],[179,52,188,23],[179,53,188,23,"_dependencyMap"],[179,67,188,23],[179,104,188,47,"NavigationStateContext"],[179,126,188,69],[179,127,188,70],[180,6,182,11,"currentState"],[180,18,182,23],[180,21,182,23,"_React$useContext"],[180,38,182,23],[180,39,182,4,"state"],[180,44,182,9],[181,6,183,14,"getCurrentState"],[181,21,183,29],[181,24,183,29,"_React$useContext"],[181,41,183,29],[181,42,183,4,"getState"],[181,50,183,12],[182,6,184,14,"setCurrentState"],[182,21,184,29],[182,24,184,29,"_React$useContext"],[182,41,184,29],[182,42,184,4,"setState"],[182,50,184,12],[183,6,185,4,"setKey"],[183,12,185,10],[183,15,185,10,"_React$useContext"],[183,32,185,10],[183,33,185,4,"setKey"],[183,39,185,10],[184,6,186,4,"getKey"],[184,12,186,10],[184,15,186,10,"_React$useContext"],[184,32,186,10],[184,33,186,4,"getKey"],[184,39,186,10],[185,6,187,4,"getIsInitial"],[185,18,187,16],[185,21,187,16,"_React$useContext"],[185,38,187,16],[185,39,187,4,"getIsInitial"],[185,51,187,16],[186,4,189,2],[186,8,189,8,"stateCleanedUp"],[186,22,189,22],[186,25,189,25,"React"],[186,30,189,30],[186,31,189,31,"useRef"],[186,37,189,37],[186,38,189,38],[186,43,189,43],[186,44,189,44],[187,4,190,2],[187,8,190,8,"setState"],[187,16,190,16],[187,19,190,19],[187,20,190,20],[187,21,190,21],[187,23,190,23,"_useLatestCallback"],[187,41,190,41],[187,42,190,42,"default"],[187,49,190,49],[187,51,190,51,"state"],[187,56,190,56],[187,60,190,60],[188,6,191,4],[188,10,191,8,"stateCleanedUp"],[188,24,191,22],[188,25,191,23,"current"],[188,32,191,30],[188,34,191,32],[189,8,192,6],[190,8,193,6],[191,8,194,6],[192,8,195,6],[193,6,196,4],[194,6,197,4,"setCurrentState"],[194,21,197,19],[194,22,197,20,"state"],[194,27,197,25],[194,28,197,26],[195,4,198,2],[195,5,198,3],[195,6,198,4],[196,4,199,2],[196,8,199,2,"_React$useMemo"],[196,22,199,2],[196,25,199,57,"React"],[196,30,199,62],[196,31,199,63,"useMemo"],[196,38,199,70],[196,39,199,71],[196,45,199,77],[197,8,200,4],[197,12,200,10,"initialRouteParamList"],[197,33,200,31],[197,36,200,34,"routeNames"],[197,46,200,44],[197,47,200,45,"reduce"],[197,53,200,51],[197,54,200,52],[197,55,200,53,"acc"],[197,58,200,56],[197,60,200,58,"curr"],[197,64,200,62],[197,69,200,67],[198,10,201,6],[198,14,202,8,"initialParams"],[198,27,202,21],[198,30,203,10,"screens"],[198,37,203,17],[198,38,203,18,"curr"],[198,42,203,22],[198,43,203,23],[198,44,203,24,"props"],[198,49,203,29],[198,50,202,8,"initialParams"],[198,63,202,21],[199,10,204,6],[199,14,204,12,"initialParamsFromParams"],[199,37,204,35],[199,40,204,38,"route"],[199,45,204,43],[199,47,204,45,"params"],[199,53,204,51],[199,55,204,53,"state"],[199,60,204,58],[199,64,204,62],[199,68,204,66],[199,72,204,70,"route"],[199,77,204,75],[199,79,204,77,"params"],[199,85,204,83],[199,87,204,85,"initial"],[199,94,204,92],[199,99,204,97],[199,104,204,102],[199,108,204,106,"route"],[199,113,204,111],[199,115,204,113,"params"],[199,121,204,119],[199,123,204,121,"screen"],[199,129,204,127],[199,134,204,132,"curr"],[199,138,204,136],[199,141,204,139,"route"],[199,146,204,144],[199,147,204,145,"params"],[199,153,204,151],[199,154,204,152,"params"],[199,160,204,158],[199,163,204,161,"undefined"],[199,172,204,170],[200,10,205,6,"acc"],[200,13,205,9],[200,14,205,10,"curr"],[200,18,205,14],[200,19,205,15],[200,22,205,18,"initialParams"],[200,35,205,31],[200,40,205,36,"undefined"],[200,49,205,45],[200,53,205,49,"initialParamsFromParams"],[200,76,205,72],[200,81,205,77,"undefined"],[200,90,205,86],[200,93,205,89],[201,12,206,8],[201,15,206,11,"initialParams"],[201,28,206,24],[202,12,207,8],[202,15,207,11,"initialParamsFromParams"],[203,10,208,6],[203,11,208,7],[203,14,208,10,"undefined"],[203,23,208,19],[204,10,209,6],[204,17,209,13,"acc"],[204,20,209,16],[205,8,210,4],[205,9,210,5],[205,11,210,7],[205,12,210,8],[205,13,210,9],[205,14,210,10],[207,8,212,4],[208,8,213,4],[209,8,214,4],[210,8,215,4],[211,8,216,4],[211,12,216,8],[211,13,216,9,"currentState"],[211,25,216,21],[211,30,216,26,"undefined"],[211,39,216,35],[211,43,216,39],[211,44,216,40,"isStateValid"],[211,56,216,52],[211,57,216,53,"currentState"],[211,69,216,65],[211,70,216,66],[211,75,216,71,"route"],[211,80,216,76],[211,82,216,78,"params"],[211,88,216,84],[211,90,216,86,"state"],[211,95,216,91],[211,99,216,95],[211,103,216,99],[211,107,216,103],[211,109,216,105],[211,116,216,112,"route"],[211,121,216,117],[211,123,216,119,"params"],[211,129,216,125],[211,131,216,127,"screen"],[211,137,216,133],[211,142,216,138],[211,150,216,146],[211,154,216,150,"route"],[211,159,216,155],[211,161,216,157,"params"],[211,167,216,163],[211,169,216,165,"initial"],[211,176,216,172],[211,181,216,177],[211,186,216,182],[211,187,216,183],[211,189,216,185],[212,10,217,6],[212,17,217,13],[212,18,217,14,"router"],[212,24,217,20],[212,25,217,21,"getInitialState"],[212,40,217,36],[212,41,217,37],[213,12,218,8,"routeNames"],[213,22,218,18],[214,12,219,8,"routeParamList"],[214,26,219,22],[214,28,219,24,"initialRouteParamList"],[214,49,219,45],[215,12,220,8,"routeGetIdList"],[216,10,221,6],[216,11,221,7],[216,12,221,8],[216,14,221,10],[216,18,221,14],[216,19,221,15],[217,8,222,4],[217,9,222,5],[217,15,222,11],[218,10,223,6],[218,14,223,10,"stateFromParams"],[218,29,223,25],[219,10,224,6],[219,14,224,10,"route"],[219,19,224,15],[219,21,224,17,"params"],[219,27,224,23],[219,29,224,25,"state"],[219,34,224,30],[219,38,224,34],[219,42,224,38],[219,44,224,40],[220,12,225,8,"stateFromParams"],[220,27,225,23],[220,30,225,26,"route"],[220,35,225,31],[220,36,225,32,"params"],[220,42,225,38],[220,43,225,39,"state"],[220,48,225,44],[221,10,226,6],[221,11,226,7],[221,17,226,13],[221,21,226,17],[221,28,226,24,"route"],[221,33,226,29],[221,35,226,31,"params"],[221,41,226,37],[221,43,226,39,"screen"],[221,49,226,45],[221,54,226,50],[221,62,226,58],[221,66,226,62,"route"],[221,71,226,67],[221,73,226,69,"params"],[221,79,226,75],[221,81,226,77,"initial"],[221,88,226,84],[221,93,226,89],[221,98,226,94],[221,100,226,96],[222,12,227,8,"stateFromParams"],[222,27,227,23],[222,30,227,26],[223,14,228,10,"index"],[223,19,228,15],[223,21,228,17],[223,22,228,18],[224,14,229,10,"routes"],[224,20,229,16],[224,22,229,18],[224,23,229,19],[225,16,230,12,"name"],[225,20,230,16],[225,22,230,18,"route"],[225,27,230,23],[225,28,230,24,"params"],[225,34,230,30],[225,35,230,31,"screen"],[225,41,230,37],[226,16,231,12,"params"],[226,22,231,18],[226,24,231,20,"route"],[226,29,231,25],[226,30,231,26,"params"],[226,36,231,32],[226,37,231,33,"params"],[226,43,231,39],[227,16,232,12,"path"],[227,20,232,16],[227,22,232,18,"route"],[227,27,232,23],[227,28,232,24,"params"],[227,34,232,30],[227,35,232,31,"path"],[228,14,233,10],[228,15,233,11],[229,12,234,8],[229,13,234,9],[230,10,235,6],[231,10,236,6],[231,17,236,13],[231,18,236,14,"router"],[231,24,236,20],[231,25,236,21,"getRehydratedState"],[231,43,236,39],[231,44,236,40,"stateFromParams"],[231,59,236,55],[231,63,236,59,"currentState"],[231,75,236,71],[231,77,236,73],[232,12,237,8,"routeNames"],[232,22,237,18],[233,12,238,8,"routeParamList"],[233,26,238,22],[233,28,238,24,"initialRouteParamList"],[233,49,238,45],[234,12,239,8,"routeGetIdList"],[235,10,240,6],[235,11,240,7],[235,12,240,8],[235,14,240,10],[235,19,240,15],[235,20,240,16],[236,8,241,4],[237,8,242,4],[238,8,243,4],[239,8,244,4],[240,8,245,4],[241,8,246,4],[242,8,247,4],[243,6,248,2],[243,7,248,3],[243,9,248,5],[243,10,248,6,"currentState"],[243,22,248,18],[243,24,248,20,"router"],[243,30,248,26],[243,32,248,28,"isStateValid"],[243,44,248,40],[243,45,248,41],[243,46,248,42],[244,6,248,42,"_React$useMemo2"],[244,21,248,42],[244,24,248,42,"_slicedToArray"],[244,38,248,42],[244,39,248,42,"_React$useMemo"],[244,53,248,42],[245,6,199,9,"initializedState"],[245,22,199,25],[245,25,199,25,"_React$useMemo2"],[245,40,199,25],[246,6,199,27,"isFirstStateInitialization"],[246,32,199,53],[246,35,199,53,"_React$useMemo2"],[246,50,199,53],[247,4,249,2],[247,8,249,8,"previousRouteKeyListRef"],[247,31,249,31],[247,34,249,34,"React"],[247,39,249,39],[247,40,249,40,"useRef"],[247,46,249,46],[247,47,249,47,"routeKeyList"],[247,59,249,59],[247,60,249,60],[248,4,250,2,"React"],[248,9,250,7],[248,10,250,8,"useEffect"],[248,19,250,17],[248,20,250,18],[248,26,250,24],[249,6,251,4,"previousRouteKeyListRef"],[249,29,251,27],[249,30,251,28,"current"],[249,37,251,35],[249,40,251,38,"routeKeyList"],[249,52,251,50],[250,4,252,2],[250,5,252,3],[250,6,252,4],[251,4,253,2],[251,8,253,8,"previousRouteKeyList"],[251,28,253,28],[251,31,253,31,"previousRouteKeyListRef"],[251,54,253,54],[251,55,253,55,"current"],[251,62,253,62],[252,4,254,2],[252,8,254,6,"state"],[252,13,254,11],[253,4,255,2],[254,4,256,2],[255,4,257,2],[256,4,258,2,"isStateInitialized"],[256,22,258,20],[256,23,258,21,"currentState"],[256,35,258,33],[256,36,258,34],[256,39,258,37,"currentState"],[256,51,258,49],[256,54,258,52,"initializedState"],[256,70,258,68],[257,4,259,2],[257,8,259,6,"nextState"],[257,17,259,15],[257,20,259,18,"state"],[257,25,259,23],[258,4,260,2],[258,8,260,6],[258,9,260,7],[258,10,260,8],[258,11,260,9],[258,13,260,11,"require"],[258,20,260,11],[258,21,260,11,"_dependencyMap"],[258,35,260,11],[258,62,260,25,"isArrayEqual"],[258,74,260,37],[258,76,260,39,"state"],[258,81,260,44],[258,82,260,45,"routeNames"],[258,92,260,55],[258,94,260,57,"routeNames"],[258,104,260,67],[258,105,260,68],[258,109,260,72],[258,110,260,73],[258,111,260,74],[258,112,260,75],[258,114,260,77,"require"],[258,121,260,77],[258,122,260,77,"_dependencyMap"],[258,136,260,77],[258,164,260,92,"isRecordEqual"],[258,177,260,105],[258,179,260,107,"routeKeyList"],[258,191,260,119],[258,193,260,121,"previousRouteKeyList"],[258,213,260,141],[258,214,260,142],[258,216,260,144],[259,6,261,4],[259,10,261,10,"navigatorStateForNextRouteNamesChange"],[259,47,261,47],[259,50,261,50,"options"],[259,57,261,57],[259,58,261,58,"UNSTABLE_getStateForRouteNamesChange"],[259,94,261,94],[259,97,261,97,"state"],[259,102,261,102],[259,103,261,103],[260,6,262,4],[261,6,263,4,"nextState"],[261,15,263,13],[261,18,263,16,"navigatorStateForNextRouteNamesChange"],[261,55,263,53],[262,6,264,4],[263,6,265,4,"router"],[263,12,265,10],[263,13,265,11,"getRehydratedState"],[263,31,265,29],[263,32,265,30,"navigatorStateForNextRouteNamesChange"],[263,69,265,67],[263,71,265,69],[264,8,266,6,"routeNames"],[264,18,266,16],[265,8,267,6,"routeParamList"],[265,22,267,20],[266,8,268,6,"routeGetIdList"],[267,6,269,4],[267,7,269,5],[267,8,269,6],[267,11,269,9,"router"],[267,17,269,15],[267,18,269,16,"getStateForRouteNamesChange"],[267,45,269,43],[267,46,269,44,"state"],[267,51,269,49],[267,53,269,51],[268,8,270,6,"routeNames"],[268,18,270,16],[269,8,271,6,"routeParamList"],[269,22,271,20],[270,8,272,6,"routeGetIdList"],[270,22,272,20],[271,8,273,6,"routeKeyChanges"],[271,23,273,21],[271,25,273,23,"Object"],[271,31,273,29],[271,32,273,30,"keys"],[271,36,273,34],[271,37,273,35,"routeKeyList"],[271,49,273,47],[271,50,273,48],[271,51,273,49,"filter"],[271,57,273,55],[271,58,273,56,"name"],[271,62,273,60],[271,66,273,64,"name"],[271,70,273,68],[271,74,273,72,"previousRouteKeyList"],[271,94,273,92],[271,98,273,96,"routeKeyList"],[271,110,273,108],[271,111,273,109,"name"],[271,115,273,113],[271,116,273,114],[271,121,273,119,"previousRouteKeyList"],[271,141,273,139],[271,142,273,140,"name"],[271,146,273,144],[271,147,273,145],[272,6,274,4],[272,7,274,5],[272,8,274,6],[273,4,275,2],[274,4,276,2],[274,8,276,8,"previousNestedParamsRef"],[274,31,276,31],[274,34,276,34,"React"],[274,39,276,39],[274,40,276,40,"useRef"],[274,46,276,46],[274,47,276,47,"route"],[274,52,276,52],[274,54,276,54,"params"],[274,60,276,60],[274,61,276,61],[275,4,277,2,"React"],[275,9,277,7],[275,10,277,8,"useEffect"],[275,19,277,17],[275,20,277,18],[275,26,277,24],[276,6,278,4,"previousNestedParamsRef"],[276,29,278,27],[276,30,278,28,"current"],[276,37,278,35],[276,40,278,38,"route"],[276,45,278,43],[276,47,278,45,"params"],[276,53,278,51],[277,4,279,2],[277,5,279,3],[277,7,279,5],[277,8,279,6,"route"],[277,13,279,11],[277,15,279,13,"params"],[277,21,279,19],[277,22,279,20],[277,23,279,21],[278,4,280,2],[278,8,280,6,"route"],[278,13,280,11],[278,15,280,13,"params"],[278,21,280,19],[278,23,280,21],[279,6,281,4],[279,10,281,10,"previousParams"],[279,24,281,24],[279,27,281,27,"previousNestedParamsRef"],[279,50,281,50],[279,51,281,51,"current"],[279,58,281,58],[280,6,282,4],[280,10,282,8,"action"],[280,16,282,14],[281,6,283,4],[281,10,283,8],[281,17,283,15,"route"],[281,22,283,20],[281,23,283,21,"params"],[281,29,283,27],[281,30,283,28,"state"],[281,35,283,33],[281,40,283,38],[281,48,283,46],[281,52,283,50,"route"],[281,57,283,55],[281,58,283,56,"params"],[281,64,283,62],[281,65,283,63,"state"],[281,70,283,68],[281,74,283,72],[281,78,283,76],[281,82,283,80,"route"],[281,87,283,85],[281,88,283,86,"params"],[281,94,283,92],[281,99,283,97,"previousParams"],[281,113,283,111],[281,115,283,113],[282,8,284,6],[283,8,285,6,"action"],[283,14,285,12],[283,17,285,15,"require"],[283,24,285,15],[283,25,285,15,"_dependencyMap"],[283,39,285,15],[283,74,285,24,"CommonActions"],[283,87,285,37],[283,88,285,38,"reset"],[283,93,285,43],[283,94,285,44,"route"],[283,99,285,49],[283,100,285,50,"params"],[283,106,285,56],[283,107,285,57,"state"],[283,112,285,62],[283,113,285,63],[284,6,286,4],[284,7,286,5],[284,13,286,11],[284,17,286,15],[284,24,286,22,"route"],[284,29,286,27],[284,30,286,28,"params"],[284,36,286,34],[284,37,286,35,"screen"],[284,43,286,41],[284,48,286,46],[284,56,286,54],[284,61,286,59,"route"],[284,66,286,64],[284,67,286,65,"params"],[284,73,286,71],[284,74,286,72,"initial"],[284,81,286,79],[284,86,286,84],[284,91,286,89],[284,95,286,93,"isFirstStateInitialization"],[284,121,286,119],[284,125,286,123,"route"],[284,130,286,128],[284,131,286,129,"params"],[284,137,286,135],[284,142,286,140,"previousParams"],[284,156,286,154],[284,157,286,155],[284,159,286,157],[285,8,287,6],[286,8,288,6,"action"],[286,14,288,12],[286,17,288,15,"require"],[286,24,288,15],[286,25,288,15,"_dependencyMap"],[286,39,288,15],[286,74,288,24,"CommonActions"],[286,87,288,37],[286,88,288,38,"navigate"],[286,96,288,46],[286,97,288,47],[287,10,289,8,"name"],[287,14,289,12],[287,16,289,14,"route"],[287,21,289,19],[287,22,289,20,"params"],[287,28,289,26],[287,29,289,27,"screen"],[287,35,289,33],[288,10,290,8,"params"],[288,16,290,14],[288,18,290,16,"route"],[288,23,290,21],[288,24,290,22,"params"],[288,30,290,28],[288,31,290,29,"params"],[288,37,290,35],[289,10,291,8,"path"],[289,14,291,12],[289,16,291,14,"route"],[289,21,291,19],[289,22,291,20,"params"],[289,28,291,26],[289,29,291,27,"path"],[289,33,291,31],[290,10,292,8,"pop"],[290,13,292,11],[290,15,292,13,"route"],[290,20,292,18],[290,21,292,19,"params"],[290,27,292,25],[290,28,292,26,"pop"],[291,8,293,6],[291,9,293,7],[291,10,293,8],[292,6,294,4],[294,6,296,4],[295,6,297,4],[295,10,297,10,"updatedState"],[295,22,297,22],[295,25,297,25,"action"],[295,31,297,31],[295,34,297,34,"router"],[295,40,297,40],[295,41,297,41,"getStateForAction"],[295,58,297,58],[295,59,297,59,"nextState"],[295,68,297,68],[295,70,297,70,"action"],[295,76,297,76],[295,78,297,78],[296,8,298,6,"routeNames"],[296,18,298,16],[297,8,299,6,"routeParamList"],[297,22,299,20],[298,8,300,6,"routeGetIdList"],[299,6,301,4],[299,7,301,5],[299,8,301,6],[299,11,301,9],[299,15,301,13],[300,6,302,4,"nextState"],[300,15,302,13],[300,18,302,16,"updatedState"],[300,30,302,28],[300,35,302,33],[300,39,302,37],[300,42,302,40,"router"],[300,48,302,46],[300,49,302,47,"getRehydratedState"],[300,67,302,65],[300,68,302,66,"updatedState"],[300,80,302,78],[300,82,302,80],[301,8,303,6,"routeNames"],[301,18,303,16],[302,8,304,6,"routeParamList"],[302,22,304,20],[303,8,305,6,"routeGetIdList"],[304,6,306,4],[304,7,306,5],[304,8,306,6],[304,11,306,9,"nextState"],[304,20,306,18],[305,4,307,2],[306,4,308,2],[306,8,308,8,"shouldUpdate"],[306,20,308,20],[306,23,308,23,"state"],[306,28,308,28],[306,33,308,33,"nextState"],[306,42,308,42],[307,4,309,2],[307,5,309,3],[307,6,309,4],[307,8,309,6,"require"],[307,15,309,6],[307,16,309,6,"_dependencyMap"],[307,30,309,6],[307,62,309,25,"useScheduleUpdate"],[307,79,309,42],[307,81,309,44],[307,87,309,50],[308,6,310,4],[308,10,310,8,"shouldUpdate"],[308,22,310,20],[308,24,310,22],[309,8,311,6],[310,8,312,6,"setState"],[310,16,312,14],[310,17,312,15,"nextState"],[310,26,312,24],[310,27,312,25],[311,6,313,4],[312,4,314,2],[312,5,314,3],[312,6,314,4],[314,4,316,2],[315,4,317,2],[316,4,318,2],[317,4,319,2,"state"],[317,9,319,7],[317,12,319,10,"nextState"],[317,21,319,19],[318,4,320,2,"React"],[318,9,320,7],[318,10,320,8,"useEffect"],[318,19,320,17],[318,20,320,18],[318,26,320,24],[319,6,321,4],[320,6,322,4],[321,6,323,4,"stateCleanedUp"],[321,20,323,18],[321,21,323,19,"current"],[321,28,323,26],[321,31,323,29],[321,36,323,34],[322,6,324,4,"setKey"],[322,12,324,10],[322,13,324,11,"navigatorKey"],[322,25,324,23],[322,26,324,24],[323,6,325,4],[323,10,325,8],[323,11,325,9,"getIsInitial"],[323,23,325,21],[323,24,325,22],[323,25,325,23],[323,27,325,25],[324,8,326,6],[325,8,327,6],[326,8,328,6],[327,8,329,6,"setState"],[327,16,329,14],[327,17,329,15,"nextState"],[327,26,329,24],[327,27,329,25],[328,6,330,4],[329,6,331,4],[329,13,331,11],[329,19,331,17],[330,8,332,6],[331,8,333,6],[331,12,333,10,"getCurrentState"],[331,27,333,25],[331,28,333,26],[331,29,333,27],[331,34,333,32,"undefined"],[331,43,333,41],[331,47,333,45,"getKey"],[331,53,333,51],[331,54,333,52],[331,55,333,53],[331,60,333,58,"navigatorKey"],[331,72,333,70],[331,74,333,72],[332,10,334,8,"setCurrentState"],[332,25,334,23],[332,26,334,24,"undefined"],[332,35,334,33],[332,36,334,34],[333,10,335,8,"stateCleanedUp"],[333,24,335,22],[333,25,335,23,"current"],[333,32,335,30],[333,35,335,33],[333,39,335,37],[334,8,336,6],[335,6,337,4],[335,7,337,5],[336,6,338,4],[337,4,339,2],[337,5,339,3],[337,7,339,5],[337,9,339,7],[337,10,339,8],[339,4,341,2],[340,4,342,2],[341,4,343,2],[342,4,344,2],[343,4,345,2],[344,4,346,2],[344,8,346,8,"stateRef"],[344,16,346,16],[344,19,346,19,"React"],[344,24,346,24],[344,25,346,25,"useRef"],[344,31,346,31],[344,32,346,32,"state"],[344,37,346,37],[344,38,346,38],[345,4,347,2,"stateRef"],[345,12,347,10],[345,13,347,11,"current"],[345,20,347,18],[345,23,347,21,"state"],[345,28,347,26],[346,4,348,2],[346,5,348,3],[346,6,348,4],[346,8,348,6,"require"],[346,15,348,6],[346,16,348,6,"_dependencyMap"],[346,30,348,6],[346,67,348,33,"useIsomorphicLayoutEffect"],[346,92,348,58],[346,94,348,60],[346,100,348,66],[347,6,349,4,"stateRef"],[347,14,349,12],[347,15,349,13,"current"],[347,22,349,20],[347,25,349,23],[347,29,349,27],[348,4,350,2],[348,5,350,3],[348,6,350,4],[349,4,351,2],[349,8,351,8,"getState"],[349,16,351,16],[349,19,351,19],[349,20,351,20],[349,21,351,21],[349,23,351,23,"_useLatestCallback"],[349,41,351,41],[349,42,351,42,"default"],[349,49,351,49],[349,51,351,51],[349,57,351,57],[350,6,352,4],[350,10,352,10,"currentState"],[350,22,352,22],[350,25,352,25,"getCurrentState"],[350,40,352,40],[350,41,352,41],[350,42,352,42],[351,6,353,4],[351,13,353,11],[351,14,353,12],[351,15,353,13],[351,17,353,15,"require"],[351,24,353,15],[351,25,353,15,"_dependencyMap"],[351,39,353,15],[351,64,353,27,"deepFreeze"],[351,74,353,37],[351,76,353,39,"isStateInitialized"],[351,94,353,57],[351,95,353,58,"currentState"],[351,107,353,70],[351,108,353,71],[351,111,353,74,"currentState"],[351,123,353,86],[351,126,353,89,"initializedState"],[351,142,353,105],[351,143,353,106],[352,4,354,2],[352,5,354,3],[352,6,354,4],[353,4,355,2],[353,8,355,8,"emitter"],[353,15,355,15],[353,18,355,18],[353,19,355,19],[353,20,355,20],[353,22,355,22,"require"],[353,29,355,22],[353,30,355,22,"_dependencyMap"],[353,44,355,22],[353,74,355,39,"useEventEmitter"],[353,89,355,54],[353,91,355,56,"e"],[353,92,355,57],[353,96,355,61],[354,6,356,4],[354,10,356,10,"routeNames"],[354,20,356,20],[354,23,356,23],[354,25,356,25],[355,6,357,4],[355,10,357,8,"route"],[355,15,357,13],[356,6,358,4],[356,10,358,8,"e"],[356,11,358,9],[356,12,358,10,"target"],[356,18,358,16],[356,20,358,18],[357,8,359,6,"route"],[357,13,359,11],[357,16,359,14,"state"],[357,21,359,19],[357,22,359,20,"routes"],[357,28,359,26],[357,29,359,27,"find"],[357,33,359,31],[357,34,359,32,"route"],[357,39,359,37],[357,43,359,41,"route"],[357,48,359,46],[357,49,359,47,"key"],[357,52,359,50],[357,57,359,55,"e"],[357,58,359,56],[357,59,359,57,"target"],[357,65,359,63],[357,66,359,64],[358,8,360,6],[358,12,360,10,"route"],[358,17,360,15],[358,19,360,17,"name"],[358,23,360,21],[358,25,360,23],[359,10,361,8,"routeNames"],[359,20,361,18],[359,21,361,19,"push"],[359,25,361,23],[359,26,361,24,"route"],[359,31,361,29],[359,32,361,30,"name"],[359,36,361,34],[359,37,361,35],[360,8,362,6],[361,6,363,4],[361,7,363,5],[361,13,363,11],[362,8,364,6,"route"],[362,13,364,11],[362,16,364,14,"state"],[362,21,364,19],[362,22,364,20,"routes"],[362,28,364,26],[362,29,364,27,"state"],[362,34,364,32],[362,35,364,33,"index"],[362,40,364,38],[362,41,364,39],[363,8,365,6,"routeNames"],[363,18,365,16],[363,19,365,17,"push"],[363,23,365,21],[363,24,365,22],[363,27,365,25,"Object"],[363,33,365,31],[363,34,365,32,"keys"],[363,38,365,36],[363,39,365,37,"screens"],[363,46,365,44],[363,47,365,45],[363,48,365,46,"filter"],[363,54,365,52],[363,55,365,53,"name"],[363,59,365,57],[363,63,365,61,"route"],[363,68,365,66],[363,70,365,68,"name"],[363,74,365,72],[363,79,365,77,"name"],[363,83,365,81],[363,84,365,82],[363,85,365,83],[364,6,366,4],[365,6,367,4],[365,10,367,8,"route"],[365,15,367,13],[365,19,367,17],[365,23,367,21],[365,25,367,23],[366,8,368,6],[367,6,369,4],[368,6,370,4],[368,10,370,10,"navigation"],[368,20,370,20],[368,23,370,23,"descriptors"],[368,34,370,34],[368,35,370,35,"route"],[368,40,370,40],[368,41,370,41,"key"],[368,44,370,44],[368,45,370,45],[368,46,370,46,"navigation"],[368,56,370,56],[369,6,371,4],[369,10,371,10,"listeners"],[369,19,371,19],[369,22,371,22],[369,24,371,24],[369,25,371,25,"concat"],[369,31,371,31],[370,6,372,4],[371,6,373,4],[371,9,373,7],[371,10,373,8,"screenListeners"],[371,25,373,23],[371,27,373,25],[371,30,373,28,"routeNames"],[371,40,373,38],[371,41,373,39,"map"],[371,44,373,42],[371,45,373,43,"name"],[371,49,373,47],[371,53,373,51],[372,8,374,6],[372,12,375,8,"listeners"],[372,21,375,17],[372,24,376,10,"screens"],[372,31,376,17],[372,32,376,18,"name"],[372,36,376,22],[372,37,376,23],[372,38,376,24,"props"],[372,43,376,29],[372,44,375,8,"listeners"],[372,53,375,17],[373,8,377,6],[373,15,377,13,"listeners"],[373,24,377,22],[374,6,378,4],[374,7,378,5],[374,8,378,6],[374,9,378,7],[374,10,378,8,"map"],[374,13,378,11],[374,14,378,12,"listeners"],[374,23,378,21],[374,27,378,25],[375,8,379,6],[375,12,379,12,"map"],[375,15,379,15],[375,18,379,18],[375,25,379,25,"listeners"],[375,34,379,34],[375,39,379,39],[375,49,379,49],[375,52,379,52,"listeners"],[375,61,379,61],[375,62,379,62],[376,10,380,8,"route"],[376,15,380,13],[376,17,380,15,"route"],[376,22,380,20],[377,10,381,8,"navigation"],[378,8,382,6],[378,9,382,7],[378,10,382,8],[378,13,382,11,"listeners"],[378,22,382,20],[379,8,383,6],[379,15,383,13,"map"],[379,18,383,16],[379,21,383,19,"Object"],[379,27,383,25],[379,28,383,26,"keys"],[379,32,383,30],[379,33,383,31,"map"],[379,36,383,34],[379,37,383,35],[379,38,383,36,"filter"],[379,44,383,42],[379,45,383,43,"type"],[379,49,383,47],[379,53,383,51,"type"],[379,57,383,55],[379,62,383,60,"e"],[379,63,383,61],[379,64,383,62,"type"],[379,68,383,66],[379,69,383,67],[379,70,383,68,"map"],[379,73,383,71],[379,74,383,72,"type"],[379,78,383,76],[379,82,383,80,"map"],[379,85,383,83],[379,88,383,86,"type"],[379,92,383,90],[379,93,383,91],[379,94,383,92],[379,97,383,95,"undefined"],[379,106,383,104],[380,6,384,4],[380,7,384,5],[380,8,384,6],[381,6,385,4],[382,6,386,4],[383,6,386,4],[383,7,387,5,"filter"],[383,13,387,11],[383,14,387,12],[383,15,387,13,"cb"],[383,17,387,15],[383,19,387,17,"i"],[383,20,387,18],[383,22,387,20,"self"],[383,26,387,24],[383,31,387,29,"cb"],[383,33,387,31],[383,37,387,35,"self"],[383,41,387,39],[383,42,387,40,"lastIndexOf"],[383,53,387,51],[383,54,387,52,"cb"],[383,56,387,54],[383,57,387,55],[383,62,387,60,"i"],[383,63,387,61],[383,64,387,62],[384,6,388,4,"listeners"],[384,15,388,13],[384,16,388,14,"forEach"],[384,23,388,21],[384,24,388,22,"listener"],[384,32,388,30],[384,36,388,34,"listener"],[384,44,388,42],[384,47,388,45,"e"],[384,48,388,46],[384,49,388,47],[384,50,388,48],[385,4,389,2],[385,5,389,3],[385,6,389,4],[386,4,390,2],[386,5,390,3],[386,6,390,4],[386,8,390,6,"require"],[386,15,390,6],[386,16,390,6,"_dependencyMap"],[386,30,390,6],[386,59,390,22,"useFocusEvents"],[386,73,390,36],[386,75,390,38],[387,6,391,4,"state"],[387,11,391,9],[388,6,392,4,"emitter"],[389,4,393,2],[389,5,393,3],[389,6,393,4],[390,4,394,2,"React"],[390,9,394,7],[390,10,394,8,"useEffect"],[390,19,394,17],[390,20,394,18],[390,26,394,24],[391,6,395,4,"emitter"],[391,13,395,11],[391,14,395,12,"emit"],[391,18,395,16],[391,19,395,17],[392,8,396,6,"type"],[392,12,396,10],[392,14,396,12],[392,21,396,19],[393,8,397,6,"data"],[393,12,397,10],[393,14,397,12],[394,10,398,8,"state"],[395,8,399,6],[396,6,400,4],[396,7,400,5],[396,8,400,6],[397,4,401,2],[397,5,401,3],[397,7,401,5],[397,8,401,6,"emitter"],[397,15,401,13],[397,17,401,15,"state"],[397,22,401,20],[397,23,401,21],[397,24,401,22],[398,4,402,2],[398,8,402,2,"_ref"],[398,12,402,2],[398,15,405,6],[398,16,405,7],[398,17,405,8],[398,19,405,10,"require"],[398,26,405,10],[398,27,405,10,"_dependencyMap"],[398,41,405,10],[398,73,405,29,"useChildListeners"],[398,90,405,46],[398,92,405,48],[398,93,405,49],[399,6,403,15,"childListeners"],[399,20,403,29],[399,23,403,29,"_ref"],[399,27,403,29],[399,28,403,4,"listeners"],[399,37,403,13],[400,6,404,4,"addListener"],[400,17,404,15],[400,20,404,15,"_ref"],[400,24,404,15],[400,25,404,4,"addListener"],[400,36,404,15],[401,4,406,2],[401,8,406,2,"_ref2"],[401,13,406,2],[401,16,409,6],[401,17,409,7],[401,18,409,8],[401,20,409,10,"require"],[401,27,409,10],[401,28,409,10,"_dependencyMap"],[401,42,409,10],[401,79,409,34,"useKeyedChildListeners"],[401,101,409,56],[401,103,409,58],[401,104,409,59],[402,6,407,4,"keyedListeners"],[402,20,407,18],[402,23,407,18,"_ref2"],[402,28,407,18],[402,29,407,4,"keyedListeners"],[402,43,407,18],[403,6,408,4,"addKeyedListener"],[403,22,408,20],[403,25,408,20,"_ref2"],[403,30,408,20],[403,31,408,4,"addKeyedListener"],[403,47,408,20],[404,4,410,2],[404,8,410,8,"onAction"],[404,16,410,16],[404,19,410,19],[404,20,410,20],[404,21,410,21],[404,23,410,23,"require"],[404,30,410,23],[404,31,410,23,"_dependencyMap"],[404,45,410,23],[404,71,410,36,"useOnAction"],[404,82,410,47],[404,84,410,49],[405,6,411,4,"router"],[405,12,411,10],[406,6,412,4,"getState"],[406,14,412,12],[407,6,413,4,"setState"],[407,14,413,12],[408,6,414,4,"key"],[408,9,414,7],[408,11,414,9,"route"],[408,16,414,14],[408,18,414,16,"key"],[408,21,414,19],[409,6,415,4,"actionListeners"],[409,21,415,19],[409,23,415,21,"childListeners"],[409,37,415,35],[409,38,415,36,"action"],[409,44,415,42],[410,6,416,4,"beforeRemoveListeners"],[410,27,416,25],[410,29,416,27,"keyedListeners"],[410,43,416,41],[410,44,416,42,"beforeRemove"],[410,56,416,54],[411,6,417,4,"routerConfigOptions"],[411,25,417,23],[411,27,417,25],[412,8,418,6,"routeNames"],[412,18,418,16],[413,8,419,6,"routeParamList"],[413,22,419,20],[414,8,420,6,"routeGetIdList"],[415,6,421,4],[415,7,421,5],[416,6,422,4,"emitter"],[417,4,423,2],[417,5,423,3],[417,6,423,4],[418,4,424,2],[418,8,424,8,"onRouteFocus"],[418,20,424,20],[418,23,424,23],[418,24,424,24],[418,25,424,25],[418,27,424,27,"require"],[418,34,424,27],[418,35,424,27,"_dependencyMap"],[418,49,424,27],[418,79,424,44,"useOnRouteFocus"],[418,94,424,59],[418,96,424,61],[419,6,425,4,"router"],[419,12,425,10],[420,6,426,4,"key"],[420,9,426,7],[420,11,426,9,"route"],[420,16,426,14],[420,18,426,16,"key"],[420,21,426,19],[421,6,427,4,"getState"],[421,14,427,12],[422,6,428,4,"setState"],[423,4,429,2],[423,5,429,3],[423,6,429,4],[424,4,430,2],[424,8,430,8,"navigation"],[424,18,430,18],[424,21,430,21],[424,22,430,22],[424,23,430,23],[424,25,430,25,"require"],[424,32,430,25],[424,33,430,25,"_dependencyMap"],[424,47,430,25],[424,82,430,47,"useNavigationHelpers"],[424,102,430,67],[424,104,430,69],[425,6,431,4,"id"],[425,8,431,6],[425,10,431,8,"options"],[425,17,431,15],[425,18,431,16,"id"],[425,20,431,18],[426,6,432,4,"onAction"],[426,14,432,12],[427,6,433,4,"getState"],[427,14,433,12],[428,6,434,4,"emitter"],[428,13,434,11],[429,6,435,4,"router"],[429,12,435,10],[430,6,436,4,"stateRef"],[431,4,437,2],[431,5,437,3],[431,6,437,4],[432,4,438,2],[432,5,438,3],[432,6,438,4],[432,8,438,6,"require"],[432,15,438,6],[432,16,438,6,"_dependencyMap"],[432,30,438,6],[432,79,438,42,"useFocusedListenersChildrenAdapter"],[432,113,438,76],[432,115,438,78],[433,6,439,4,"navigation"],[433,16,439,14],[434,6,440,4,"focusedListeners"],[434,22,440,20],[434,24,440,22,"childListeners"],[434,38,440,36],[434,39,440,37,"focus"],[435,4,441,2],[435,5,441,3],[435,6,441,4],[436,4,442,2],[436,5,442,3],[436,6,442,4],[436,8,442,6,"require"],[436,15,442,6],[436,16,442,6,"_dependencyMap"],[436,30,442,6],[436,58,442,21,"useOnGetState"],[436,71,442,34],[436,73,442,36],[437,6,443,4,"getState"],[437,14,443,12],[438,6,444,4,"getStateListeners"],[438,23,444,21],[438,25,444,23,"keyedListeners"],[438,39,444,37],[438,40,444,38,"getState"],[439,4,445,2],[439,5,445,3],[439,6,445,4],[440,4,446,2],[440,8,446,2,"_ref3"],[440,13,446,2],[440,16,449,6],[440,17,449,7],[440,18,449,8],[440,20,449,10,"require"],[440,27,449,10],[440,28,449,10,"_dependencyMap"],[440,42,449,10],[440,71,449,26,"useDescriptors"],[440,85,449,40],[440,87,449,42],[441,8,450,4,"state"],[441,13,450,9],[442,8,451,4,"screens"],[442,15,451,11],[443,8,452,4,"navigation"],[443,18,452,14],[444,8,453,4,"screenOptions"],[444,21,453,17],[445,8,454,4,"screenLayout"],[445,20,454,16],[446,8,455,4,"onAction"],[446,16,455,12],[447,8,456,4,"getState"],[447,16,456,12],[448,8,457,4,"setState"],[448,16,457,12],[449,8,458,4,"onRouteFocus"],[449,20,458,16],[450,8,459,4,"addListener"],[450,19,459,15],[451,8,460,4,"addKeyedListener"],[451,24,460,20],[452,8,461,4,"router"],[452,14,461,10],[453,8,462,4],[454,8,463,4,"emitter"],[455,6,464,2],[455,7,464,3],[455,8,464,4],[456,6,447,4,"describe"],[456,14,447,12],[456,17,447,12,"_ref3"],[456,22,447,12],[456,23,447,4,"describe"],[456,31,447,12],[457,6,448,4,"descriptors"],[457,17,448,15],[457,20,448,15,"_ref3"],[457,25,448,15],[457,26,448,4,"descriptors"],[457,37,448,15],[458,4,465,2],[458,5,465,3],[458,6,465,4],[458,8,465,6,"require"],[458,15,465,6],[458,16,465,6,"_dependencyMap"],[458,30,465,6],[458,61,465,24,"useCurrentRender"],[458,77,465,40],[458,79,465,42],[459,6,466,4,"state"],[459,11,466,9],[460,6,467,4,"navigation"],[460,16,467,14],[461,6,468,4,"descriptors"],[462,4,469,2],[462,5,469,3],[462,6,469,4],[463,4,470,2],[463,8,470,8,"NavigationContent"],[463,25,470,25],[463,28,470,28],[463,29,470,29],[463,30,470,30],[463,32,470,32,"require"],[463,39,470,32],[463,40,470,32,"_dependencyMap"],[463,54,470,32],[463,81,470,46,"useComponent"],[463,93,470,58],[463,95,470,60,"children"],[463,103,470,68],[463,107,470,72],[464,6,471,4],[464,10,471,10,"element"],[464,17,471,17],[464,20,471,20,"layout"],[464,26,471,26],[464,30,471,30],[464,34,471,34],[464,37,471,37,"layout"],[464,43,471,43],[464,44,471,44],[465,8,472,6,"state"],[465,13,472,11],[466,8,473,6,"descriptors"],[466,19,473,17],[467,8,474,6,"navigation"],[467,18,474,16],[468,8,475,6,"children"],[469,6,476,4],[469,7,476,5],[469,8,476,6],[469,11,476,9,"children"],[469,19,476,17],[470,6,477,4],[470,13,477,11],[470,26,477,24],[470,27,477,25],[470,28,477,26],[470,30,477,28,"_jsxRuntime"],[470,41,477,39],[470,42,477,40,"jsx"],[470,45,477,43],[470,47,477,45,"require"],[470,54,477,45],[470,55,477,45,"_dependencyMap"],[470,69,477,45],[470,108,477,71,"NavigationHelpersContext"],[470,132,477,95],[470,133,477,96,"Provider"],[470,141,477,104],[470,143,477,106],[471,8,478,6,"value"],[471,13,478,11],[471,15,478,13,"navigation"],[471,25,478,23],[472,8,479,6,"children"],[472,16,479,14],[472,18,479,16],[472,31,479,29],[472,32,479,30],[472,33,479,31],[472,35,479,33,"_jsxRuntime"],[472,46,479,44],[472,47,479,45,"jsx"],[472,50,479,48],[472,52,479,50,"require"],[472,59,479,50],[472,60,479,50,"_dependencyMap"],[472,74,479,50],[472,110,479,73,"PreventRemoveProvider"],[472,131,479,94],[472,133,479,96],[473,10,480,8,"children"],[473,18,480,16],[473,20,480,18,"element"],[474,8,481,6],[474,9,481,7],[475,6,482,4],[475,7,482,5],[475,8,482,6],[476,4,483,2],[476,5,483,3],[476,6,483,4],[477,4,484,2],[477,11,484,9],[478,6,485,4,"state"],[478,11,485,9],[479,6,486,4,"navigation"],[479,16,486,14],[480,6,487,4,"describe"],[480,14,487,12],[481,6,488,4,"descriptors"],[481,17,488,15],[482,6,489,4,"NavigationContent"],[483,4,490,2],[483,5,490,3],[484,2,491,0],[485,0,491,1],[485,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_getRequireWildcardCache","_interopRequireWildcard","isValidKey","getRouteConfigsFromChildren","React.Children.toArray.reduce$argument_0","configs.forEach$argument_0","useNavigationBuilder","<anonymous>","routeConfigs.every$argument_0","routeConfigs.reduce$argument_0","routeConfigs.map$argument_0","routeNames.reduce$argument_0","screens.curr.keys.map$argument_0","isStateValid","isStateInitialized","React.useMemo$argument_0","React.useEffect$argument_0","Object.keys.filter$argument_0","state.routes.find$argument_0","routeNames.map$argument_0","map$argument_0","Object.keys.filter.map$argument_0","concat.filter$argument_0","listeners.forEach$argument_0"],"mappings":"AAA;ACqC,qFD;AEC,4MF;AGC,mkBH;mBIG,iEJ;oCKO;0DCC;GD6B;oBEE;KF0C;CLG;AQS;iDCY;4DCC,qDD;GDI;sCGC;GHM;sCIC,2BJ;yCKC;uCCC,gBD;GLE;2CKC;GLM;2CKC;ILE;yCOI,+DP;+CQC,4ER;mDCU;GDQ;uESC;oDJC;KIU;GTsC;kBUE;GVE;wDWqB,yFX;kBUI;GVE;4CC8B;GDK;kBUM;WTW;KSM;GVE;4DCS;GDE;mDCC;GDG;wDCC;gCWI,+BX;qDUM,4BV;2CYQ;KZK,Oa;2CHK,uBG,MC,mBD;KbC;YeG,iDf;sBgBC,yBhB;GDC;kBUK;GVO;4DCqE;GDa;CRQ"}},"type":"js/module"}]}