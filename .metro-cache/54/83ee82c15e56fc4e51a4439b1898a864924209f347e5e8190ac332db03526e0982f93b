{"dependencies":[{"name":"whatwg-url-without-unicode","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":332},"end":{"line":11,"column":66,"index":398}},{"start":{"line":11,"column":0,"index":332},"end":{"line":11,"column":66,"index":398}},{"start":{"line":11,"column":0,"index":332},"end":{"line":11,"column":66,"index":398}},{"start":{"line":11,"column":0,"index":332},"end":{"line":11,"column":66,"index":398}},{"start":{"line":11,"column":0,"index":332},"end":{"line":11,"column":66,"index":398}},{"start":{"line":11,"column":0,"index":332},"end":{"line":11,"column":66,"index":398}}],"key":"A+MCbLw/itdoI4zIyjSMR6P1C2g="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"URL\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[0], \"whatwg-url-without-unicode\").URL;\n    }\n  });\n  Object.defineProperty(exports, \"URLSearchParams\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[0], \"whatwg-url-without-unicode\").URLSearchParams;\n    }\n  });\n  /**\n   * Copyright © 2023-present 650 Industries, Inc. (aka Expo)\n   * Copyright © Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  // This file should not import `react-native` in order to remain self-contained.\n\n  var isSetup = false;\n  var BLOB_URL_PREFIX = null;\n  function getBlobUrlPrefix() {\n    if (isSetup) return BLOB_URL_PREFIX;\n    isSetup = true;\n    // if iOS: let BLOB_URL_PREFIX = 'blob:'\n\n    // Pull the blob module without importing React Native.\n    var BlobModule = globalThis.RN$Bridgeless !== true ?\n    // Legacy RN implementation\n    globalThis.nativeModuleProxy['BlobModule'] :\n    // Newer RN implementation\n    globalThis.__turboModuleProxy('BlobModule');\n    var constants = 'BLOB_URI_SCHEME' in BlobModule ? BlobModule : BlobModule.getConstants();\n    if (constants && typeof constants.BLOB_URI_SCHEME === 'string') {\n      BLOB_URL_PREFIX = encodeURIComponent(constants.BLOB_URI_SCHEME) + ':';\n      if (typeof constants.BLOB_URI_HOST === 'string') {\n        BLOB_URL_PREFIX += `//${encodeURIComponent(constants.BLOB_URI_HOST)}/`;\n      }\n    }\n    return BLOB_URL_PREFIX;\n  }\n\n  /**\n   * To allow Blobs be accessed via `content://` URIs,\n   * you need to register `BlobProvider` as a ContentProvider in your app's `AndroidManifest.xml`:\n   *\n   * ```xml\n   * <manifest>\n   *   <application>\n   *     <provider\n   *       android:name=\"com.facebook.react.modules.blob.BlobProvider\"\n   *       android:authorities=\"@string/blob_provider_authority\"\n   *       android:exported=\"false\"\n   *     />\n   *   </application>\n   * </manifest>\n   * ```\n   * And then define the `blob_provider_authority` string in `res/values/strings.xml`.\n   * Use a dotted name that's entirely unique to your app:\n   *\n   * ```xml\n   * <resources>\n   *   <string name=\"blob_provider_authority\">your.app.package.blobs</string>\n   * </resources>\n   * ```\n   */\n  require(_dependencyMap[0], \"whatwg-url-without-unicode\").URL.createObjectURL = function createObjectURL(blob) {\n    if (getBlobUrlPrefix() == null) {\n      throw new Error('Cannot create URL for blob');\n    }\n    return `${getBlobUrlPrefix()}${encodeURIComponent(blob.data.blobId)}?offset=${encodeURIComponent(blob.data.offset)}&size=${encodeURIComponent(blob.size)}`;\n  };\n  require(_dependencyMap[0], \"whatwg-url-without-unicode\").URL.revokeObjectURL = function revokeObjectURL(url) {\n    // Do nothing.\n  };\n  require(_dependencyMap[0], \"whatwg-url-without-unicode\").URL.canParse = function canParse(url, base) {\n    try {\n      (0, require(_dependencyMap[0], \"whatwg-url-without-unicode\").URL)(url, base);\n      return true;\n    } catch {\n      return false;\n    }\n  };\n});","lineCount":91,"map":[[17,2,1,0],[18,0,2,0],[19,0,3,0],[20,0,4,0],[21,0,5,0],[22,0,6,0],[23,0,7,0],[25,2,9,0],[27,2,13,0],[27,6,13,4,"isSetup"],[27,13,13,11],[27,16,13,14],[27,21,13,19],[28,2,14,0],[28,6,14,4,"BLOB_URL_PREFIX"],[28,21,14,34],[28,24,14,37],[28,28,14,41],[29,2,16,0],[29,11,16,9,"getBlobUrlPrefix"],[29,27,16,25,"getBlobUrlPrefix"],[29,28,16,25],[29,30,16,28],[30,4,17,2],[30,8,17,6,"isSetup"],[30,15,17,13],[30,17,17,15],[30,24,17,22,"BLOB_URL_PREFIX"],[30,39,17,37],[31,4,18,2,"isSetup"],[31,11,18,9],[31,14,18,12],[31,18,18,16],[32,4,19,2],[34,4,21,2],[35,4,22,2],[35,8,22,8,"BlobModule"],[35,18,22,18],[35,21,23,4,"globalThis"],[35,31,23,14],[35,32,23,15,"RN$Bridgeless"],[35,45,23,28],[35,50,23,33],[35,54,23,37],[36,4,24,8],[37,4,25,8,"globalThis"],[37,14,25,18],[37,15,25,19,"nativeModuleProxy"],[37,32,25,36],[37,33,25,37],[37,45,25,49],[37,46,25,50],[38,4,26,8],[39,4,27,8,"globalThis"],[39,14,27,18],[39,15,27,19,"__turboModuleProxy"],[39,33,27,37],[39,34,27,38],[39,46,27,50],[39,47,27,51],[40,4,29,2],[40,8,29,8,"constants"],[40,17,29,17],[40,20,29,20],[40,37,29,37],[40,41,29,41,"BlobModule"],[40,51,29,51],[40,54,29,54,"BlobModule"],[40,64,29,64],[40,67,29,67,"BlobModule"],[40,77,29,77],[40,78,29,78,"getConstants"],[40,90,29,90],[40,91,29,91],[40,92,29,92],[41,4,31,2],[41,8,31,6,"constants"],[41,17,31,15],[41,21,31,19],[41,28,31,26,"constants"],[41,37,31,35],[41,38,31,36,"BLOB_URI_SCHEME"],[41,53,31,51],[41,58,31,56],[41,66,31,64],[41,68,31,66],[42,6,32,4,"BLOB_URL_PREFIX"],[42,21,32,19],[42,24,32,22,"encodeURIComponent"],[42,42,32,40],[42,43,32,41,"constants"],[42,52,32,50],[42,53,32,51,"BLOB_URI_SCHEME"],[42,68,32,66],[42,69,32,67],[42,72,32,70],[42,75,32,73],[43,6,33,4],[43,10,33,8],[43,17,33,15,"constants"],[43,26,33,24],[43,27,33,25,"BLOB_URI_HOST"],[43,40,33,38],[43,45,33,43],[43,53,33,51],[43,55,33,53],[44,8,34,6,"BLOB_URL_PREFIX"],[44,23,34,21],[44,27,34,25],[44,32,34,30,"encodeURIComponent"],[44,50,34,48],[44,51,34,49,"constants"],[44,60,34,58],[44,61,34,59,"BLOB_URI_HOST"],[44,74,34,72],[44,75,34,73],[44,78,34,76],[45,6,35,4],[46,4,36,2],[47,4,37,2],[47,11,37,9,"BLOB_URL_PREFIX"],[47,26,37,24],[48,2,38,0],[50,2,40,0],[51,0,41,0],[52,0,42,0],[53,0,43,0],[54,0,44,0],[55,0,45,0],[56,0,46,0],[57,0,47,0],[58,0,48,0],[59,0,49,0],[60,0,50,0],[61,0,51,0],[62,0,52,0],[63,0,53,0],[64,0,54,0],[65,0,55,0],[66,0,56,0],[67,0,57,0],[68,0,58,0],[69,0,59,0],[70,0,60,0],[71,0,61,0],[72,0,62,0],[73,0,63,0],[74,2,64,0,"URL"],[74,28,64,0],[74,29,64,0,"URL"],[74,62,64,3],[74,63,64,4,"createObjectURL"],[74,78,64,19],[74,81,64,22],[74,90,64,31,"createObjectURL"],[74,105,64,46,"createObjectURL"],[74,106,64,47,"blob"],[74,110,64,51],[74,112,64,53],[75,4,65,2],[75,8,65,6,"getBlobUrlPrefix"],[75,24,65,22],[75,25,65,23],[75,26,65,24],[75,30,65,28],[75,34,65,32],[75,36,65,34],[76,6,66,4],[76,12,66,10],[76,16,66,14,"Error"],[76,21,66,19],[76,22,66,20],[76,50,66,48],[76,51,66,49],[77,4,67,2],[78,4,68,2],[78,11,68,9],[78,14,68,12,"getBlobUrlPrefix"],[78,30,68,28],[78,31,68,29],[78,32,68,30],[78,35,68,33,"encodeURIComponent"],[78,53,68,51],[78,54,68,52,"blob"],[78,58,68,56],[78,59,68,57,"data"],[78,63,68,61],[78,64,68,62,"blobId"],[78,70,68,68],[78,71,68,69],[78,82,68,80,"encodeURIComponent"],[78,100,68,98],[78,101,69,4,"blob"],[78,105,69,8],[78,106,69,9,"data"],[78,110,69,13],[78,111,69,14,"offset"],[78,117,70,2],[78,118,70,3],[78,127,70,12,"encodeURIComponent"],[78,145,70,30],[78,146,70,31,"blob"],[78,150,70,35],[78,151,70,36,"size"],[78,155,70,40],[78,156,70,41],[78,158,70,43],[79,2,71,0],[79,3,71,1],[80,2,73,0,"URL"],[80,28,73,0],[80,29,73,0,"URL"],[80,62,73,3],[80,63,73,4,"revokeObjectURL"],[80,78,73,19],[80,81,73,22],[80,90,73,31,"revokeObjectURL"],[80,105,73,46,"revokeObjectURL"],[80,106,73,47,"url"],[80,109,73,50],[80,111,73,52],[81,4,74,2],[82,2,74,2],[82,3,75,1],[83,2,77,0,"URL"],[83,28,77,0],[83,29,77,0,"URL"],[83,62,77,3],[83,63,77,4,"canParse"],[83,71,77,12],[83,74,77,15],[83,83,77,24,"canParse"],[83,91,77,32,"canParse"],[83,92,77,33,"url"],[83,95,77,44],[83,97,77,46,"base"],[83,101,77,59],[83,103,77,70],[84,4,78,2],[84,8,78,6],[85,6,79,4],[85,10,79,4,"URL"],[85,36,79,4],[85,37,79,4,"URL"],[85,70,79,7],[85,72,79,8,"url"],[85,75,79,11],[85,77,79,13,"base"],[85,81,79,17],[85,82,79,18],[86,6,80,4],[86,13,80,11],[86,17,80,15],[87,4,81,2],[87,5,81,3],[87,6,81,4],[87,12,81,10],[88,6,82,4],[88,13,82,11],[88,18,82,16],[89,4,83,2],[90,2,84,0],[90,3,84,1],[91,0,84,2],[91,3]],"functionMap":{"names":["<global>","getBlobUrlPrefix","createObjectURL","revokeObjectURL","canParse"],"mappings":"AAA;ACe;CDsB;sBE0B;CFO;sBGE;CHE;eIE;CJO"}},"type":"js/module"}]}