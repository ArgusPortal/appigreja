{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":306,"column":1}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/readOnlyError","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":306,"column":1}}],"key":"tW9vjPH6bEH6zBBMaoehmzXhDcQ="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":306,"column":1}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":306,"column":1}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"../../../../Libraries/Utilities/warnOnce","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0},"end":{"line":20,"column":64}}],"key":"43GRWl1n9ZFZTznImo21EsewDAQ="}},{"name":"./MemoryInfo","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0},"end":{"line":22,"column":38}}],"key":"rMYYUfX6fuCxd3kB2OXLrWJYWlw="}},{"name":"./ReactNativeStartupTiming","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":30,"column":0},"end":{"line":30,"column":66}}],"key":"4QRKRIr6zf2YAst70KCVpL3zHvE="}},{"name":"./specs/NativePerformance","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":31,"column":0},"end":{"line":31,"column":58}}],"key":"6o1nOxWMCiRx5/kTKp0IyARkOoo="}},{"name":"./specs/NativePerformanceObserver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":32,"column":0},"end":{"line":32,"column":74}}],"key":"CgNxqX84uFYcKZ3BphoqPoW7EnA="}},{"name":"./PerformanceEntry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0},"end":{"line":23,"column":61}},{"start":{"line":23,"column":0},"end":{"line":23,"column":61}},{"start":{"line":23,"column":0},"end":{"line":23,"column":61}},{"start":{"line":23,"column":0},"end":{"line":23,"column":61}},{"start":{"line":23,"column":0},"end":{"line":23,"column":61}}],"key":"brFNAt3Zh5rA+ZZUGgMallCwpmE="}},{"name":"./RawPerformanceEntry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0},"end":{"line":28,"column":31}},{"start":{"line":25,"column":0},"end":{"line":28,"column":31}},{"start":{"line":25,"column":0},"end":{"line":28,"column":31}},{"start":{"line":25,"column":0},"end":{"line":28,"column":31}},{"start":{"line":25,"column":0},"end":{"line":28,"column":31}},{"start":{"line":25,"column":0},"end":{"line":28,"column":31}},{"start":{"line":25,"column":0},"end":{"line":28,"column":31}},{"start":{"line":25,"column":0},"end":{"line":28,"column":31}}],"key":"IK+Gykxxt1SJMUQA0aRx+ibytHw="}},{"name":"./EventTiming","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0},"end":{"line":21,"column":42}}],"key":"Rer5zYKtklTjjy8E2Iy2V8Wu9H8="}},{"name":"./UserTiming","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0},"end":{"line":33,"column":65}},{"start":{"line":33,"column":0},"end":{"line":33,"column":65}}],"key":"8iyXwyHll+TEw55777ayfrradVQ="}},{"name":"./PerformanceObserver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0},"end":{"line":24,"column":70}},{"start":{"line":24,"column":0},"end":{"line":24,"column":70}},{"start":{"line":24,"column":0},"end":{"line":24,"column":70}},{"start":{"line":24,"column":0},"end":{"line":24,"column":70}},{"start":{"line":24,"column":0},"end":{"line":24,"column":70}}],"key":"PH6XyOi0WZVEDvzra0fGKPxTjuM="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _readOnlyError2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/readOnlyError\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _warnOnce = _interopRequireDefault(require(_dependencyMap[4], \"../../../../Libraries/Utilities/warnOnce\"));\n  var _MemoryInfo = _interopRequireDefault(require(_dependencyMap[5], \"./MemoryInfo\"));\n  var _ReactNativeStartupTiming = _interopRequireDefault(require(_dependencyMap[6], \"./ReactNativeStartupTiming\"));\n  var _NativePerformance = _interopRequireDefault(require(_dependencyMap[7], \"./specs/NativePerformance\"));\n  var _NativePerformanceObserver = _interopRequireDefault(require(_dependencyMap[8], \"./specs/NativePerformanceObserver\"));\n  var getCurrentTimeStamp = _NativePerformance.default?.now ?? global.nativePerformanceNow ?? (() => Date.now());\n  if (_NativePerformanceObserver.default?.setIsBuffered) {\n    _NativePerformanceObserver.default?.setIsBuffered(require(_dependencyMap[9], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES.map(require(_dependencyMap[10], \"./RawPerformanceEntry\").performanceEntryTypeToRaw), true);\n  }\n  function warnNoNativePerformance() {\n    (0, _warnOnce.default)('missing-native-performance', 'Missing native implementation of Performance');\n  }\n  var Performance = exports.default = /*#__PURE__*/function () {\n    function Performance() {\n      (0, _classCallCheck2.default)(this, Performance);\n      this.eventCounts = new (require(_dependencyMap[11], \"./EventTiming\").EventCounts)();\n    }\n    return (0, _createClass2.default)(Performance, [{\n      key: \"memory\",\n      get: function () {\n        if (_NativePerformance.default?.getSimpleMemoryInfo) {\n          var memoryInfo = _NativePerformance.default.getSimpleMemoryInfo();\n          if (memoryInfo.hasOwnProperty('hermes_heapSize')) {\n            var totalJSHeapSize = memoryInfo.hermes_heapSize,\n              usedJSHeapSize = memoryInfo.hermes_allocatedBytes;\n            return new _MemoryInfo.default({\n              jsHeapSizeLimit: null,\n              totalJSHeapSize,\n              usedJSHeapSize\n            });\n          } else {\n            return new _MemoryInfo.default();\n          }\n        }\n        return new _MemoryInfo.default();\n      }\n    }, {\n      key: \"rnStartupTiming\",\n      get: function () {\n        if (_NativePerformance.default?.getReactNativeStartupTiming) {\n          var _NativePerformance$ge = _NativePerformance.default.getReactNativeStartupTiming(),\n            startTime = _NativePerformance$ge.startTime,\n            endTime = _NativePerformance$ge.endTime,\n            initializeRuntimeStart = _NativePerformance$ge.initializeRuntimeStart,\n            initializeRuntimeEnd = _NativePerformance$ge.initializeRuntimeEnd,\n            executeJavaScriptBundleEntryPointStart = _NativePerformance$ge.executeJavaScriptBundleEntryPointStart,\n            executeJavaScriptBundleEntryPointEnd = _NativePerformance$ge.executeJavaScriptBundleEntryPointEnd;\n          return new _ReactNativeStartupTiming.default({\n            startTime,\n            endTime,\n            initializeRuntimeStart,\n            initializeRuntimeEnd,\n            executeJavaScriptBundleEntryPointStart,\n            executeJavaScriptBundleEntryPointEnd\n          });\n        }\n        return new _ReactNativeStartupTiming.default();\n      }\n    }, {\n      key: \"mark\",\n      value: function mark(markName, markOptions) {\n        var mark = new (require(_dependencyMap[12], \"./UserTiming\").PerformanceMark)(markName, markOptions);\n        if (_NativePerformance.default?.mark) {\n          _NativePerformance.default.mark(markName, mark.startTime);\n        } else {\n          warnNoNativePerformance();\n        }\n        return mark;\n      }\n    }, {\n      key: \"clearMarks\",\n      value: function clearMarks(markName) {\n        if (!_NativePerformanceObserver.default?.clearEntries) {\n          (0, require(_dependencyMap[13], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return;\n        }\n        _NativePerformanceObserver.default?.clearEntries(require(_dependencyMap[10], \"./RawPerformanceEntry\").RawPerformanceEntryTypeValues.MARK, markName);\n      }\n    }, {\n      key: \"measure\",\n      value: function measure(measureName, startMarkOrOptions, endMark) {\n        var options;\n        var startMarkName,\n          endMarkName = endMark,\n          duration,\n          startTime = 0,\n          endTime = 0;\n        if (typeof startMarkOrOptions === 'string') {\n          startMarkName = startMarkOrOptions;\n        } else if (startMarkOrOptions !== undefined) {\n          options = startMarkOrOptions;\n          if (endMark !== undefined) {\n            throw new TypeError(\"Performance.measure: Can't have both options and endMark\");\n          }\n          if (options.start === undefined && options.end === undefined) {\n            throw new TypeError('Performance.measure: Must have at least one of start/end specified in options');\n          }\n          if (options.start !== undefined && options.end !== undefined && options.duration !== undefined) {\n            throw new TypeError(\"Performance.measure: Can't have both start/end and duration explicitly in options\");\n          }\n          if (typeof options.start === 'number') {\n            startTime = options.start;\n          } else {\n            startMarkName = options.start;\n          }\n          if (typeof options.end === 'number') {\n            endTime = options.end;\n          } else {\n            endMarkName = options.end;\n          }\n          duration = options.duration ?? duration;\n        }\n        var measure = new (require(_dependencyMap[12], \"./UserTiming\").PerformanceMeasure)(measureName, {\n          startTime,\n          duration\n        });\n        if (_NativePerformance.default?.measure) {\n          _NativePerformance.default.measure(measureName, startTime, endTime, duration, startMarkName, endMarkName);\n        } else {\n          warnNoNativePerformance();\n        }\n        return measure;\n      }\n    }, {\n      key: \"clearMeasures\",\n      value: function clearMeasures(measureName) {\n        if (!_NativePerformanceObserver.default?.clearEntries) {\n          (0, require(_dependencyMap[13], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return;\n        }\n        _NativePerformanceObserver.default?.clearEntries(require(_dependencyMap[10], \"./RawPerformanceEntry\").RawPerformanceEntryTypeValues.MEASURE, measureName);\n      }\n    }, {\n      key: \"now\",\n      value: function now() {\n        return getCurrentTimeStamp();\n      }\n    }, {\n      key: \"getEntries\",\n      value: function getEntries() {\n        if (!_NativePerformanceObserver.default?.getEntries) {\n          (0, require(_dependencyMap[13], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries().map(require(_dependencyMap[10], \"./RawPerformanceEntry\").rawToPerformanceEntry);\n      }\n    }, {\n      key: \"getEntriesByType\",\n      value: function getEntriesByType(entryType) {\n        if (!require(_dependencyMap[9], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES.includes(entryType)) {\n          console.warn(`Performance.getEntriesByType: Only valid for ${JSON.stringify(require(_dependencyMap[9], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES)} entry types, got ${entryType}`);\n          return [];\n        }\n        if (!_NativePerformanceObserver.default?.getEntries) {\n          (0, require(_dependencyMap[13], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries((0, require(_dependencyMap[10], \"./RawPerformanceEntry\").performanceEntryTypeToRaw)(entryType)).map(require(_dependencyMap[10], \"./RawPerformanceEntry\").rawToPerformanceEntry);\n      }\n    }, {\n      key: \"getEntriesByName\",\n      value: function getEntriesByName(entryName, entryType) {\n        if (entryType !== undefined && !require(_dependencyMap[9], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES.includes(entryType)) {\n          console.warn(`Performance.getEntriesByName: Only valid for ${JSON.stringify(require(_dependencyMap[9], \"./PerformanceEntry\").ALWAYS_LOGGED_ENTRY_TYPES)} entry types, got ${entryType}`);\n          return [];\n        }\n        if (!_NativePerformanceObserver.default?.getEntries) {\n          (0, require(_dependencyMap[13], \"./PerformanceObserver\").warnNoNativePerformanceObserver)();\n          return [];\n        }\n        return _NativePerformanceObserver.default.getEntries(entryType != null ? (0, require(_dependencyMap[10], \"./RawPerformanceEntry\").performanceEntryTypeToRaw)(entryType) : undefined, entryName).map(require(_dependencyMap[10], \"./RawPerformanceEntry\").rawToPerformanceEntry);\n      }\n    }]);\n  }();\n});","lineCount":184,"map":[[10,2,20,0],[10,6,20,0,"_warnOnce"],[10,15,20,0],[10,18,20,0,"_interopRequireDefault"],[10,40,20,0],[10,41,20,0,"require"],[10,48,20,0],[10,49,20,0,"_dependencyMap"],[10,63,20,0],[11,2,22,0],[11,6,22,0,"_MemoryInfo"],[11,17,22,0],[11,20,22,0,"_interopRequireDefault"],[11,42,22,0],[11,43,22,0,"require"],[11,50,22,0],[11,51,22,0,"_dependencyMap"],[11,65,22,0],[12,2,30,0],[12,6,30,0,"_ReactNativeStartupTiming"],[12,31,30,0],[12,34,30,0,"_interopRequireDefault"],[12,56,30,0],[12,57,30,0,"require"],[12,64,30,0],[12,65,30,0,"_dependencyMap"],[12,79,30,0],[13,2,31,0],[13,6,31,0,"_NativePerformance"],[13,24,31,0],[13,27,31,0,"_interopRequireDefault"],[13,49,31,0],[13,50,31,0,"require"],[13,57,31,0],[13,58,31,0,"_dependencyMap"],[13,72,31,0],[14,2,32,0],[14,6,32,0,"_NativePerformanceObserver"],[14,32,32,0],[14,35,32,0,"_interopRequireDefault"],[14,57,32,0],[14,58,32,0,"require"],[14,65,32,0],[14,66,32,0,"_dependencyMap"],[14,80,32,0],[15,2,40,0],[15,6,40,6,"getCurrentTimeStamp"],[15,25,40,52],[15,28,41,2,"NativePerformance"],[15,54,41,19],[15,56,41,21,"now"],[15,59,41,24],[15,63,41,28,"global"],[15,69,41,34],[15,70,41,35,"nativePerformanceNow"],[15,90,41,55],[15,95,41,60],[15,101,41,66,"Date"],[15,105,41,70],[15,106,41,71,"now"],[15,109,41,74],[15,110,41,75],[15,111,41,76],[15,112,41,77],[16,2,47,0],[16,6,47,4,"NativePerformanceObserver"],[16,40,47,29],[16,42,47,31,"setIsBuffered"],[16,55,47,44],[16,57,47,46],[17,4,48,2,"NativePerformanceObserver"],[17,38,48,27],[17,40,48,29,"setIsBuffered"],[17,53,48,42],[17,54,49,4,"ALWAYS_LOGGED_ENTRY_TYPES"],[17,80,49,4],[17,81,49,4,"ALWAYS_LOGGED_ENTRY_TYPES"],[17,128,49,29],[17,129,49,30,"map"],[17,132,49,33],[17,133,49,34,"performanceEntryTypeToRaw"],[17,160,49,34],[17,161,49,34,"performanceEntryTypeToRaw"],[17,211,49,59],[17,212,49,60],[17,214,50,4],[17,218,51,2],[17,219,51,3],[18,2,52,0],[19,2,54,0],[19,11,54,9,"warnNoNativePerformance"],[19,34,54,32,"warnNoNativePerformance"],[19,35,54,32],[19,37,54,35],[20,4,55,2],[20,8,55,2,"warnOnce"],[20,25,55,10],[20,27,56,4],[20,55,56,32],[20,57,57,4],[20,103,58,2],[20,104,58,3],[21,2,59,0],[22,2,59,1],[22,6,73,21,"Performance"],[22,17,73,32],[22,20,73,32,"exports"],[22,27,73,32],[22,28,73,32,"default"],[22,35,73,32],[23,4,73,32],[23,13,73,32,"Performance"],[23,25,73,32],[24,6,73,32],[24,10,73,32,"_classCallCheck2"],[24,26,73,32],[24,27,73,32,"default"],[24,34,73,32],[24,42,73,32,"Performance"],[24,53,73,32],[25,6,73,32],[25,11,74,2,"eventCounts"],[25,22,74,13],[25,25,74,29],[25,30,74,33,"EventCounts"],[25,57,74,33],[25,58,74,33,"EventCounts"],[25,86,74,44],[25,88,74,45],[25,89,74,46],[26,4,74,46],[27,4,74,46],[27,15,74,46,"_createClass2"],[27,28,74,46],[27,29,74,46,"default"],[27,36,74,46],[27,38,74,46,"Performance"],[27,49,74,46],[28,6,74,46,"key"],[28,9,74,46],[29,6,74,46,"get"],[29,9,74,46],[29,11,77,2],[29,20,77,2,"get"],[29,21,77,2],[29,23,77,27],[30,8,78,4],[30,12,78,8,"NativePerformance"],[30,38,78,25],[30,40,78,27,"getSimpleMemoryInfo"],[30,59,78,46],[30,61,78,48],[31,10,82,6],[31,14,82,12,"memoryInfo"],[31,24,82,22],[31,27,82,25,"NativePerformance"],[31,53,82,42],[31,54,82,43,"getSimpleMemoryInfo"],[31,73,82,62],[31,74,82,63],[31,75,82,64],[32,10,83,6],[32,14,83,10,"memoryInfo"],[32,24,83,20],[32,25,83,21,"hasOwnProperty"],[32,39,83,35],[32,40,83,36],[32,57,83,53],[32,58,83,54],[32,60,83,56],[33,12,85,8],[33,16,86,27,"totalJSHeapSize"],[33,31,86,42],[33,34,88,12,"memoryInfo"],[33,44,88,22],[33,45,86,10,"hermes_heapSize"],[33,60,86,25],[34,14,87,33,"usedJSHeapSize"],[34,28,87,47],[34,31,88,12,"memoryInfo"],[34,41,88,22],[34,42,87,10,"hermes_allocatedBytes"],[34,63,87,31],[35,12,90,8],[35,19,90,15],[35,23,90,19,"MemoryInfo"],[35,42,90,29],[35,43,90,30],[36,14,91,10,"jsHeapSizeLimit"],[36,29,91,25],[36,31,91,27],[36,35,91,31],[37,14,92,10,"totalJSHeapSize"],[37,29,92,25],[38,14,93,10,"usedJSHeapSize"],[39,12,94,8],[39,13,94,9],[39,14,94,10],[40,10,95,6],[40,11,95,7],[40,17,95,13],[41,12,97,8],[41,19,97,15],[41,23,97,19,"MemoryInfo"],[41,42,97,29],[41,43,97,30],[41,44,97,31],[42,10,98,6],[43,8,99,4],[44,8,101,4],[44,15,101,11],[44,19,101,15,"MemoryInfo"],[44,38,101,25],[44,39,101,26],[44,40,101,27],[45,6,102,2],[46,4,102,3],[47,6,102,3,"key"],[47,9,102,3],[48,6,102,3,"get"],[48,9,102,3],[48,11,105,2],[48,20,105,2,"get"],[48,21,105,2],[48,23,105,50],[49,8,106,4],[49,12,106,8,"NativePerformance"],[49,38,106,25],[49,40,106,27,"getReactNativeStartupTiming"],[49,67,106,54],[49,69,106,56],[50,10,107,6],[50,14,107,6,"_NativePerformance$ge"],[50,35,107,6],[50,38,114,10,"NativePerformance"],[50,64,114,27],[50,65,114,28,"getReactNativeStartupTiming"],[50,92,114,55],[50,93,114,56],[50,94,114,57],[51,12,108,8,"startTime"],[51,21,108,17],[51,24,108,17,"_NativePerformance$ge"],[51,45,108,17],[51,46,108,8,"startTime"],[51,55,108,17],[52,12,109,8,"endTime"],[52,19,109,15],[52,22,109,15,"_NativePerformance$ge"],[52,43,109,15],[52,44,109,8,"endTime"],[52,51,109,15],[53,12,110,8,"initializeRuntimeStart"],[53,34,110,30],[53,37,110,30,"_NativePerformance$ge"],[53,58,110,30],[53,59,110,8,"initializeRuntimeStart"],[53,81,110,30],[54,12,111,8,"initializeRuntimeEnd"],[54,32,111,28],[54,35,111,28,"_NativePerformance$ge"],[54,56,111,28],[54,57,111,8,"initializeRuntimeEnd"],[54,77,111,28],[55,12,112,8,"executeJavaScriptBundleEntryPointStart"],[55,50,112,46],[55,53,112,46,"_NativePerformance$ge"],[55,74,112,46],[55,75,112,8,"executeJavaScriptBundleEntryPointStart"],[55,113,112,46],[56,12,113,8,"executeJavaScriptBundleEntryPointEnd"],[56,48,113,44],[56,51,113,44,"_NativePerformance$ge"],[56,72,113,44],[56,73,113,8,"executeJavaScriptBundleEntryPointEnd"],[56,109,113,44],[57,10,115,6],[57,17,115,13],[57,21,115,17,"ReactNativeStartupTiming"],[57,54,115,41],[57,55,115,42],[58,12,116,8,"startTime"],[58,21,116,17],[59,12,117,8,"endTime"],[59,19,117,15],[60,12,118,8,"initializeRuntimeStart"],[60,34,118,30],[61,12,119,8,"initializeRuntimeEnd"],[61,32,119,28],[62,12,120,8,"executeJavaScriptBundleEntryPointStart"],[62,50,120,46],[63,12,121,8,"executeJavaScriptBundleEntryPointEnd"],[64,10,122,6],[64,11,122,7],[64,12,122,8],[65,8,123,4],[66,8,124,4],[66,15,124,11],[66,19,124,15,"ReactNativeStartupTiming"],[66,52,124,39],[66,53,124,40],[66,54,124,41],[67,6,125,2],[68,4,125,3],[69,6,125,3,"key"],[69,9,125,3],[70,6,125,3,"value"],[70,11,125,3],[70,13,127,2],[70,22,127,2,"mark"],[70,26,127,6,"mark"],[70,27,128,4,"markName"],[70,35,128,20],[70,37,129,4,"markOptions"],[70,48,129,40],[70,50,130,21],[71,8,131,4],[71,12,131,10,"mark"],[71,16,131,14],[71,19,131,17],[71,24,131,21,"PerformanceMark"],[71,51,131,21],[71,52,131,21,"PerformanceMark"],[71,83,131,36],[71,85,131,37,"markName"],[71,93,131,45],[71,95,131,47,"markOptions"],[71,106,131,58],[71,107,131,59],[72,8,133,4],[72,12,133,8,"NativePerformance"],[72,38,133,25],[72,40,133,27,"mark"],[72,44,133,31],[72,46,133,33],[73,10,134,6,"NativePerformance"],[73,36,134,23],[73,37,134,24,"mark"],[73,41,134,28],[73,42,134,29,"markName"],[73,50,134,37],[73,52,134,39,"mark"],[73,56,134,43],[73,57,134,44,"startTime"],[73,66,134,53],[73,67,134,54],[74,8,135,4],[74,9,135,5],[74,15,135,11],[75,10,136,6,"warnNoNativePerformance"],[75,33,136,29],[75,34,136,30],[75,35,136,31],[76,8,137,4],[77,8,139,4],[77,15,139,11,"mark"],[77,19,139,15],[78,6,140,2],[79,4,140,3],[80,6,140,3,"key"],[80,9,140,3],[81,6,140,3,"value"],[81,11,140,3],[81,13,142,2],[81,22,142,2,"clearMarks"],[81,32,142,12,"clearMarks"],[81,33,142,13,"markName"],[81,41,142,30],[81,43,142,38],[82,8,143,4],[82,12,143,8],[82,13,143,9,"NativePerformanceObserver"],[82,47,143,34],[82,49,143,36,"clearEntries"],[82,61,143,48],[82,63,143,50],[83,10,144,6],[83,14,144,6,"warnNoNativePerformanceObserver"],[83,41,144,6],[83,42,144,6,"warnNoNativePerformanceObserver"],[83,98,144,37],[83,100,144,38],[83,101,144,39],[84,10,145,6],[85,8,146,4],[86,8,148,4,"NativePerformanceObserver"],[86,42,148,29],[86,44,148,31,"clearEntries"],[86,56,148,43],[86,57,149,6,"RawPerformanceEntryTypeValues"],[86,84,149,6],[86,85,149,6,"RawPerformanceEntryTypeValues"],[86,139,149,35],[86,140,149,36,"MARK"],[86,144,149,40],[86,146,150,6,"markName"],[86,154,151,4],[86,155,151,5],[87,6,152,2],[88,4,152,3],[89,6,152,3,"key"],[89,9,152,3],[90,6,152,3,"value"],[90,11,152,3],[90,13,154,2],[90,22,154,2,"measure"],[90,29,154,9,"measure"],[90,30,155,4,"measureName"],[90,41,155,23],[90,43,156,4,"startMarkOrOptions"],[90,61,156,59],[90,63,157,4,"endMark"],[90,70,157,20],[90,72,158,24],[91,8,159,4],[91,12,159,8,"options"],[91,19,159,15],[92,8,160,4],[92,12,160,8,"startMarkName"],[92,25,160,21],[93,10,161,6,"endMarkName"],[93,21,161,17],[93,24,161,20,"endMark"],[93,31,161,27],[94,10,162,6,"duration"],[94,18,162,14],[95,10,163,6,"startTime"],[95,19,163,15],[95,22,163,18],[95,23,163,19],[96,10,164,6,"endTime"],[96,17,164,13],[96,20,164,16],[96,21,164,17],[97,8,166,4],[97,12,166,8],[97,19,166,15,"startMarkOrOptions"],[97,37,166,33],[97,42,166,38],[97,50,166,46],[97,52,166,48],[98,10,167,6,"startMarkName"],[98,23,167,19],[98,26,167,22,"startMarkOrOptions"],[98,44,167,40],[99,8,168,4],[99,9,168,5],[99,15,168,11],[99,19,168,15,"startMarkOrOptions"],[99,37,168,33],[99,42,168,38,"undefined"],[99,51,168,47],[99,53,168,49],[100,10,169,6,"options"],[100,17,169,13],[100,20,169,16,"startMarkOrOptions"],[100,38,169,34],[101,10,170,6],[101,14,170,10,"endMark"],[101,21,170,17],[101,26,170,22,"undefined"],[101,35,170,31],[101,37,170,33],[102,12,171,8],[102,18,171,14],[102,22,171,18,"TypeError"],[102,31,171,27],[102,32,172,10],[102,90,173,8],[102,91,173,9],[103,10,174,6],[104,10,175,6],[104,14,175,10,"options"],[104,21,175,17],[104,22,175,18,"start"],[104,27,175,23],[104,32,175,28,"undefined"],[104,41,175,37],[104,45,175,41,"options"],[104,52,175,48],[104,53,175,49,"end"],[104,56,175,52],[104,61,175,57,"undefined"],[104,70,175,66],[104,72,175,68],[105,12,176,8],[105,18,176,14],[105,22,176,18,"TypeError"],[105,31,176,27],[105,32,177,10],[105,111,178,8],[105,112,178,9],[106,10,179,6],[107,10,180,6],[107,14,181,8,"options"],[107,21,181,15],[107,22,181,16,"start"],[107,27,181,21],[107,32,181,26,"undefined"],[107,41,181,35],[107,45,182,8,"options"],[107,52,182,15],[107,53,182,16,"end"],[107,56,182,19],[107,61,182,24,"undefined"],[107,70,182,33],[107,74,183,8,"options"],[107,81,183,15],[107,82,183,16,"duration"],[107,90,183,24],[107,95,183,29,"undefined"],[107,104,183,38],[107,106,184,8],[108,12,185,8],[108,18,185,14],[108,22,185,18,"TypeError"],[108,31,185,27],[108,32,186,10],[108,115,187,8],[108,116,187,9],[109,10,188,6],[110,10,190,6],[110,14,190,10],[110,21,190,17,"options"],[110,28,190,24],[110,29,190,25,"start"],[110,34,190,30],[110,39,190,35],[110,47,190,43],[110,49,190,45],[111,12,191,8,"startTime"],[111,21,191,17],[111,24,191,20,"options"],[111,31,191,27],[111,32,191,28,"start"],[111,37,191,33],[112,10,192,6],[112,11,192,7],[112,17,192,13],[113,12,193,8,"startMarkName"],[113,25,193,21],[113,28,193,24,"options"],[113,35,193,31],[113,36,193,32,"start"],[113,41,193,37],[114,10,194,6],[115,10,196,6],[115,14,196,10],[115,21,196,17,"options"],[115,28,196,24],[115,29,196,25,"end"],[115,32,196,28],[115,37,196,33],[115,45,196,41],[115,47,196,43],[116,12,197,8,"endTime"],[116,19,197,15],[116,22,197,18,"options"],[116,29,197,25],[116,30,197,26,"end"],[116,33,197,29],[117,10,198,6],[117,11,198,7],[117,17,198,13],[118,12,199,8,"endMarkName"],[118,23,199,19],[118,26,199,22,"options"],[118,33,199,29],[118,34,199,30,"end"],[118,37,199,33],[119,10,200,6],[120,10,202,6,"duration"],[120,18,202,14],[120,21,202,17,"options"],[120,28,202,24],[120,29,202,25,"duration"],[120,37,202,33],[120,41,202,37,"duration"],[120,49,202,45],[121,8,203,4],[122,8,205,4],[122,12,205,10,"measure"],[122,19,205,17],[122,22,205,20],[122,27,205,24,"PerformanceMeasure"],[122,54,205,24],[122,55,205,24,"PerformanceMeasure"],[122,89,205,42],[122,91,205,43,"measureName"],[122,102,205,54],[122,104,205,56],[123,10,209,6,"startTime"],[123,19,209,15],[124,10,210,6,"duration"],[125,8,211,4],[125,9,211,5],[125,10,211,6],[126,8,213,4],[126,12,213,8,"NativePerformance"],[126,38,213,25],[126,40,213,27,"measure"],[126,47,213,34],[126,49,213,36],[127,10,214,6,"NativePerformance"],[127,36,214,23],[127,37,214,24,"measure"],[127,44,214,31],[127,45,215,8,"measureName"],[127,56,215,19],[127,58,216,8,"startTime"],[127,67,216,17],[127,69,217,8,"endTime"],[127,76,217,15],[127,78,218,8,"duration"],[127,86,218,16],[127,88,219,8,"startMarkName"],[127,101,219,21],[127,103,220,8,"endMarkName"],[127,114,221,6],[127,115,221,7],[128,8,222,4],[128,9,222,5],[128,15,222,11],[129,10,223,6,"warnNoNativePerformance"],[129,33,223,29],[129,34,223,30],[129,35,223,31],[130,8,224,4],[131,8,226,4],[131,15,226,11,"measure"],[131,22,226,18],[132,6,227,2],[133,4,227,3],[134,6,227,3,"key"],[134,9,227,3],[135,6,227,3,"value"],[135,11,227,3],[135,13,229,2],[135,22,229,2,"clearMeasures"],[135,35,229,15,"clearMeasures"],[135,36,229,16,"measureName"],[135,47,229,36],[135,49,229,44],[136,8,230,4],[136,12,230,8],[136,13,230,9,"NativePerformanceObserver"],[136,47,230,34],[136,49,230,36,"clearEntries"],[136,61,230,48],[136,63,230,50],[137,10,231,6],[137,14,231,6,"warnNoNativePerformanceObserver"],[137,41,231,6],[137,42,231,6,"warnNoNativePerformanceObserver"],[137,98,231,37],[137,100,231,38],[137,101,231,39],[138,10,232,6],[139,8,233,4],[140,8,235,4,"NativePerformanceObserver"],[140,42,235,29],[140,44,235,31,"clearEntries"],[140,56,235,43],[140,57,236,6,"RawPerformanceEntryTypeValues"],[140,84,236,6],[140,85,236,6,"RawPerformanceEntryTypeValues"],[140,139,236,35],[140,140,236,36,"MEASURE"],[140,147,236,43],[140,149,237,6,"measureName"],[140,160,238,4],[140,161,238,5],[141,6,239,2],[142,4,239,3],[143,6,239,3,"key"],[143,9,239,3],[144,6,239,3,"value"],[144,11,239,3],[144,13,245,2],[144,22,245,2,"now"],[144,25,245,5,"now"],[144,26,245,5],[144,28,245,29],[145,8,246,4],[145,15,246,11,"getCurrentTimeStamp"],[145,34,246,30],[145,35,246,31],[145,36,246,32],[146,6,247,2],[147,4,247,3],[148,6,247,3,"key"],[148,9,247,3],[149,6,247,3,"value"],[149,11,247,3],[149,13,254,2],[149,22,254,2,"getEntries"],[149,32,254,12,"getEntries"],[149,33,254,12],[149,35,254,37],[150,8,255,4],[150,12,255,8],[150,13,255,9,"NativePerformanceObserver"],[150,47,255,34],[150,49,255,36,"getEntries"],[150,59,255,46],[150,61,255,48],[151,10,256,6],[151,14,256,6,"warnNoNativePerformanceObserver"],[151,41,256,6],[151,42,256,6,"warnNoNativePerformanceObserver"],[151,98,256,37],[151,100,256,38],[151,101,256,39],[152,10,257,6],[152,17,257,13],[152,19,257,15],[153,8,258,4],[154,8,259,4],[154,15,259,11,"NativePerformanceObserver"],[154,49,259,36],[154,50,259,37,"getEntries"],[154,60,259,47],[154,61,259,48],[154,62,259,49],[154,63,259,50,"map"],[154,66,259,53],[154,67,259,54,"rawToPerformanceEntry"],[154,94,259,54],[154,95,259,54,"rawToPerformanceEntry"],[154,141,259,75],[154,142,259,76],[155,6,260,2],[156,4,260,3],[157,6,260,3,"key"],[157,9,260,3],[158,6,260,3,"value"],[158,11,260,3],[158,13,262,2],[158,22,262,2,"getEntriesByType"],[158,38,262,18,"getEntriesByType"],[158,39,262,19,"entryType"],[158,48,262,50],[158,50,262,74],[159,8,263,4],[159,12,263,8],[159,13,263,9,"ALWAYS_LOGGED_ENTRY_TYPES"],[159,39,263,9],[159,40,263,9,"ALWAYS_LOGGED_ENTRY_TYPES"],[159,87,263,34],[159,88,263,35,"includes"],[159,96,263,43],[159,97,263,44,"entryType"],[159,106,263,53],[159,107,263,54],[159,109,263,56],[160,10,264,6,"console"],[160,17,264,13],[160,18,264,14,"warn"],[160,22,264,18],[160,23,265,8],[160,71,265,56,"JSON"],[160,75,265,60],[160,76,265,61,"stringify"],[160,85,265,70],[160,86,266,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[160,112,266,10],[160,113,266,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[160,160,267,8],[160,161,267,9],[160,182,267,30,"entryType"],[160,191,267,39],[160,193,268,6],[160,194,268,7],[161,10,269,6],[161,17,269,13],[161,19,269,15],[162,8,270,4],[163,8,272,4],[163,12,272,8],[163,13,272,9,"NativePerformanceObserver"],[163,47,272,34],[163,49,272,36,"getEntries"],[163,59,272,46],[163,61,272,48],[164,10,273,6],[164,14,273,6,"warnNoNativePerformanceObserver"],[164,41,273,6],[164,42,273,6,"warnNoNativePerformanceObserver"],[164,98,273,37],[164,100,273,38],[164,101,273,39],[165,10,274,6],[165,17,274,13],[165,19,274,15],[166,8,275,4],[167,8,276,4],[167,15,276,11,"NativePerformanceObserver"],[167,49,276,36],[167,50,276,37,"getEntries"],[167,60,276,47],[167,61,277,6],[167,65,277,6,"performanceEntryTypeToRaw"],[167,92,277,6],[167,93,277,6,"performanceEntryTypeToRaw"],[167,143,277,31],[167,145,277,32,"entryType"],[167,154,277,41],[167,155,278,4],[167,156,278,5],[167,157,278,6,"map"],[167,160,278,9],[167,161,278,10,"rawToPerformanceEntry"],[167,188,278,10],[167,189,278,10,"rawToPerformanceEntry"],[167,235,278,31],[167,236,278,32],[168,6,279,2],[169,4,279,3],[170,6,279,3,"key"],[170,9,279,3],[171,6,279,3,"value"],[171,11,279,3],[171,13,281,2],[171,22,281,2,"getEntriesByName"],[171,38,281,18,"getEntriesByName"],[171,39,282,4,"entryName"],[171,48,282,21],[171,50,283,4,"entryType"],[171,59,283,36],[171,61,284,26],[172,8,285,4],[172,12,286,6,"entryType"],[172,21,286,15],[172,26,286,20,"undefined"],[172,35,286,29],[172,39,287,6],[172,40,287,7,"ALWAYS_LOGGED_ENTRY_TYPES"],[172,66,287,7],[172,67,287,7,"ALWAYS_LOGGED_ENTRY_TYPES"],[172,114,287,32],[172,115,287,33,"includes"],[172,123,287,41],[172,124,287,42,"entryType"],[172,133,287,51],[172,134,287,52],[172,136,288,6],[173,10,289,6,"console"],[173,17,289,13],[173,18,289,14,"warn"],[173,22,289,18],[173,23,290,8],[173,71,290,56,"JSON"],[173,75,290,60],[173,76,290,61,"stringify"],[173,85,290,70],[173,86,291,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[173,112,291,10],[173,113,291,10,"ALWAYS_LOGGED_ENTRY_TYPES"],[173,160,292,8],[173,161,292,9],[173,182,292,30,"entryType"],[173,191,292,39],[173,193,293,6],[173,194,293,7],[174,10,294,6],[174,17,294,13],[174,19,294,15],[175,8,295,4],[176,8,297,4],[176,12,297,8],[176,13,297,9,"NativePerformanceObserver"],[176,47,297,34],[176,49,297,36,"getEntries"],[176,59,297,46],[176,61,297,48],[177,10,298,6],[177,14,298,6,"warnNoNativePerformanceObserver"],[177,41,298,6],[177,42,298,6,"warnNoNativePerformanceObserver"],[177,98,298,37],[177,100,298,38],[177,101,298,39],[178,10,299,6],[178,17,299,13],[178,19,299,15],[179,8,300,4],[180,8,301,4],[180,15,301,11,"NativePerformanceObserver"],[180,49,301,36],[180,50,301,37,"getEntries"],[180,60,301,47],[180,61,302,6,"entryType"],[180,70,302,15],[180,74,302,19],[180,78,302,23],[180,81,302,26],[180,85,302,26,"performanceEntryTypeToRaw"],[180,112,302,26],[180,113,302,26,"performanceEntryTypeToRaw"],[180,163,302,51],[180,165,302,52,"entryType"],[180,174,302,61],[180,175,302,62],[180,178,302,65,"undefined"],[180,187,302,74],[180,189,303,6,"entryName"],[180,198,304,4],[180,199,304,5],[180,200,304,6,"map"],[180,203,304,9],[180,204,304,10,"rawToPerformanceEntry"],[180,231,304,10],[180,232,304,10,"rawToPerformanceEntry"],[180,278,304,31],[180,279,304,32],[181,6,305,2],[182,4,305,3],[183,2,305,3],[184,0,305,3],[184,3]],"functionMap":{"names":["<global>","<anonymous>","warnNoNativePerformance","Performance","get__memory","get__rnStartupTiming","mark","clearMarks","measure","clearMeasures","now","getEntries","getEntriesByType","getEntriesByName"],"mappings":"AAA;4DCwC,gBD;AEa;CFK;eGc;ECI;GDyB;EEG;GFoB;EGE;GHa;EIE;GJU;EKE;GLyE;EME;GNU;EOM;GPE;EQO;GRM;ESE;GTiB;EUE;GVwB"}},"type":"js/module"}]}