{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":125,"column":0,"index":3858}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":125,"column":0,"index":3858}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":125,"column":0,"index":3858}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":125,"column":0,"index":3858}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":125,"column":0,"index":3858}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":125,"column":0,"index":3858}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":74,"index":74}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":74,"index":74}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SimultaneousGesture = exports.ExclusiveGesture = exports.ComposedGesture = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  function extendRelation(currentRelation, extendWith) {\n    if (currentRelation === undefined) {\n      return [...extendWith];\n    } else {\n      return [...currentRelation, ...extendWith];\n    }\n  }\n  var ComposedGesture = exports.ComposedGesture = /*#__PURE__*/function (_Gesture) {\n    function ComposedGesture() {\n      var _this;\n      (0, _classCallCheck2.default)(this, ComposedGesture);\n      _this = _callSuper(this, ComposedGesture);\n      _this.gestures = [];\n      _this.simultaneousGestures = [];\n      _this.requireGesturesToFail = [];\n      for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n        gestures[_key] = arguments[_key];\n      }\n      _this.gestures = gestures;\n      return _this;\n    }\n    (0, _inherits2.default)(ComposedGesture, _Gesture);\n    return (0, _createClass2.default)(ComposedGesture, [{\n      key: \"prepareSingleGesture\",\n      value: function prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n        if (gesture instanceof require(_dependencyMap[6], \"./gesture\").BaseGesture) {\n          var newConfig = {\n            ...gesture.config\n          };\n\n          // No need to extend `blocksHandlers` here, because it's not changed in composition.\n          // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n          newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n          newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n          gesture.config = newConfig;\n        } else if (gesture instanceof ComposedGesture) {\n          gesture.simultaneousGestures = simultaneousGestures;\n          gesture.requireGesturesToFail = requireGesturesToFail;\n          gesture.prepare();\n        }\n      }\n    }, {\n      key: \"prepare\",\n      value: function prepare() {\n        for (var gesture of this.gestures) {\n          this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n        }\n      }\n    }, {\n      key: \"initialize\",\n      value: function initialize() {\n        for (var gesture of this.gestures) {\n          gesture.initialize();\n        }\n      }\n    }, {\n      key: \"toGestureArray\",\n      value: function toGestureArray() {\n        return this.gestures.flatMap(gesture => gesture.toGestureArray());\n      }\n    }]);\n  }(require(_dependencyMap[6], \"./gesture\").Gesture);\n  var SimultaneousGesture = exports.SimultaneousGesture = /*#__PURE__*/function (_ComposedGesture2) {\n    function SimultaneousGesture() {\n      (0, _classCallCheck2.default)(this, SimultaneousGesture);\n      return _callSuper(this, SimultaneousGesture, arguments);\n    }\n    (0, _inherits2.default)(SimultaneousGesture, _ComposedGesture2);\n    return (0, _createClass2.default)(SimultaneousGesture, [{\n      key: \"prepare\",\n      value: function prepare() {\n        // This piece of magic works something like this:\n        // for every gesture in the array\n        var simultaneousArrays = this.gestures.map(gesture =>\n        // we take the array it's in\n        this.gestures\n        // and make a copy without it\n        .filter(x => x !== gesture)\n        // then we flatmap the result to get list of raw (not composed) gestures\n        // this way we don't make the gestures simultaneous with themselves, which is\n        // important when the gesture is `ExclusiveGesture` - we don't want to make\n        // exclusive gestures simultaneous\n        .flatMap(x => x.toGestureArray()));\n        for (var i = 0; i < this.gestures.length; i++) {\n          this.prepareSingleGesture(this.gestures[i], simultaneousArrays[i], this.requireGesturesToFail);\n        }\n      }\n    }]);\n  }(ComposedGesture);\n  var ExclusiveGesture = exports.ExclusiveGesture = /*#__PURE__*/function (_ComposedGesture3) {\n    function ExclusiveGesture() {\n      (0, _classCallCheck2.default)(this, ExclusiveGesture);\n      return _callSuper(this, ExclusiveGesture, arguments);\n    }\n    (0, _inherits2.default)(ExclusiveGesture, _ComposedGesture3);\n    return (0, _createClass2.default)(ExclusiveGesture, [{\n      key: \"prepare\",\n      value: function prepare() {\n        // Transforms the array of gestures into array of grouped raw (not composed) gestures\n        // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n        var gestureArrays = this.gestures.map(gesture => gesture.toGestureArray());\n        var requireToFail = [];\n        for (var i = 0; i < this.gestures.length; i++) {\n          this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));\n\n          // Every group gets to wait for all groups before it\n          requireToFail = requireToFail.concat(gestureArrays[i]);\n        }\n      }\n    }]);\n  }(ComposedGesture);\n});","lineCount":125,"map":[[14,2,3,0],[14,11,3,9,"extendRelation"],[14,25,3,23,"extendRelation"],[14,26,4,2,"currentRelation"],[14,41,4,43],[14,43,5,2,"extendWith"],[14,53,5,27],[14,55,6,2],[15,4,7,2],[15,8,7,6,"currentRelation"],[15,23,7,21],[15,28,7,26,"undefined"],[15,37,7,35],[15,39,7,37],[16,6,8,4],[16,13,8,11],[16,14,8,12],[16,17,8,15,"extendWith"],[16,27,8,25],[16,28,8,26],[17,4,9,2],[17,5,9,3],[17,11,9,9],[18,6,10,4],[18,13,10,11],[18,14,10,12],[18,17,10,15,"currentRelation"],[18,32,10,30],[18,34,10,32],[18,37,10,35,"extendWith"],[18,47,10,45],[18,48,10,46],[19,4,11,2],[20,2,12,0],[21,2,12,1],[21,6,14,13,"ComposedGesture"],[21,21,14,28],[21,24,14,28,"exports"],[21,31,14,28],[21,32,14,28,"ComposedGesture"],[21,47,14,28],[21,73,14,28,"_Gesture"],[21,81,14,28],[22,4,19,2],[22,13,19,2,"ComposedGesture"],[22,29,19,2],[22,31,19,38],[23,6,19,38],[23,10,19,38,"_this"],[23,15,19,38],[24,6,19,38],[24,10,19,38,"_classCallCheck2"],[24,26,19,38],[24,27,19,38,"default"],[24,34,19,38],[24,42,19,38,"ComposedGesture"],[24,57,19,38],[25,6,20,4,"_this"],[25,11,20,4],[25,14,20,4,"_callSuper"],[25,24,20,4],[25,31,20,4,"ComposedGesture"],[25,46,20,4],[26,6,20,12,"_this"],[26,11,20,12],[26,12,15,12,"gestures"],[26,20,15,20],[26,23,15,34],[26,25,15,36],[27,6,15,36,"_this"],[27,11,15,36],[27,12,16,12,"simultaneousGestures"],[27,32,16,32],[27,35,16,50],[27,37,16,52],[28,6,16,52,"_this"],[28,11,16,52],[28,12,17,12,"requireGesturesToFail"],[28,33,17,33],[28,36,17,51],[28,38,17,53],[29,6,17,53],[29,15,17,53,"_len"],[29,19,17,53],[29,22,17,53,"arguments"],[29,31,17,53],[29,32,17,53,"length"],[29,38,17,53],[29,40,19,17,"gestures"],[29,48,19,25],[29,55,19,25,"Array"],[29,60,19,25],[29,61,19,25,"_len"],[29,65,19,25],[29,68,19,25,"_key"],[29,72,19,25],[29,78,19,25,"_key"],[29,82,19,25],[29,85,19,25,"_len"],[29,89,19,25],[29,91,19,25,"_key"],[29,95,19,25],[30,8,19,17,"gestures"],[30,16,19,25],[30,17,19,25,"_key"],[30,21,19,25],[30,25,19,25,"arguments"],[30,34,19,25],[30,35,19,25,"_key"],[30,39,19,25],[31,6,19,25],[32,6,21,4,"_this"],[32,11,21,4],[32,12,21,9,"gestures"],[32,20,21,17],[32,23,21,20,"gestures"],[32,31,21,28],[33,6,21,29],[33,13,21,29,"_this"],[33,18,21,29],[34,4,22,2],[35,4,22,3],[35,8,22,3,"_inherits2"],[35,18,22,3],[35,19,22,3,"default"],[35,26,22,3],[35,28,22,3,"ComposedGesture"],[35,43,22,3],[35,45,22,3,"_Gesture"],[35,53,22,3],[36,4,22,3],[36,15,22,3,"_createClass2"],[36,28,22,3],[36,29,22,3,"default"],[36,36,22,3],[36,38,22,3,"ComposedGesture"],[36,53,22,3],[37,6,22,3,"key"],[37,9,22,3],[38,6,22,3,"value"],[38,11,22,3],[38,13,24,2],[38,22,24,12,"prepareSingleGesture"],[38,42,24,32,"prepareSingleGesture"],[38,43,25,4,"gesture"],[38,50,25,20],[38,52,26,4,"simultaneousGestures"],[38,72,26,39],[38,74,27,4,"requireGesturesToFail"],[38,95,27,40],[38,97,28,4],[39,8,29,4],[39,12,29,8,"gesture"],[39,19,29,15],[39,31,29,27,"BaseGesture"],[39,57,29,27],[39,58,29,27,"BaseGesture"],[39,82,29,38],[39,84,29,40],[40,10,30,6],[40,14,30,12,"newConfig"],[40,23,30,21],[40,26,30,24],[41,12,30,26],[41,15,30,29,"gesture"],[41,22,30,36],[41,23,30,37,"config"],[42,10,30,44],[42,11,30,45],[44,10,32,6],[45,10,33,6],[46,10,34,6,"newConfig"],[46,19,34,15],[46,20,34,16,"simultaneousWith"],[46,36,34,32],[46,39,34,35,"extendRelation"],[46,53,34,49],[46,54,35,8,"newConfig"],[46,63,35,17],[46,64,35,18,"simultaneousWith"],[46,80,35,34],[46,82,36,8,"simultaneousGestures"],[46,102,37,6],[46,103,37,7],[47,10,38,6,"newConfig"],[47,19,38,15],[47,20,38,16,"requireToFail"],[47,33,38,29],[47,36,38,32,"extendRelation"],[47,50,38,46],[47,51,39,8,"newConfig"],[47,60,39,17],[47,61,39,18,"requireToFail"],[47,74,39,31],[47,76,40,8,"requireGesturesToFail"],[47,97,41,6],[47,98,41,7],[48,10,43,6,"gesture"],[48,17,43,13],[48,18,43,14,"config"],[48,24,43,20],[48,27,43,23,"newConfig"],[48,36,43,32],[49,8,44,4],[49,9,44,5],[49,15,44,11],[49,19,44,15,"gesture"],[49,26,44,22],[49,38,44,34,"ComposedGesture"],[49,53,44,49],[49,55,44,51],[50,10,45,6,"gesture"],[50,17,45,13],[50,18,45,14,"simultaneousGestures"],[50,38,45,34],[50,41,45,37,"simultaneousGestures"],[50,61,45,57],[51,10,46,6,"gesture"],[51,17,46,13],[51,18,46,14,"requireGesturesToFail"],[51,39,46,35],[51,42,46,38,"requireGesturesToFail"],[51,63,46,59],[52,10,47,6,"gesture"],[52,17,47,13],[52,18,47,14,"prepare"],[52,25,47,21],[52,26,47,22],[52,27,47,23],[53,8,48,4],[54,6,49,2],[55,4,49,3],[56,6,49,3,"key"],[56,9,49,3],[57,6,49,3,"value"],[57,11,49,3],[57,13,51,2],[57,22,51,2,"prepare"],[57,29,51,9,"prepare"],[57,30,51,9],[57,32,51,12],[58,8,52,4],[58,13,52,9],[58,17,52,15,"gesture"],[58,24,52,22],[58,28,52,26],[58,32,52,30],[58,33,52,31,"gestures"],[58,41,52,39],[58,43,52,41],[59,10,53,6],[59,14,53,10],[59,15,53,11,"prepareSingleGesture"],[59,35,53,31],[59,36,54,8,"gesture"],[59,43,54,15],[59,45,55,8],[59,49,55,12],[59,50,55,13,"simultaneousGestures"],[59,70,55,33],[59,72,56,8],[59,76,56,12],[59,77,56,13,"requireGesturesToFail"],[59,98,57,6],[59,99,57,7],[60,8,58,4],[61,6,59,2],[62,4,59,3],[63,6,59,3,"key"],[63,9,59,3],[64,6,59,3,"value"],[64,11,59,3],[64,13,61,2],[64,22,61,2,"initialize"],[64,32,61,12,"initialize"],[64,33,61,12],[64,35,61,15],[65,8,62,4],[65,13,62,9],[65,17,62,15,"gesture"],[65,24,62,22],[65,28,62,26],[65,32,62,30],[65,33,62,31,"gestures"],[65,41,62,39],[65,43,62,41],[66,10,63,6,"gesture"],[66,17,63,13],[66,18,63,14,"initialize"],[66,28,63,24],[66,29,63,25],[66,30,63,26],[67,8,64,4],[68,6,65,2],[69,4,65,3],[70,6,65,3,"key"],[70,9,65,3],[71,6,65,3,"value"],[71,11,65,3],[71,13,67,2],[71,22,67,2,"toGestureArray"],[71,36,67,16,"toGestureArray"],[71,37,67,16],[71,39,67,34],[72,8,68,4],[72,15,68,11],[72,19,68,15],[72,20,68,16,"gestures"],[72,28,68,24],[72,29,68,25,"flatMap"],[72,36,68,32],[72,37,68,34,"gesture"],[72,44,68,41],[72,48,68,46,"gesture"],[72,55,68,53],[72,56,68,54,"toGestureArray"],[72,70,68,68],[72,71,68,69],[72,72,68,70],[72,73,68,71],[73,6,69,2],[74,4,69,3],[75,2,69,3],[75,4,14,37,"Gesture"],[75,30,14,37],[75,31,14,37,"Gesture"],[75,51,14,44],[76,2,14,44],[76,6,72,13,"SimultaneousGesture"],[76,25,72,32],[76,28,72,32,"exports"],[76,35,72,32],[76,36,72,32,"SimultaneousGesture"],[76,55,72,32],[76,81,72,32,"_ComposedGesture2"],[76,98,72,32],[77,4,72,32],[77,13,72,32,"SimultaneousGesture"],[77,33,72,32],[78,6,72,32],[78,10,72,32,"_classCallCheck2"],[78,26,72,32],[78,27,72,32,"default"],[78,34,72,32],[78,42,72,32,"SimultaneousGesture"],[78,61,72,32],[79,6,72,32],[79,13,72,32,"_callSuper"],[79,23,72,32],[79,30,72,32,"SimultaneousGesture"],[79,49,72,32],[79,51,72,32,"arguments"],[79,60,72,32],[80,4,72,32],[81,4,72,32],[81,8,72,32,"_inherits2"],[81,18,72,32],[81,19,72,32,"default"],[81,26,72,32],[81,28,72,32,"SimultaneousGesture"],[81,47,72,32],[81,49,72,32,"_ComposedGesture2"],[81,66,72,32],[82,4,72,32],[82,15,72,32,"_createClass2"],[82,28,72,32],[82,29,72,32,"default"],[82,36,72,32],[82,38,72,32,"SimultaneousGesture"],[82,57,72,32],[83,6,72,32,"key"],[83,9,72,32],[84,6,72,32,"value"],[84,11,72,32],[84,13,73,2],[84,22,73,2,"prepare"],[84,29,73,9,"prepare"],[84,30,73,9],[84,32,73,12],[85,8,74,4],[86,8,75,4],[87,8,76,4],[87,12,76,10,"simultaneousArrays"],[87,30,76,28],[87,33,76,31],[87,37,76,35],[87,38,76,36,"gestures"],[87,46,76,44],[87,47,76,45,"map"],[87,50,76,48],[87,51,76,50,"gesture"],[87,58,76,57],[88,8,77,6],[89,8,78,6],[89,12,78,10],[89,13,78,11,"gestures"],[90,8,79,8],[91,8,79,8],[91,9,80,9,"filter"],[91,15,80,15],[91,16,80,17,"x"],[91,17,80,18],[91,21,80,23,"x"],[91,22,80,24],[91,27,80,29,"gesture"],[91,34,80,36],[92,8,81,8],[93,8,82,8],[94,8,83,8],[95,8,84,8],[96,8,84,8],[96,9,85,9,"flatMap"],[96,16,85,16],[96,17,85,18,"x"],[96,18,85,19],[96,22,85,24,"x"],[96,23,85,25],[96,24,85,26,"toGestureArray"],[96,38,85,40],[96,39,85,41],[96,40,85,42],[96,41,86,4],[96,42,86,5],[97,8,88,4],[97,13,88,9],[97,17,88,13,"i"],[97,18,88,14],[97,21,88,17],[97,22,88,18],[97,24,88,20,"i"],[97,25,88,21],[97,28,88,24],[97,32,88,28],[97,33,88,29,"gestures"],[97,41,88,37],[97,42,88,38,"length"],[97,48,88,44],[97,50,88,46,"i"],[97,51,88,47],[97,53,88,49],[97,55,88,51],[98,10,89,6],[98,14,89,10],[98,15,89,11,"prepareSingleGesture"],[98,35,89,31],[98,36,90,8],[98,40,90,12],[98,41,90,13,"gestures"],[98,49,90,21],[98,50,90,22,"i"],[98,51,90,23],[98,52,90,24],[98,54,91,8,"simultaneousArrays"],[98,72,91,26],[98,73,91,27,"i"],[98,74,91,28],[98,75,91,29],[98,77,92,8],[98,81,92,12],[98,82,92,13,"requireGesturesToFail"],[98,103,93,6],[98,104,93,7],[99,8,94,4],[100,6,95,2],[101,4,95,3],[102,2,95,3],[102,4,72,41,"ComposedGesture"],[102,19,72,56],[103,2,72,56],[103,6,98,13,"ExclusiveGesture"],[103,22,98,29],[103,25,98,29,"exports"],[103,32,98,29],[103,33,98,29,"ExclusiveGesture"],[103,49,98,29],[103,75,98,29,"_ComposedGesture3"],[103,92,98,29],[104,4,98,29],[104,13,98,29,"ExclusiveGesture"],[104,30,98,29],[105,6,98,29],[105,10,98,29,"_classCallCheck2"],[105,26,98,29],[105,27,98,29,"default"],[105,34,98,29],[105,42,98,29,"ExclusiveGesture"],[105,58,98,29],[106,6,98,29],[106,13,98,29,"_callSuper"],[106,23,98,29],[106,30,98,29,"ExclusiveGesture"],[106,46,98,29],[106,48,98,29,"arguments"],[106,57,98,29],[107,4,98,29],[108,4,98,29],[108,8,98,29,"_inherits2"],[108,18,98,29],[108,19,98,29,"default"],[108,26,98,29],[108,28,98,29,"ExclusiveGesture"],[108,44,98,29],[108,46,98,29,"_ComposedGesture3"],[108,63,98,29],[109,4,98,29],[109,15,98,29,"_createClass2"],[109,28,98,29],[109,29,98,29,"default"],[109,36,98,29],[109,38,98,29,"ExclusiveGesture"],[109,54,98,29],[110,6,98,29,"key"],[110,9,98,29],[111,6,98,29,"value"],[111,11,98,29],[111,13,99,2],[111,22,99,2,"prepare"],[111,29,99,9,"prepare"],[111,30,99,9],[111,32,99,12],[112,8,100,4],[113,8,101,4],[114,8,102,4],[114,12,102,10,"gestureArrays"],[114,25,102,23],[114,28,102,26],[114,32,102,30],[114,33,102,31,"gestures"],[114,41,102,39],[114,42,102,40,"map"],[114,45,102,43],[114,46,102,45,"gesture"],[114,53,102,52],[114,57,103,6,"gesture"],[114,64,103,13],[114,65,103,14,"toGestureArray"],[114,79,103,28],[114,80,103,29],[114,81,104,4],[114,82,104,5],[115,8,106,4],[115,12,106,8,"requireToFail"],[115,25,106,36],[115,28,106,39],[115,30,106,41],[116,8,108,4],[116,13,108,9],[116,17,108,13,"i"],[116,18,108,14],[116,21,108,17],[116,22,108,18],[116,24,108,20,"i"],[116,25,108,21],[116,28,108,24],[116,32,108,28],[116,33,108,29,"gestures"],[116,41,108,37],[116,42,108,38,"length"],[116,48,108,44],[116,50,108,46,"i"],[116,51,108,47],[116,53,108,49],[116,55,108,51],[117,10,109,6],[117,14,109,10],[117,15,109,11,"prepareSingleGesture"],[117,35,109,31],[117,36,110,8],[117,40,110,12],[117,41,110,13,"gestures"],[117,49,110,21],[117,50,110,22,"i"],[117,51,110,23],[117,52,110,24],[117,54,111,8],[117,58,111,12],[117,59,111,13,"simultaneousGestures"],[117,79,111,33],[117,81,112,8],[117,85,112,12],[117,86,112,13,"requireGesturesToFail"],[117,107,112,34],[117,108,112,35,"concat"],[117,114,112,41],[117,115,112,42,"requireToFail"],[117,128,112,55],[117,129,113,6],[117,130,113,7],[119,10,115,6],[120,10,116,6,"requireToFail"],[120,23,116,19],[120,26,116,22,"requireToFail"],[120,39,116,35],[120,40,116,36,"concat"],[120,46,116,42],[120,47,116,43,"gestureArrays"],[120,60,116,56],[120,61,116,57,"i"],[120,62,116,58],[120,63,116,59],[120,64,116,60],[121,8,117,4],[122,6,118,2],[123,4,118,3],[124,2,118,3],[124,4,98,38,"ComposedGesture"],[124,19,98,53],[125,0,98,53],[125,3]],"functionMap":{"names":["<global>","extendRelation","ComposedGesture","ComposedGesture#constructor","ComposedGesture#prepareSingleGesture","ComposedGesture#prepare","ComposedGesture#initialize","ComposedGesture#toGestureArray","gestures.flatMap$argument_0","SimultaneousGesture","SimultaneousGesture#prepare","gestures.map$argument_0","gestures.filter$argument_0","gestures.filter.flatMap$argument_0","ExclusiveGesture","ExclusiveGesture#prepare"],"mappings":"AAA;ACE;CDS;OEE;ECK;GDG;EEE;GFyB;EGE;GHQ;EIE;GJI;EKE;iCCC,qCD;GLC;CFC;OSE;ECC;iDCG;gBCI,oBD;iBEK,yBF,CD;GDU;CTC;OcE;ECC;4CJG;8BIC;GDe;CdC"}},"type":"js/module"}]}