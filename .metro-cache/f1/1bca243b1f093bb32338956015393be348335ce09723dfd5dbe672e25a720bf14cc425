{"dependencies":[{"name":"nanoid/non-secure","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":17,"index":126},"end":{"line":7,"column":45,"index":154}}],"key":"JdWyQHWvvi7kws4n0MhZWUpiB2c="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BaseRouter = void 0;\n  /**\n   * Base router object that can be used when writing custom routers.\n   * This provides few helper methods to handle common actions such as `RESET`.\n   */\n  var BaseRouter = exports.BaseRouter = {\n    getStateForAction(state, action) {\n      switch (action.type) {\n        case 'SET_PARAMS':\n          {\n            var index = action.source ? state.routes.findIndex(r => r.key === action.source) : state.index;\n            if (index === -1) {\n              return null;\n            }\n            return {\n              ...state,\n              routes: state.routes.map((r, i) => i === index ? {\n                ...r,\n                params: {\n                  ...r.params,\n                  ...action.payload.params\n                }\n              } : r)\n            };\n          }\n        case 'RESET':\n          {\n            var nextState = action.payload;\n            if (nextState.routes.length === 0 || nextState.routes.some(route => !state.routeNames.includes(route.name))) {\n              return null;\n            }\n            if (nextState.stale === false) {\n              if (state.routeNames.length !== nextState.routeNames.length || nextState.routeNames.some(name => !state.routeNames.includes(name))) {\n                return null;\n              }\n              return {\n                ...nextState,\n                routes: nextState.routes.map(route => route.key ? route : {\n                  ...route,\n                  key: `${route.name}-${(0, require(_dependencyMap[0], \"nanoid/non-secure\").nanoid)()}`\n                })\n              };\n            }\n            return nextState;\n          }\n        default:\n          return null;\n      }\n    },\n    shouldActionChangeFocus(action) {\n      return action.type === 'NAVIGATE' || action.type === 'NAVIGATE_DEPRECATED';\n    }\n  };\n});","lineCount":60,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"BaseRouter"],[7,20,6,18],[7,23,6,21],[7,28,6,26],[7,29,6,27],[8,2,8,0],[9,0,9,0],[10,0,10,0],[11,0,11,0],[12,2,12,0],[12,6,12,6,"BaseRouter"],[12,16,12,16],[12,19,12,19,"exports"],[12,26,12,26],[12,27,12,27,"BaseRouter"],[12,37,12,37],[12,40,12,40],[13,4,13,2,"getStateForAction"],[13,21,13,19,"getStateForAction"],[13,22,13,20,"state"],[13,27,13,25],[13,29,13,27,"action"],[13,35,13,33],[13,37,13,35],[14,6,14,4],[14,14,14,12,"action"],[14,20,14,18],[14,21,14,19,"type"],[14,25,14,23],[15,8,15,6],[15,13,15,11],[15,25,15,23],[16,10,16,8],[17,12,17,10],[17,16,17,16,"index"],[17,21,17,21],[17,24,17,24,"action"],[17,30,17,30],[17,31,17,31,"source"],[17,37,17,37],[17,40,17,40,"state"],[17,45,17,45],[17,46,17,46,"routes"],[17,52,17,52],[17,53,17,53,"findIndex"],[17,62,17,62],[17,63,17,63,"r"],[17,64,17,64],[17,68,17,68,"r"],[17,69,17,69],[17,70,17,70,"key"],[17,73,17,73],[17,78,17,78,"action"],[17,84,17,84],[17,85,17,85,"source"],[17,91,17,91],[17,92,17,92],[17,95,17,95,"state"],[17,100,17,100],[17,101,17,101,"index"],[17,106,17,106],[18,12,18,10],[18,16,18,14,"index"],[18,21,18,19],[18,26,18,24],[18,27,18,25],[18,28,18,26],[18,30,18,28],[19,14,19,12],[19,21,19,19],[19,25,19,23],[20,12,20,10],[21,12,21,10],[21,19,21,17],[22,14,22,12],[22,17,22,15,"state"],[22,22,22,20],[23,14,23,12,"routes"],[23,20,23,18],[23,22,23,20,"state"],[23,27,23,25],[23,28,23,26,"routes"],[23,34,23,32],[23,35,23,33,"map"],[23,38,23,36],[23,39,23,37],[23,40,23,38,"r"],[23,41,23,39],[23,43,23,41,"i"],[23,44,23,42],[23,49,23,47,"i"],[23,50,23,48],[23,55,23,53,"index"],[23,60,23,58],[23,63,23,61],[24,16,24,14],[24,19,24,17,"r"],[24,20,24,18],[25,16,25,14,"params"],[25,22,25,20],[25,24,25,22],[26,18,26,16],[26,21,26,19,"r"],[26,22,26,20],[26,23,26,21,"params"],[26,29,26,27],[27,18,27,16],[27,21,27,19,"action"],[27,27,27,25],[27,28,27,26,"payload"],[27,35,27,33],[27,36,27,34,"params"],[28,16,28,14],[29,14,29,12],[29,15,29,13],[29,18,29,16,"r"],[29,19,29,17],[30,12,30,10],[30,13,30,11],[31,10,31,8],[32,8,32,6],[32,13,32,11],[32,20,32,18],[33,10,33,8],[34,12,34,10],[34,16,34,16,"nextState"],[34,25,34,25],[34,28,34,28,"action"],[34,34,34,34],[34,35,34,35,"payload"],[34,42,34,42],[35,12,35,10],[35,16,35,14,"nextState"],[35,25,35,23],[35,26,35,24,"routes"],[35,32,35,30],[35,33,35,31,"length"],[35,39,35,37],[35,44,35,42],[35,45,35,43],[35,49,35,47,"nextState"],[35,58,35,56],[35,59,35,57,"routes"],[35,65,35,63],[35,66,35,64,"some"],[35,70,35,68],[35,71,35,69,"route"],[35,76,35,74],[35,80,35,78],[35,81,35,79,"state"],[35,86,35,84],[35,87,35,85,"routeNames"],[35,97,35,95],[35,98,35,96,"includes"],[35,106,35,104],[35,107,35,105,"route"],[35,112,35,110],[35,113,35,111,"name"],[35,117,35,115],[35,118,35,116],[35,119,35,117],[35,121,35,119],[36,14,36,12],[36,21,36,19],[36,25,36,23],[37,12,37,10],[38,12,38,10],[38,16,38,14,"nextState"],[38,25,38,23],[38,26,38,24,"stale"],[38,31,38,29],[38,36,38,34],[38,41,38,39],[38,43,38,41],[39,14,39,12],[39,18,39,16,"state"],[39,23,39,21],[39,24,39,22,"routeNames"],[39,34,39,32],[39,35,39,33,"length"],[39,41,39,39],[39,46,39,44,"nextState"],[39,55,39,53],[39,56,39,54,"routeNames"],[39,66,39,64],[39,67,39,65,"length"],[39,73,39,71],[39,77,39,75,"nextState"],[39,86,39,84],[39,87,39,85,"routeNames"],[39,97,39,95],[39,98,39,96,"some"],[39,102,39,100],[39,103,39,101,"name"],[39,107,39,105],[39,111,39,109],[39,112,39,110,"state"],[39,117,39,115],[39,118,39,116,"routeNames"],[39,128,39,126],[39,129,39,127,"includes"],[39,137,39,135],[39,138,39,136,"name"],[39,142,39,140],[39,143,39,141],[39,144,39,142],[39,146,39,144],[40,16,40,14],[40,23,40,21],[40,27,40,25],[41,14,41,12],[42,14,42,12],[42,21,42,19],[43,16,43,14],[43,19,43,17,"nextState"],[43,28,43,26],[44,16,44,14,"routes"],[44,22,44,20],[44,24,44,22,"nextState"],[44,33,44,31],[44,34,44,32,"routes"],[44,40,44,38],[44,41,44,39,"map"],[44,44,44,42],[44,45,44,43,"route"],[44,50,44,48],[44,54,44,52,"route"],[44,59,44,57],[44,60,44,58,"key"],[44,63,44,61],[44,66,44,64,"route"],[44,71,44,69],[44,74,44,72],[45,18,45,16],[45,21,45,19,"route"],[45,26,45,24],[46,18,46,16,"key"],[46,21,46,19],[46,23,46,21],[46,26,46,24,"route"],[46,31,46,29],[46,32,46,30,"name"],[46,36,46,34],[46,40,46,38],[46,41,46,39],[46,42,46,40],[46,44,46,42,"require"],[46,51,46,42],[46,52,46,42,"_dependencyMap"],[46,66,46,42],[46,92,46,53,"nanoid"],[46,98,46,59],[46,100,46,61],[46,101,46,62],[47,16,47,14],[47,17,47,15],[48,14,48,12],[48,15,48,13],[49,12,49,10],[50,12,50,10],[50,19,50,17,"nextState"],[50,28,50,26],[51,10,51,8],[52,8,52,6],[53,10,53,8],[53,17,53,15],[53,21,53,19],[54,6,54,4],[55,4,55,2],[55,5,55,3],[56,4,56,2,"shouldActionChangeFocus"],[56,27,56,25,"shouldActionChangeFocus"],[56,28,56,26,"action"],[56,34,56,32],[56,36,56,34],[57,6,57,4],[57,13,57,11,"action"],[57,19,57,17],[57,20,57,18,"type"],[57,24,57,22],[57,29,57,27],[57,39,57,37],[57,43,57,41,"action"],[57,49,57,47],[57,50,57,48,"type"],[57,54,57,52],[57,59,57,57],[57,80,57,78],[58,4,58,2],[59,2,59,0],[59,3,59,1],[60,0,59,2],[60,3]],"functionMap":{"names":["<global>","exports.BaseRouter.getStateForAction","state.routes.findIndex$argument_0","state.routes.map$argument_0","nextState.routes.some$argument_0","nextState.routeNames.some$argument_0","nextState.routes.map$argument_0","exports.BaseRouter.shouldActionChangeFocus"],"mappings":"AAA;ECY;+DCI,4BD;qCEM;iBFM;qEGM,+CH;qGII,wCJ;2CKK;eLG;GDQ;EOC;GPE"}},"type":"js/module"}]}