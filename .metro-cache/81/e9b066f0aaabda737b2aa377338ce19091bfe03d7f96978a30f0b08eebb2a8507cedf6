{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":145,"column":35,"index":5483}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"./createURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":221},"end":{"line":6,"column":36,"index":257}},{"start":{"line":6,"column":0,"index":221},"end":{"line":6,"column":36,"index":257}},{"start":{"line":6,"column":0,"index":221},"end":{"line":6,"column":36,"index":257}}],"key":"vA/KQURWJdMSJD6QjTsub0VGQQ0="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":145,"column":35,"index":5483}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":145,"column":35,"index":5483}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":44,"index":101}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":102},"end":{"line":3,"column":40,"index":142}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"./ExpoLinking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":143},"end":{"line":4,"column":40,"index":183}}],"key":"9p576A/DjaRztdSFcD8Nohub+Qg="}},{"name":"./RNLinking","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":184},"end":{"line":5,"column":36,"index":220}}],"key":"2y1SxYi56UhLqVRPo+LPBad0ytc="}},{"name":"./Linking.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":142,"column":0,"index":5340},"end":{"line":142,"column":32,"index":5372}},{"start":{"line":142,"column":0,"index":5340},"end":{"line":142,"column":32,"index":5372}},{"start":{"line":142,"column":0,"index":5340},"end":{"line":142,"column":32,"index":5372}}],"key":"UNHzwDbHrazdE82g65F1azNEReY="}},{"name":"./Schemes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":143,"column":0,"index":5373},"end":{"line":143,"column":26,"index":5399}},{"start":{"line":143,"column":0,"index":5373},"end":{"line":143,"column":26,"index":5399}},{"start":{"line":143,"column":0,"index":5373},"end":{"line":143,"column":26,"index":5399}}],"key":"n/tFEHLQPHdXg5i1nrK9VhhMvhA="}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY="}},{"name":"./validateURL","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":258},"end":{"line":7,"column":44,"index":302}},{"start":{"line":7,"column":0,"index":258},"end":{"line":7,"column":44,"index":302}}],"key":"QglbFjhSs1PLl8wx6icnjPl9qpg="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _exportNames = {\n    addEventListener: true,\n    parseInitialURLAsync: true,\n    sendIntent: true,\n    openSettings: true,\n    getInitialURL: true,\n    getLinkingURL: true,\n    openURL: true,\n    canOpenURL: true,\n    useURL: true,\n    useLinkingURL: true,\n    parse: true,\n    createURL: true\n  };\n  exports.addEventListener = addEventListener;\n  exports.canOpenURL = canOpenURL;\n  Object.defineProperty(exports, \"createURL\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[1], \"./createURL\").createURL;\n    }\n  });\n  exports.getInitialURL = getInitialURL;\n  exports.getLinkingURL = getLinkingURL;\n  exports.openSettings = openSettings;\n  exports.openURL = openURL;\n  Object.defineProperty(exports, \"parse\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[1], \"./createURL\").parse;\n    }\n  });\n  exports.parseInitialURLAsync = parseInitialURLAsync;\n  exports.sendIntent = sendIntent;\n  exports.useLinkingURL = useLinkingURL;\n  exports.useURL = useURL;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _react = require(_dependencyMap[4], \"react\");\n  var _reactNative = require(_dependencyMap[5], \"react-native\");\n  var _ExpoLinking = _interopRequireDefault(require(_dependencyMap[6], \"./ExpoLinking\"));\n  var _RNLinking = _interopRequireDefault(require(_dependencyMap[7], \"./RNLinking\"));\n  Object.keys(require(_dependencyMap[8], \"./Linking.types\")).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === require(_dependencyMap[8], \"./Linking.types\")[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return require(_dependencyMap[8], \"./Linking.types\")[key];\n      }\n    });\n  });\n  Object.keys(require(_dependencyMap[9], \"./Schemes\")).forEach(function (key) {\n    if (key === \"default\" || key === \"__esModule\") return;\n    if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n    if (key in exports && exports[key] === require(_dependencyMap[9], \"./Schemes\")[key]) return;\n    Object.defineProperty(exports, key, {\n      enumerable: true,\n      get: function () {\n        return require(_dependencyMap[9], \"./Schemes\")[key];\n      }\n    });\n  });\n  // @needsAudit\n  /**\n   * Add a handler to `Linking` changes by listening to the `url` event type and providing the handler.\n   * It is recommended to use the [`useURL()`](#useurl) hook instead.\n   * @param type The only valid type is `'url'`.\n   * @param handler An [`URLListener`](#urllistener) function that takes an `event` object of the type\n   * [`EventType`](#eventtype).\n   * @return An EmitterSubscription that has the remove method from EventSubscription\n   * @see [React Native documentation on Linking](https://reactnative.dev/docs/linking#addeventlistener).\n   */\n  function addEventListener(type, handler) {\n    return _RNLinking.default.addEventListener(type, handler);\n  }\n  // @needsAudit\n  /**\n   * Helper method which wraps React Native's `Linking.getInitialURL()` in `Linking.parse()`.\n   * Parses the deep link information out of the URL used to open the experience initially.\n   * If no link opened the app, all the fields will be `null`.\n   * > On the web it parses the current window URL.\n   * @return A promise that resolves with `ParsedURL` object.\n   */\n  function parseInitialURLAsync() {\n    return _parseInitialURLAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Launch an Android intent with extras.\n   * > Use [`expo-intent-launcher`](./intent-launcher) instead. `sendIntent` is only included in\n   * > `Linking` for API compatibility with React Native's Linking API.\n   * @platform android\n   */\n  function _parseInitialURLAsync() {\n    _parseInitialURLAsync = (0, _asyncToGenerator2.default)(function* () {\n      var initialUrl = yield _RNLinking.default.getInitialURL();\n      if (!initialUrl) {\n        return {\n          scheme: null,\n          hostname: null,\n          path: null,\n          queryParams: null\n        };\n      }\n      return (0, require(_dependencyMap[1], \"./createURL\").parse)(initialUrl);\n    });\n    return _parseInitialURLAsync.apply(this, arguments);\n  }\n  function sendIntent(_x, _x2) {\n    return _sendIntent.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Open the operating system settings app and displays the appâ€™s custom settings, if it has any.\n   */\n  function _sendIntent() {\n    _sendIntent = (0, _asyncToGenerator2.default)(function* (action, extras) {\n      if (_reactNative.Platform.OS === 'android') {\n        return yield _RNLinking.default.sendIntent(action, extras);\n      }\n      throw new (require(_dependencyMap[10], \"expo-modules-core\").UnavailabilityError)('Linking', 'sendIntent');\n    });\n    return _sendIntent.apply(this, arguments);\n  }\n  function openSettings() {\n    return _openSettings.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  function _openSettings() {\n    _openSettings = (0, _asyncToGenerator2.default)(function* () {\n      if (_reactNative.Platform.OS === 'web') {\n        throw new (require(_dependencyMap[10], \"expo-modules-core\").UnavailabilityError)('Linking', 'openSettings');\n      }\n      if (_RNLinking.default.openSettings) {\n        return yield _RNLinking.default.openSettings();\n      }\n      yield openURL('app-settings:');\n    });\n    return _openSettings.apply(this, arguments);\n  }\n  function getInitialURL() {\n    return _getInitialURL.apply(this, arguments);\n  }\n  /**\n   * Get the URL that was used to launch the app if it was launched by a link.\n   * @return The URL string that launched your app, or `null`.\n   */\n  function _getInitialURL() {\n    _getInitialURL = (0, _asyncToGenerator2.default)(function* () {\n      return (yield _RNLinking.default.getInitialURL()) ?? null;\n    });\n    return _getInitialURL.apply(this, arguments);\n  }\n  function getLinkingURL() {\n    return _ExpoLinking.default.getLinkingURL();\n  }\n  // @needsAudit\n  /**\n   * Attempt to open the given URL with an installed app. See the [Linking guide](/guides/linking)\n   * for more information.\n   * @param url A URL for the operating system to open. For example: `tel:5555555`, `exp://`.\n   * @return A `Promise` that is fulfilled with `true` if the link is opened operating system\n   * automatically or the user confirms the prompt to open the link. The `Promise` rejects if there\n   * are no applications registered for the URL or the user cancels the dialog.\n   */\n  function openURL(_x3) {\n    return _openURL.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Determine whether or not an installed app can handle a given URL.\n   * On web this always returns `true` because there is no API for detecting what URLs can be opened.\n   * @param url The URL that you want to test can be opened.\n   * @return A `Promise` object that is fulfilled with `true` if the URL can be handled, otherwise it\n   * `false` if not.\n   * The `Promise` will reject on Android if it was impossible to check if the URL can be opened, and\n   * on iOS if you didn't [add the specific scheme in the `LSApplicationQueriesSchemes` key inside **Info.plist**](/guides/linking#linking-from-your-app).\n   */\n  function _openURL() {\n    _openURL = (0, _asyncToGenerator2.default)(function* (url) {\n      (0, require(_dependencyMap[11], \"./validateURL\").validateURL)(url);\n      return yield _RNLinking.default.openURL(url);\n    });\n    return _openURL.apply(this, arguments);\n  }\n  function canOpenURL(_x4) {\n    return _canOpenURL.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Returns the initial URL followed by any subsequent changes to the URL.\n   * @return Returns the initial URL or `null`.\n   */\n  function _canOpenURL() {\n    _canOpenURL = (0, _asyncToGenerator2.default)(function* (url) {\n      (0, require(_dependencyMap[11], \"./validateURL\").validateURL)(url);\n      return yield _RNLinking.default.canOpenURL(url);\n    });\n    return _canOpenURL.apply(this, arguments);\n  }\n  function useURL() {\n    var _useState = (0, _react.useState)(null),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      url = _useState2[0],\n      setLink = _useState2[1];\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      getInitialURL().then(url => setLink(url));\n      var subscription = addEventListener('url', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url;\n  }\n  /**\n   * Returns the linking URL followed by any subsequent changes to the URL.\n   * Always returns the initial URL immediately on reload.\n   * @return Returns the initial URL or `null`.\n   */\n  function useLinkingURL() {\n    var _useState3 = (0, _react.useState)(_ExpoLinking.default.getLinkingURL),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      url = _useState4[0],\n      setLink = _useState4[1];\n    function onChange(event) {\n      setLink(event.url);\n    }\n    (0, _react.useEffect)(() => {\n      var subscription = _ExpoLinking.default.addListener('onURLReceived', onChange);\n      return () => subscription.remove();\n    }, []);\n    return url ?? null;\n  }\n});","lineCount":241,"map":[[44,2,2,0],[44,6,2,0,"_react"],[44,12,2,0],[44,15,2,0,"require"],[44,22,2,0],[44,23,2,0,"_dependencyMap"],[44,37,2,0],[45,2,3,0],[45,6,3,0,"_reactNative"],[45,18,3,0],[45,21,3,0,"require"],[45,28,3,0],[45,29,3,0,"_dependencyMap"],[45,43,3,0],[46,2,4,0],[46,6,4,0,"_ExpoLinking"],[46,18,4,0],[46,21,4,0,"_interopRequireDefault"],[46,43,4,0],[46,44,4,0,"require"],[46,51,4,0],[46,52,4,0,"_dependencyMap"],[46,66,4,0],[47,2,5,0],[47,6,5,0,"_RNLinking"],[47,16,5,0],[47,19,5,0,"_interopRequireDefault"],[47,41,5,0],[47,42,5,0,"require"],[47,49,5,0],[47,50,5,0,"_dependencyMap"],[47,64,5,0],[48,2,142,0,"Object"],[48,8,142,0],[48,9,142,0,"keys"],[48,13,142,0],[48,14,142,0,"require"],[48,21,142,0],[48,22,142,0,"_dependencyMap"],[48,36,142,0],[48,61,142,0,"forEach"],[48,68,142,0],[48,79,142,0,"key"],[48,82,142,0],[49,4,142,0],[49,8,142,0,"key"],[49,11,142,0],[49,29,142,0,"key"],[49,32,142,0],[50,4,142,0],[50,8,142,0,"Object"],[50,14,142,0],[50,15,142,0,"prototype"],[50,24,142,0],[50,25,142,0,"hasOwnProperty"],[50,39,142,0],[50,40,142,0,"call"],[50,44,142,0],[50,45,142,0,"_exportNames"],[50,57,142,0],[50,59,142,0,"key"],[50,62,142,0],[51,4,142,0],[51,8,142,0,"key"],[51,11,142,0],[51,15,142,0,"exports"],[51,22,142,0],[51,26,142,0,"exports"],[51,33,142,0],[51,34,142,0,"key"],[51,37,142,0],[51,43,142,0,"require"],[51,50,142,0],[51,51,142,0,"_dependencyMap"],[51,65,142,0],[51,89,142,0,"key"],[51,92,142,0],[52,4,142,0,"Object"],[52,10,142,0],[52,11,142,0,"defineProperty"],[52,25,142,0],[52,26,142,0,"exports"],[52,33,142,0],[52,35,142,0,"key"],[52,38,142,0],[53,6,142,0,"enumerable"],[53,16,142,0],[54,6,142,0,"get"],[54,9,142,0],[54,20,142,0,"get"],[54,21,142,0],[55,8,142,0],[55,15,142,0,"require"],[55,22,142,0],[55,23,142,0,"_dependencyMap"],[55,37,142,0],[55,61,142,0,"key"],[55,64,142,0],[56,6,142,0],[57,4,142,0],[58,2,142,0],[59,2,143,0,"Object"],[59,8,143,0],[59,9,143,0,"keys"],[59,13,143,0],[59,14,143,0,"require"],[59,21,143,0],[59,22,143,0,"_dependencyMap"],[59,36,143,0],[59,55,143,0,"forEach"],[59,62,143,0],[59,73,143,0,"key"],[59,76,143,0],[60,4,143,0],[60,8,143,0,"key"],[60,11,143,0],[60,29,143,0,"key"],[60,32,143,0],[61,4,143,0],[61,8,143,0,"Object"],[61,14,143,0],[61,15,143,0,"prototype"],[61,24,143,0],[61,25,143,0,"hasOwnProperty"],[61,39,143,0],[61,40,143,0,"call"],[61,44,143,0],[61,45,143,0,"_exportNames"],[61,57,143,0],[61,59,143,0,"key"],[61,62,143,0],[62,4,143,0],[62,8,143,0,"key"],[62,11,143,0],[62,15,143,0,"exports"],[62,22,143,0],[62,26,143,0,"exports"],[62,33,143,0],[62,34,143,0,"key"],[62,37,143,0],[62,43,143,0,"require"],[62,50,143,0],[62,51,143,0,"_dependencyMap"],[62,65,143,0],[62,83,143,0,"key"],[62,86,143,0],[63,4,143,0,"Object"],[63,10,143,0],[63,11,143,0,"defineProperty"],[63,25,143,0],[63,26,143,0,"exports"],[63,33,143,0],[63,35,143,0,"key"],[63,38,143,0],[64,6,143,0,"enumerable"],[64,16,143,0],[65,6,143,0,"get"],[65,9,143,0],[65,20,143,0,"get"],[65,21,143,0],[66,8,143,0],[66,15,143,0,"require"],[66,22,143,0],[66,23,143,0,"_dependencyMap"],[66,37,143,0],[66,55,143,0,"key"],[66,58,143,0],[67,6,143,0],[68,4,143,0],[69,2,143,0],[70,2,8,0],[71,2,9,0],[72,0,10,0],[73,0,11,0],[74,0,12,0],[75,0,13,0],[76,0,14,0],[77,0,15,0],[78,0,16,0],[79,0,17,0],[80,2,18,7],[80,11,18,16,"addEventListener"],[80,27,18,32,"addEventListener"],[80,28,18,33,"type"],[80,32,18,37],[80,34,18,39,"handler"],[80,41,18,46],[80,43,18,48],[81,4,19,4],[81,11,19,11,"RNLinking"],[81,29,19,20],[81,30,19,21,"addEventListener"],[81,46,19,37],[81,47,19,38,"type"],[81,51,19,42],[81,53,19,44,"handler"],[81,60,19,51],[81,61,19,52],[82,2,20,0],[83,2,21,0],[84,2,22,0],[85,0,23,0],[86,0,24,0],[87,0,25,0],[88,0,26,0],[89,0,27,0],[90,0,28,0],[91,2,22,0],[91,11,29,22,"parseInitialURLAsync"],[91,31,29,42,"parseInitialURLAsync"],[91,32,29,42],[92,4,29,42],[92,11,29,42,"_parseInitialURLAsync"],[92,32,29,42],[92,33,29,42,"apply"],[92,38,29,42],[92,45,29,42,"arguments"],[92,54,29,42],[93,2,29,42],[93,4,41,0],[94,2,42,0],[95,0,43,0],[96,0,44,0],[97,0,45,0],[98,0,46,0],[99,0,47,0],[100,2,42,0],[100,11,42,0,"_parseInitialURLAsync"],[100,33,42,0],[101,4,42,0,"_parseInitialURLAsync"],[101,25,42,0],[101,32,42,0,"_asyncToGenerator2"],[101,50,42,0],[101,51,42,0,"default"],[101,58,42,0],[101,60,29,7],[101,73,29,45],[102,6,30,4],[102,10,30,10,"initialUrl"],[102,20,30,20],[102,29,30,29,"RNLinking"],[102,47,30,38],[102,48,30,39,"getInitialURL"],[102,61,30,52],[102,62,30,53],[102,63,30,54],[103,6,31,4],[103,10,31,8],[103,11,31,9,"initialUrl"],[103,21,31,19],[103,23,31,21],[104,8,32,8],[104,15,32,15],[105,10,33,12,"scheme"],[105,16,33,18],[105,18,33,20],[105,22,33,24],[106,10,34,12,"hostname"],[106,18,34,20],[106,20,34,22],[106,24,34,26],[107,10,35,12,"path"],[107,14,35,16],[107,16,35,18],[107,20,35,22],[108,10,36,12,"queryParams"],[108,21,36,23],[108,23,36,25],[109,8,37,8],[109,9,37,9],[110,6,38,4],[111,6,39,4],[111,13,39,11],[111,17,39,11,"parse"],[111,43,39,11],[111,44,39,11,"parse"],[111,64,39,16],[111,66,39,17,"initialUrl"],[111,76,39,27],[111,77,39,28],[112,4,40,0],[112,5,40,1],[113,4,40,1],[113,11,40,1,"_parseInitialURLAsync"],[113,32,40,1],[113,33,40,1,"apply"],[113,38,40,1],[113,45,40,1,"arguments"],[113,54,40,1],[114,2,40,1],[115,2,40,1],[115,11,48,22,"sendIntent"],[115,21,48,32,"sendIntent"],[115,22,48,32,"_x"],[115,24,48,32],[115,26,48,32,"_x2"],[115,29,48,32],[116,4,48,32],[116,11,48,32,"_sendIntent"],[116,22,48,32],[116,23,48,32,"apply"],[116,28,48,32],[116,35,48,32,"arguments"],[116,44,48,32],[117,2,48,32],[117,4,54,0],[118,2,55,0],[119,0,56,0],[120,0,57,0],[121,2,55,0],[121,11,55,0,"_sendIntent"],[121,23,55,0],[122,4,55,0,"_sendIntent"],[122,15,55,0],[122,22,55,0,"_asyncToGenerator2"],[122,40,55,0],[122,41,55,0,"default"],[122,48,55,0],[122,50,48,7],[122,61,48,33,"action"],[122,67,48,39],[122,69,48,41,"extras"],[122,75,48,47],[122,77,48,49],[123,6,49,4],[123,10,49,8,"Platform"],[123,31,49,16],[123,32,49,17,"OS"],[123,34,49,19],[123,39,49,24],[123,48,49,33],[123,50,49,35],[124,8,50,8],[124,21,50,21,"RNLinking"],[124,39,50,30],[124,40,50,31,"sendIntent"],[124,50,50,41],[124,51,50,42,"action"],[124,57,50,48],[124,59,50,50,"extras"],[124,65,50,56],[124,66,50,57],[125,6,51,4],[126,6,52,4],[126,12,52,10],[126,17,52,14,"UnavailabilityError"],[126,44,52,14],[126,45,52,14,"UnavailabilityError"],[126,85,52,33],[126,87,52,34],[126,96,52,43],[126,98,52,45],[126,110,52,57],[126,111,52,58],[127,4,53,0],[127,5,53,1],[128,4,53,1],[128,11,53,1,"_sendIntent"],[128,22,53,1],[128,23,53,1,"apply"],[128,28,53,1],[128,35,53,1,"arguments"],[128,44,53,1],[129,2,53,1],[130,2,53,1],[130,11,58,22,"openSettings"],[130,23,58,34,"openSettings"],[130,24,58,34],[131,4,58,34],[131,11,58,34,"_openSettings"],[131,24,58,34],[131,25,58,34,"apply"],[131,30,58,34],[131,37,58,34,"arguments"],[131,46,58,34],[132,2,58,34],[132,4,67,0],[133,2,68,0],[134,0,69,0],[135,0,70,0],[136,0,71,0],[137,2,68,0],[137,11,68,0,"_openSettings"],[137,25,68,0],[138,4,68,0,"_openSettings"],[138,17,68,0],[138,24,68,0,"_asyncToGenerator2"],[138,42,68,0],[138,43,68,0,"default"],[138,50,68,0],[138,52,58,7],[138,65,58,37],[139,6,59,4],[139,10,59,8,"Platform"],[139,31,59,16],[139,32,59,17,"OS"],[139,34,59,19],[139,39,59,24],[139,44,59,29],[139,46,59,31],[140,8,60,8],[140,14,60,14],[140,19,60,18,"UnavailabilityError"],[140,46,60,18],[140,47,60,18,"UnavailabilityError"],[140,87,60,37],[140,89,60,38],[140,98,60,47],[140,100,60,49],[140,114,60,63],[140,115,60,64],[141,6,61,4],[142,6,62,4],[142,10,62,8,"RNLinking"],[142,28,62,17],[142,29,62,18,"openSettings"],[142,41,62,30],[142,43,62,32],[143,8,63,8],[143,21,63,21,"RNLinking"],[143,39,63,30],[143,40,63,31,"openSettings"],[143,52,63,43],[143,53,63,44],[143,54,63,45],[144,6,64,4],[145,6,65,4],[145,12,65,10,"openURL"],[145,19,65,17],[145,20,65,18],[145,35,65,33],[145,36,65,34],[146,4,66,0],[146,5,66,1],[147,4,66,1],[147,11,66,1,"_openSettings"],[147,24,66,1],[147,25,66,1,"apply"],[147,30,66,1],[147,37,66,1,"arguments"],[147,46,66,1],[148,2,66,1],[149,2,66,1],[149,11,72,22,"getInitialURL"],[149,24,72,35,"getInitialURL"],[149,25,72,35],[150,4,72,35],[150,11,72,35,"_getInitialURL"],[150,25,72,35],[150,26,72,35,"apply"],[150,31,72,35],[150,38,72,35,"arguments"],[150,47,72,35],[151,2,72,35],[152,2,75,0],[153,0,76,0],[154,0,77,0],[155,0,78,0],[156,2,75,0],[156,11,75,0,"_getInitialURL"],[156,26,75,0],[157,4,75,0,"_getInitialURL"],[157,18,75,0],[157,25,75,0,"_asyncToGenerator2"],[157,43,75,0],[157,44,75,0,"default"],[157,51,75,0],[157,53,72,7],[157,66,72,38],[158,6,73,4],[158,13,73,11],[158,20,73,18,"RNLinking"],[158,38,73,27],[158,39,73,28,"getInitialURL"],[158,52,73,41],[158,53,73,42],[158,54,73,43],[158,59,73,48],[158,63,73,52],[159,4,74,0],[159,5,74,1],[160,4,74,1],[160,11,74,1,"_getInitialURL"],[160,25,74,1],[160,26,74,1,"apply"],[160,31,74,1],[160,38,74,1,"arguments"],[160,47,74,1],[161,2,74,1],[162,2,79,7],[162,11,79,16,"getLinkingURL"],[162,24,79,29,"getLinkingURL"],[162,25,79,29],[162,27,79,32],[163,4,80,4],[163,11,80,11,"ExpoLinking"],[163,31,80,22],[163,32,80,23,"getLinkingURL"],[163,45,80,36],[163,46,80,37],[163,47,80,38],[164,2,81,0],[165,2,82,0],[166,2,83,0],[167,0,84,0],[168,0,85,0],[169,0,86,0],[170,0,87,0],[171,0,88,0],[172,0,89,0],[173,0,90,0],[174,2,83,0],[174,11,91,22,"openURL"],[174,18,91,29,"openURL"],[174,19,91,29,"_x3"],[174,22,91,29],[175,4,91,29],[175,11,91,29,"_openURL"],[175,19,91,29],[175,20,91,29,"apply"],[175,25,91,29],[175,32,91,29,"arguments"],[175,41,91,29],[176,2,91,29],[176,4,95,0],[177,2,96,0],[178,0,97,0],[179,0,98,0],[180,0,99,0],[181,0,100,0],[182,0,101,0],[183,0,102,0],[184,0,103,0],[185,0,104,0],[186,2,96,0],[186,11,96,0,"_openURL"],[186,20,96,0],[187,4,96,0,"_openURL"],[187,12,96,0],[187,19,96,0,"_asyncToGenerator2"],[187,37,96,0],[187,38,96,0,"default"],[187,45,96,0],[187,47,91,7],[187,58,91,30,"url"],[187,61,91,33],[187,63,91,35],[188,6,92,4],[188,10,92,4,"validateURL"],[188,37,92,4],[188,38,92,4,"validateURL"],[188,66,92,15],[188,68,92,16,"url"],[188,71,92,19],[188,72,92,20],[189,6,93,4],[189,19,93,17,"RNLinking"],[189,37,93,26],[189,38,93,27,"openURL"],[189,45,93,34],[189,46,93,35,"url"],[189,49,93,38],[189,50,93,39],[190,4,94,0],[190,5,94,1],[191,4,94,1],[191,11,94,1,"_openURL"],[191,19,94,1],[191,20,94,1,"apply"],[191,25,94,1],[191,32,94,1,"arguments"],[191,41,94,1],[192,2,94,1],[193,2,94,1],[193,11,105,22,"canOpenURL"],[193,21,105,32,"canOpenURL"],[193,22,105,32,"_x4"],[193,25,105,32],[194,4,105,32],[194,11,105,32,"_canOpenURL"],[194,22,105,32],[194,23,105,32,"apply"],[194,28,105,32],[194,35,105,32,"arguments"],[194,44,105,32],[195,2,105,32],[195,4,109,0],[196,2,110,0],[197,0,111,0],[198,0,112,0],[199,0,113,0],[200,2,110,0],[200,11,110,0,"_canOpenURL"],[200,23,110,0],[201,4,110,0,"_canOpenURL"],[201,15,110,0],[201,22,110,0,"_asyncToGenerator2"],[201,40,110,0],[201,41,110,0,"default"],[201,48,110,0],[201,50,105,7],[201,61,105,33,"url"],[201,64,105,36],[201,66,105,38],[202,6,106,4],[202,10,106,4,"validateURL"],[202,37,106,4],[202,38,106,4,"validateURL"],[202,66,106,15],[202,68,106,16,"url"],[202,71,106,19],[202,72,106,20],[203,6,107,4],[203,19,107,17,"RNLinking"],[203,37,107,26],[203,38,107,27,"canOpenURL"],[203,48,107,37],[203,49,107,38,"url"],[203,52,107,41],[203,53,107,42],[204,4,108,0],[204,5,108,1],[205,4,108,1],[205,11,108,1,"_canOpenURL"],[205,22,108,1],[205,23,108,1,"apply"],[205,28,108,1],[205,35,108,1,"arguments"],[205,44,108,1],[206,2,108,1],[207,2,114,7],[207,11,114,16,"useURL"],[207,17,114,22,"useURL"],[207,18,114,22],[207,20,114,25],[208,4,115,4],[208,8,115,4,"_useState"],[208,17,115,4],[208,20,115,27],[208,24,115,27,"useState"],[208,39,115,35],[208,41,115,36],[208,45,115,40],[208,46,115,41],[209,6,115,41,"_useState2"],[209,16,115,41],[209,23,115,41,"_slicedToArray2"],[209,38,115,41],[209,39,115,41,"default"],[209,46,115,41],[209,48,115,41,"_useState"],[209,57,115,41],[210,6,115,11,"url"],[210,9,115,14],[210,12,115,14,"_useState2"],[210,22,115,14],[211,6,115,16,"setLink"],[211,13,115,23],[211,16,115,23,"_useState2"],[211,26,115,23],[212,4,116,4],[212,13,116,13,"onChange"],[212,21,116,21,"onChange"],[212,22,116,22,"event"],[212,27,116,27],[212,29,116,29],[213,6,117,8,"setLink"],[213,13,117,15],[213,14,117,16,"event"],[213,19,117,21],[213,20,117,22,"url"],[213,23,117,25],[213,24,117,26],[214,4,118,4],[215,4,119,4],[215,8,119,4,"useEffect"],[215,24,119,13],[215,26,119,14],[215,32,119,20],[216,6,120,8,"getInitialURL"],[216,19,120,21],[216,20,120,22],[216,21,120,23],[216,22,120,24,"then"],[216,26,120,28],[216,27,120,30,"url"],[216,30,120,33],[216,34,120,38,"setLink"],[216,41,120,45],[216,42,120,46,"url"],[216,45,120,49],[216,46,120,50],[216,47,120,51],[217,6,121,8],[217,10,121,14,"subscription"],[217,22,121,26],[217,25,121,29,"addEventListener"],[217,41,121,45],[217,42,121,46],[217,47,121,51],[217,49,121,53,"onChange"],[217,57,121,61],[217,58,121,62],[218,6,122,8],[218,13,122,15],[218,19,122,21,"subscription"],[218,31,122,33],[218,32,122,34,"remove"],[218,38,122,40],[218,39,122,41],[218,40,122,42],[219,4,123,4],[219,5,123,5],[219,7,123,7],[219,9,123,9],[219,10,123,10],[220,4,124,4],[220,11,124,11,"url"],[220,14,124,14],[221,2,125,0],[222,2,126,0],[223,0,127,0],[224,0,128,0],[225,0,129,0],[226,0,130,0],[227,2,131,7],[227,11,131,16,"useLinkingURL"],[227,24,131,29,"useLinkingURL"],[227,25,131,29],[227,27,131,32],[228,4,132,4],[228,8,132,4,"_useState3"],[228,18,132,4],[228,21,132,27],[228,25,132,27,"useState"],[228,40,132,35],[228,42,132,36,"ExpoLinking"],[228,62,132,47],[228,63,132,48,"getLinkingURL"],[228,76,132,61],[228,77,132,62],[229,6,132,62,"_useState4"],[229,16,132,62],[229,23,132,62,"_slicedToArray2"],[229,38,132,62],[229,39,132,62,"default"],[229,46,132,62],[229,48,132,62,"_useState3"],[229,58,132,62],[230,6,132,11,"url"],[230,9,132,14],[230,12,132,14,"_useState4"],[230,22,132,14],[231,6,132,16,"setLink"],[231,13,132,23],[231,16,132,23,"_useState4"],[231,26,132,23],[232,4,133,4],[232,13,133,13,"onChange"],[232,21,133,21,"onChange"],[232,22,133,22,"event"],[232,27,133,27],[232,29,133,29],[233,6,134,8,"setLink"],[233,13,134,15],[233,14,134,16,"event"],[233,19,134,21],[233,20,134,22,"url"],[233,23,134,25],[233,24,134,26],[234,4,135,4],[235,4,136,4],[235,8,136,4,"useEffect"],[235,24,136,13],[235,26,136,14],[235,32,136,20],[236,6,137,8],[236,10,137,14,"subscription"],[236,22,137,26],[236,25,137,29,"ExpoLinking"],[236,45,137,40],[236,46,137,41,"addListener"],[236,57,137,52],[236,58,137,53],[236,73,137,68],[236,75,137,70,"onChange"],[236,83,137,78],[236,84,137,79],[237,6,138,8],[237,13,138,15],[237,19,138,21,"subscription"],[237,31,138,33],[237,32,138,34,"remove"],[237,38,138,40],[237,39,138,41],[237,40,138,42],[238,4,139,4],[238,5,139,5],[238,7,139,7],[238,9,139,9],[238,10,139,10],[239,4,140,4],[239,11,140,11,"url"],[239,14,140,14],[239,18,140,18],[239,22,140,22],[240,2,141,0],[241,0,141,1],[241,3]],"functionMap":{"names":["<global>","addEventListener","parseInitialURLAsync","sendIntent","openSettings","getInitialURL","getLinkingURL","openURL","canOpenURL","useURL","onChange","useEffect$argument_0","getInitialURL.then$argument_0","<anonymous>","useLinkingURL"],"mappings":"AAA;OCiB;CDE;OES;CFW;OGQ;CHK;OIK;CJQ;OKM;CLE;OMK;CNE;OOU;CPG;OQW;CRG;OSM;ICE;KDE;cEC;6BCC,qBD;eEE,2BF;KFC;CTE;OcM;IJE;KIE;cHC;eEE,2BF;KGC;CdE"}},"type":"js/module"}]}