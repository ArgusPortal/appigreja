{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"./PerformanceEntry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0},"end":{"line":18,"column":52}}],"key":"brFNAt3Zh5rA+ZZUGgMallCwpmE="}},{"name":"./EventTiming","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0},"end":{"line":17,"column":53}}],"key":"Rer5zYKtklTjjy8E2Iy2V8Wu9H8="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/classPrivateFieldLooseBase","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"jktBven9cFmiXr10q2uuMiBaNBg="}},{"name":"@babel/runtime/helpers/classPrivateFieldLooseKey","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":331,"column":32}}],"key":"YYsVumDWjUPySlBONhl8so2wff4="}},{"name":"../../../../Libraries/Utilities/warnOnce","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0},"end":{"line":16,"column":64}}],"key":"43GRWl1n9ZFZTznImo21EsewDAQ="}},{"name":"./specs/NativePerformanceObserver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0},"end":{"line":24,"column":74}}],"key":"CgNxqX84uFYcKZ3BphoqPoW7EnA="}},{"name":"./RawPerformanceEntry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0},"end":{"line":23,"column":31}},{"start":{"line":19,"column":0},"end":{"line":23,"column":31}},{"start":{"line":19,"column":0},"end":{"line":23,"column":31}},{"start":{"line":19,"column":0},"end":{"line":23,"column":31}}],"key":"IK+Gykxxt1SJMUQA0aRx+ibytHw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"PerformanceEntry\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[1], \"./PerformanceEntry\").PerformanceEntry;\n    }\n  });\n  Object.defineProperty(exports, \"PerformanceEventTiming\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[2], \"./EventTiming\").PerformanceEventTiming;\n    }\n  });\n  exports.PerformanceObserverEntryList = exports.PerformanceObserver = void 0;\n  exports.warnNoNativePerformanceObserver = warnNoNativePerformanceObserver;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n  var _classPrivateFieldLooseBase2 = _interopRequireDefault(require(_dependencyMap[6], \"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n  var _classPrivateFieldLooseKey2 = _interopRequireDefault(require(_dependencyMap[7], \"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n  var _warnOnce = _interopRequireDefault(require(_dependencyMap[8], \"../../../../Libraries/Utilities/warnOnce\"));\n  var _NativePerformanceObserver = _interopRequireDefault(require(_dependencyMap[9], \"./specs/NativePerformanceObserver\"));\n  var _entries = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"entries\");\n  var PerformanceObserverEntryList = exports.PerformanceObserverEntryList = /*#__PURE__*/function () {\n    function PerformanceObserverEntryList(entries) {\n      (0, _classCallCheck2.default)(this, PerformanceObserverEntryList);\n      Object.defineProperty(this, _entries, {\n        writable: true,\n        value: void 0\n      });\n      (0, _classPrivateFieldLooseBase2.default)(this, _entries)[_entries] = entries;\n    }\n    return (0, _createClass2.default)(PerformanceObserverEntryList, [{\n      key: \"getEntries\",\n      value: function getEntries() {\n        return (0, _classPrivateFieldLooseBase2.default)(this, _entries)[_entries];\n      }\n    }, {\n      key: \"getEntriesByType\",\n      value: function getEntriesByType(type) {\n        return (0, _classPrivateFieldLooseBase2.default)(this, _entries)[_entries].filter(entry => entry.entryType === type);\n      }\n    }, {\n      key: \"getEntriesByName\",\n      value: function getEntriesByName(name, type) {\n        if (type === undefined) {\n          return (0, _classPrivateFieldLooseBase2.default)(this, _entries)[_entries].filter(entry => entry.name === name);\n        } else {\n          return (0, _classPrivateFieldLooseBase2.default)(this, _entries)[_entries].filter(entry => entry.name === name && entry.entryType === type);\n        }\n      }\n    }]);\n  }();\n  var observerCountPerEntryType = new Map();\n  var registeredObservers = new Map();\n  var isOnPerformanceEntryCallbackSet = false;\n  var onPerformanceEntry = () => {\n    if (!_NativePerformanceObserver.default) {\n      return;\n    }\n    var entryResult = _NativePerformanceObserver.default.popPendingEntries();\n    var rawEntries = entryResult?.entries ?? [];\n    var droppedEntriesCount = entryResult?.droppedEntriesCount;\n    if (rawEntries.length === 0) {\n      return;\n    }\n    var entries = rawEntries.map(require(_dependencyMap[10], \"./RawPerformanceEntry\").rawToPerformanceEntry);\n    var _loop = function (observerConfig) {\n      var entriesForObserver = entries.filter(entry => {\n        if (!observerConfig.entryTypes.has(entry.entryType)) {\n          return false;\n        }\n        if (entry.entryType === 'event' && observerConfig.durationThreshold != null) {\n          return entry.duration >= observerConfig.durationThreshold;\n        }\n        return true;\n      });\n      if (entriesForObserver.length !== 0) {\n        try {\n          observerConfig.callback(new PerformanceObserverEntryList(entriesForObserver), _observer, droppedEntriesCount);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    };\n    for (var _ref of registeredObservers.entries()) {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2);\n      var _observer = _ref2[0];\n      var observerConfig = _ref2[1];\n      _loop(observerConfig);\n    }\n  };\n  function warnNoNativePerformanceObserver() {\n    (0, _warnOnce.default)('missing-native-performance-observer', 'Missing native implementation of PerformanceObserver');\n  }\n  function applyDurationThresholds() {\n    var durationThresholds = Array.from(registeredObservers.values()).map(observerConfig => observerConfig.durationThreshold).filter(Boolean);\n    return Math.min(...durationThresholds);\n  }\n  function getSupportedPerformanceEntryTypes() {\n    if (!_NativePerformanceObserver.default) {\n      return Object.freeze([]);\n    }\n    if (!_NativePerformanceObserver.default.getSupportedPerformanceEntryTypes) {\n      return Object.freeze(['mark', 'measure', 'event']);\n    }\n    return Object.freeze(_NativePerformanceObserver.default.getSupportedPerformanceEntryTypes().map(require(_dependencyMap[10], \"./RawPerformanceEntry\").rawToPerformanceEntryType));\n  }\n  var _callback = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"callback\");\n  var _type = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"type\");\n  var _validateObserveOptions = /*#__PURE__*/(0, _classPrivateFieldLooseKey2.default)(\"validateObserveOptions\");\n  var PerformanceObserver = exports.PerformanceObserver = /*#__PURE__*/function () {\n    function PerformanceObserver(callback) {\n      (0, _classCallCheck2.default)(this, PerformanceObserver);\n      Object.defineProperty(this, _validateObserveOptions, {\n        value: _validateObserveOptions2\n      });\n      Object.defineProperty(this, _callback, {\n        writable: true,\n        value: void 0\n      });\n      Object.defineProperty(this, _type, {\n        writable: true,\n        value: void 0\n      });\n      (0, _classPrivateFieldLooseBase2.default)(this, _callback)[_callback] = callback;\n    }\n    return (0, _createClass2.default)(PerformanceObserver, [{\n      key: \"observe\",\n      value: function observe(options) {\n        if (!_NativePerformanceObserver.default) {\n          warnNoNativePerformanceObserver();\n          return;\n        }\n        (0, _classPrivateFieldLooseBase2.default)(this, _validateObserveOptions)[_validateObserveOptions](options);\n        var requestedEntryTypes;\n        if (options.entryTypes) {\n          (0, _classPrivateFieldLooseBase2.default)(this, _type)[_type] = 'multiple';\n          requestedEntryTypes = new Set(options.entryTypes);\n        } else {\n          (0, _classPrivateFieldLooseBase2.default)(this, _type)[_type] = 'single';\n          requestedEntryTypes = new Set([options.type]);\n        }\n        var currentEntryTypes = registeredObservers.get(this)?.entryTypes;\n        var nextEntryTypes = currentEntryTypes ? union(requestedEntryTypes, currentEntryTypes) : requestedEntryTypes;\n        if (currentEntryTypes && currentEntryTypes.size === nextEntryTypes.size) {\n          return;\n        }\n        registeredObservers.set(this, {\n          callback: (0, _classPrivateFieldLooseBase2.default)(this, _callback)[_callback],\n          durationThreshold: options.type === 'event' ? options.durationThreshold : undefined,\n          entryTypes: nextEntryTypes\n        });\n        if (!isOnPerformanceEntryCallbackSet) {\n          _NativePerformanceObserver.default.setOnPerformanceEntryCallback(onPerformanceEntry);\n          isOnPerformanceEntryCallbackSet = true;\n        }\n        var newEntryTypes = currentEntryTypes ? difference(new Set(requestedEntryTypes.keys()), new Set(currentEntryTypes.keys())) : new Set(requestedEntryTypes.keys());\n        for (var type of newEntryTypes) {\n          if (!observerCountPerEntryType.has(type)) {\n            var rawType = (0, require(_dependencyMap[10], \"./RawPerformanceEntry\").performanceEntryTypeToRaw)(type);\n            _NativePerformanceObserver.default.startReporting(rawType);\n          }\n          observerCountPerEntryType.set(type, (observerCountPerEntryType.get(type) ?? 0) + 1);\n        }\n        applyDurationThresholds();\n      }\n    }, {\n      key: \"disconnect\",\n      value: function disconnect() {\n        if (!_NativePerformanceObserver.default) {\n          warnNoNativePerformanceObserver();\n          return;\n        }\n        var observerConfig = registeredObservers.get(this);\n        if (!observerConfig) {\n          return;\n        }\n        for (var type of observerConfig.entryTypes.keys()) {\n          var numberOfObserversForThisType = observerCountPerEntryType.get(type) ?? 0;\n          if (numberOfObserversForThisType === 1) {\n            observerCountPerEntryType.delete(type);\n            _NativePerformanceObserver.default.stopReporting((0, require(_dependencyMap[10], \"./RawPerformanceEntry\").performanceEntryTypeToRaw)(type));\n          } else if (numberOfObserversForThisType !== 0) {\n            observerCountPerEntryType.set(type, numberOfObserversForThisType - 1);\n          }\n        }\n        registeredObservers.delete(this);\n        if (registeredObservers.size === 0) {\n          _NativePerformanceObserver.default.setOnPerformanceEntryCallback(undefined);\n          isOnPerformanceEntryCallbackSet = false;\n        }\n        applyDurationThresholds();\n      }\n    }]);\n  }();\n  function _validateObserveOptions2(options) {\n    var type = options.type,\n      entryTypes = options.entryTypes,\n      durationThreshold = options.durationThreshold;\n    if (!type && !entryTypes) {\n      throw new TypeError(\"Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and type arguments.\");\n    }\n    if (entryTypes && type) {\n      throw new TypeError(\"Failed to execute 'observe' on 'PerformanceObserver': An observe() call must include either entryTypes or type arguments.\");\n    }\n    if ((0, _classPrivateFieldLooseBase2.default)(this, _type)[_type] === 'multiple' && type) {\n      throw new Error(\"Failed to execute 'observe' on 'PerformanceObserver': This observer has performed observe({entryTypes:...}, therefore it cannot perform observe({type:...})\");\n    }\n    if ((0, _classPrivateFieldLooseBase2.default)(this, _type)[_type] === 'single' && entryTypes) {\n      throw new Error(\"Failed to execute 'observe' on 'PerformanceObserver': This PerformanceObserver has performed observe({type:...}, therefore it cannot perform observe({entryTypes:...})\");\n    }\n    if (entryTypes && durationThreshold !== undefined) {\n      throw new TypeError(\"Failed to execute 'observe' on 'PerformanceObserver': An observe() call must not include both entryTypes and durationThreshold arguments.\");\n    }\n  }\n  PerformanceObserver.supportedEntryTypes = getSupportedPerformanceEntryTypes();\n  function union(a, b) {\n    return new Set([...a, ...b]);\n  }\n  function difference(a, b) {\n    return new Set([...a].filter(x => !b.has(x)));\n  }\n});","lineCount":228,"map":[[25,2,16,0],[25,6,16,0,"_warnOnce"],[25,15,16,0],[25,18,16,0,"_interopRequireDefault"],[25,40,16,0],[25,41,16,0,"require"],[25,48,16,0],[25,49,16,0,"_dependencyMap"],[25,63,16,0],[26,2,24,0],[26,6,24,0,"_NativePerformanceObserver"],[26,32,24,0],[26,35,24,0,"_interopRequireDefault"],[26,57,24,0],[26,58,24,0,"require"],[26,65,24,0],[26,66,24,0,"_dependencyMap"],[26,80,24,0],[27,2,24,74],[27,6,24,74,"_entries"],[27,14,24,74],[27,34,24,74,"_classPrivateFieldLooseKey2"],[27,61,24,74],[27,62,24,74,"default"],[27,69,24,74],[28,2,24,74],[28,6,30,13,"PerformanceObserverEntryList"],[28,34,30,41],[28,37,30,41,"exports"],[28,44,30,41],[28,45,30,41,"PerformanceObserverEntryList"],[28,73,30,41],[29,4,33,2],[29,13,33,2,"PerformanceObserverEntryList"],[29,42,33,14,"entries"],[29,49,33,43],[29,51,33,45],[30,6,33,45],[30,10,33,45,"_classCallCheck2"],[30,26,33,45],[30,27,33,45,"default"],[30,34,33,45],[30,42,33,45,"PerformanceObserverEntryList"],[30,70,33,45],[31,6,33,45,"Object"],[31,12,33,45],[31,13,33,45,"defineProperty"],[31,27,33,45],[31,34,33,45,"_entries"],[31,42,33,45],[32,8,33,45,"writable"],[32,16,33,45],[33,8,33,45,"value"],[33,13,33,45],[34,6,33,45],[35,6,34,4],[35,10,34,4,"_classPrivateFieldLooseBase2"],[35,38,34,4],[35,39,34,4,"default"],[35,46,34,4],[35,52,34,8],[35,54,34,8,"_entries"],[35,62,34,8],[35,64,34,8,"_entries"],[35,72,34,8],[35,76,34,20,"entries"],[35,83,34,27],[36,4,35,2],[37,4,35,3],[37,15,35,3,"_createClass2"],[37,28,35,3],[37,29,35,3,"default"],[37,36,35,3],[37,38,35,3,"PerformanceObserverEntryList"],[37,66,35,3],[38,6,35,3,"key"],[38,9,35,3],[39,6,35,3,"value"],[39,11,35,3],[39,13,37,2],[39,22,37,2,"getEntries"],[39,32,37,12,"getEntries"],[39,33,37,12],[39,35,37,37],[40,8,38,4],[40,19,38,4,"_classPrivateFieldLooseBase2"],[40,47,38,4],[40,48,38,4,"default"],[40,55,38,4],[40,57,38,11],[40,61,38,15],[40,63,38,15,"_entries"],[40,71,38,15],[40,73,38,15,"_entries"],[40,81,38,15],[41,6,39,2],[42,4,39,3],[43,6,39,3,"key"],[43,9,39,3],[44,6,39,3,"value"],[44,11,39,3],[44,13,41,2],[44,22,41,2,"getEntriesByType"],[44,38,41,18,"getEntriesByType"],[44,39,41,19,"type"],[44,43,41,45],[44,45,41,69],[45,8,42,4],[45,15,42,11],[45,19,42,11,"_classPrivateFieldLooseBase2"],[45,47,42,11],[45,48,42,11,"default"],[45,55,42,11],[45,61,42,15],[45,63,42,15,"_entries"],[45,71,42,15],[45,73,42,15,"_entries"],[45,81,42,15],[45,83,42,25,"filter"],[45,89,42,31],[45,90,42,32,"entry"],[45,95,42,37],[45,99,42,41,"entry"],[45,104,42,46],[45,105,42,47,"entryType"],[45,114,42,56],[45,119,42,61,"type"],[45,123,42,65],[45,124,42,66],[46,6,43,2],[47,4,43,3],[48,6,43,3,"key"],[48,9,43,3],[49,6,43,3,"value"],[49,11,43,3],[49,13,45,2],[49,22,45,2,"getEntriesByName"],[49,38,45,18,"getEntriesByName"],[49,39,46,4,"name"],[49,43,46,16],[49,45,47,4,"type"],[49,49,47,31],[49,51,48,26],[50,8,49,4],[50,12,49,8,"type"],[50,16,49,12],[50,21,49,17,"undefined"],[50,30,49,26],[50,32,49,28],[51,10,50,6],[51,17,50,13],[51,21,50,13,"_classPrivateFieldLooseBase2"],[51,49,50,13],[51,50,50,13,"default"],[51,57,50,13],[51,63,50,17],[51,65,50,17,"_entries"],[51,73,50,17],[51,75,50,17,"_entries"],[51,83,50,17],[51,85,50,27,"filter"],[51,91,50,33],[51,92,50,34,"entry"],[51,97,50,39],[51,101,50,43,"entry"],[51,106,50,48],[51,107,50,49,"name"],[51,111,50,53],[51,116,50,58,"name"],[51,120,50,62],[51,121,50,63],[52,8,51,4],[52,9,51,5],[52,15,51,11],[53,10,52,6],[53,17,52,13],[53,21,52,13,"_classPrivateFieldLooseBase2"],[53,49,52,13],[53,50,52,13,"default"],[53,57,52,13],[53,63,52,17],[53,65,52,17,"_entries"],[53,73,52,17],[53,75,52,17,"_entries"],[53,83,52,17],[53,85,52,27,"filter"],[53,91,52,33],[53,92,53,8,"entry"],[53,97,53,13],[53,101,53,17,"entry"],[53,106,53,22],[53,107,53,23,"name"],[53,111,53,27],[53,116,53,32,"name"],[53,120,53,36],[53,124,53,40,"entry"],[53,129,53,45],[53,130,53,46,"entryType"],[53,139,53,55],[53,144,53,60,"type"],[53,148,54,6],[53,149,54,7],[54,8,55,4],[55,6,56,2],[56,4,56,3],[57,2,56,3],[58,2,81,0],[58,6,81,6,"observerCountPerEntryType"],[58,31,81,66],[58,34,81,69],[58,38,81,73,"Map"],[58,41,81,76],[58,42,81,77],[58,43,81,78],[59,2,82,0],[59,6,82,6,"registeredObservers"],[59,25,82,78],[59,28,83,2],[59,32,83,6,"Map"],[59,35,83,9],[59,36,83,10],[59,37,83,11],[60,2,84,0],[60,6,84,4,"isOnPerformanceEntryCallbackSet"],[60,37,84,44],[60,40,84,47],[60,45,84,52],[61,2,87,0],[61,6,87,6,"onPerformanceEntry"],[61,24,87,24],[61,27,87,27,"onPerformanceEntry"],[61,28,87,27],[61,33,87,33],[62,4,88,2],[62,8,88,6],[62,9,88,7,"NativePerformanceObserver"],[62,43,88,32],[62,45,88,34],[63,6,89,4],[64,4,90,2],[65,4,91,2],[65,8,91,8,"entryResult"],[65,19,91,19],[65,22,91,22,"NativePerformanceObserver"],[65,56,91,47],[65,57,91,48,"popPendingEntries"],[65,74,91,65],[65,75,91,66],[65,76,91,67],[66,4,92,2],[66,8,92,8,"rawEntries"],[66,18,92,18],[66,21,92,21,"entryResult"],[66,32,92,32],[66,34,92,34,"entries"],[66,41,92,41],[66,45,92,45],[66,47,92,47],[67,4,93,2],[67,8,93,8,"droppedEntriesCount"],[67,27,93,27],[67,30,93,30,"entryResult"],[67,41,93,41],[67,43,93,43,"droppedEntriesCount"],[67,62,93,62],[68,4,94,2],[68,8,94,6,"rawEntries"],[68,18,94,16],[68,19,94,17,"length"],[68,25,94,23],[68,30,94,28],[68,31,94,29],[68,33,94,31],[69,6,95,4],[70,4,96,2],[71,4,97,2],[71,8,97,8,"entries"],[71,15,97,15],[71,18,97,18,"rawEntries"],[71,28,97,28],[71,29,97,29,"map"],[71,32,97,32],[71,33,97,33,"rawToPerformanceEntry"],[71,60,97,33],[71,61,97,33,"rawToPerformanceEntry"],[71,107,97,54],[71,108,97,55],[72,4,97,56],[72,8,97,56,"_loop"],[72,13,97,56],[72,25,97,56,"_loop"],[72,26,97,56,"observerConfig"],[72,40,97,56],[72,42,98,74],[73,6,99,4],[73,10,99,10,"entriesForObserver"],[73,28,99,50],[73,31,99,53,"entries"],[73,38,99,60],[73,39,99,61,"filter"],[73,45,99,67],[73,46,99,68,"entry"],[73,51,99,73],[73,55,99,77],[74,8,100,6],[74,12,100,10],[74,13,100,11,"observerConfig"],[74,27,100,25],[74,28,100,26,"entryTypes"],[74,38,100,36],[74,39,100,37,"has"],[74,42,100,40],[74,43,100,41,"entry"],[74,48,100,46],[74,49,100,47,"entryType"],[74,58,100,56],[74,59,100,57],[74,61,100,59],[75,10,101,8],[75,17,101,15],[75,22,101,20],[76,8,102,6],[77,8,104,6],[77,12,105,8,"entry"],[77,17,105,13],[77,18,105,14,"entryType"],[77,27,105,23],[77,32,105,28],[77,39,105,35],[77,43,106,8,"observerConfig"],[77,57,106,22],[77,58,106,23,"durationThreshold"],[77,75,106,40],[77,79,106,44],[77,83,106,48],[77,85,107,8],[78,10,108,8],[78,17,108,15,"entry"],[78,22,108,20],[78,23,108,21,"duration"],[78,31,108,29],[78,35,108,33,"observerConfig"],[78,49,108,47],[78,50,108,48,"durationThreshold"],[78,67,108,65],[79,8,109,6],[80,8,111,6],[80,15,111,13],[80,19,111,17],[81,6,112,4],[81,7,112,5],[81,8,112,6],[82,6,113,4],[82,10,113,8,"entriesForObserver"],[82,28,113,26],[82,29,113,27,"length"],[82,35,113,33],[82,40,113,38],[82,41,113,39],[82,43,113,41],[83,8,114,6],[83,12,114,10],[84,10,115,8,"observerConfig"],[84,24,115,22],[84,25,115,23,"callback"],[84,33,115,31],[84,34,116,10],[84,38,116,14,"PerformanceObserverEntryList"],[84,66,116,42],[84,67,116,43,"entriesForObserver"],[84,85,116,61],[84,86,116,62],[84,88,117,10,"observer"],[84,97,117,18],[84,99,118,10,"droppedEntriesCount"],[84,118,119,8],[84,119,119,9],[85,8,120,6],[85,9,120,7],[85,10,120,8],[85,17,120,15,"error"],[85,22,120,20],[85,24,120,22],[86,10,121,8,"console"],[86,17,121,15],[86,18,121,16,"error"],[86,23,121,21],[86,24,121,22,"error"],[86,29,121,27],[86,30,121,28],[87,8,122,6],[88,6,123,4],[89,4,124,2],[89,5,124,3],[90,4,98,2],[90,13,98,2,"_ref"],[90,17,98,2],[90,21,98,43,"registeredObservers"],[90,40,98,62],[90,41,98,63,"entries"],[90,48,98,70],[90,49,98,71],[90,50,98,72],[91,6,98,72],[91,10,98,72,"_ref2"],[91,15,98,72],[91,22,98,72,"_slicedToArray2"],[91,37,98,72],[91,38,98,72,"default"],[91,45,98,72],[91,47,98,72,"_ref"],[91,51,98,72],[92,6,98,72],[92,10,98,14,"observer"],[92,19,98,22],[92,22,98,22,"_ref2"],[92,27,98,22],[93,6,98,22],[93,10,98,24,"observerConfig"],[93,24,98,38],[93,27,98,38,"_ref2"],[93,32,98,38],[94,6,98,38,"_loop"],[94,11,98,38],[94,12,98,38,"observerConfig"],[94,26,98,38],[95,4,98,38],[96,2,125,0],[96,3,125,1],[97,2,127,7],[97,11,127,16,"warnNoNativePerformanceObserver"],[97,42,127,47,"warnNoNativePerformanceObserver"],[97,43,127,47],[97,45,127,50],[98,4,128,2],[98,8,128,2,"warnOnce"],[98,25,128,10],[98,27,129,4],[98,64,129,41],[98,66,130,4],[98,120,131,2],[98,121,131,3],[99,2,132,0],[100,2,134,0],[100,11,134,9,"applyDurationThresholds"],[100,34,134,32,"applyDurationThresholds"],[100,35,134,32],[100,37,134,35],[101,4,135,2],[101,8,135,8,"durationThresholds"],[101,26,135,26],[101,29,135,29,"Array"],[101,34,135,34],[101,35,135,35,"from"],[101,39,135,39],[101,40,135,40,"registeredObservers"],[101,59,135,59],[101,60,135,60,"values"],[101,66,135,66],[101,67,135,67],[101,68,135,68],[101,69,135,69],[101,70,136,5,"map"],[101,73,136,8],[101,74,136,9,"observerConfig"],[101,88,136,23],[101,92,136,27,"observerConfig"],[101,106,136,41],[101,107,136,42,"durationThreshold"],[101,124,136,59],[101,125,136,60],[101,126,137,5,"filter"],[101,132,137,11],[101,133,137,12,"Boolean"],[101,140,137,19],[101,141,137,20],[102,4,139,2],[102,11,139,9,"Math"],[102,15,139,13],[102,16,139,14,"min"],[102,19,139,17],[102,20,139,18],[102,23,139,21,"durationThresholds"],[102,41,139,39],[102,42,139,40],[103,2,140,0],[104,2,142,0],[104,11,142,9,"getSupportedPerformanceEntryTypes"],[104,44,142,42,"getSupportedPerformanceEntryTypes"],[104,45,142,42],[104,47,142,83],[105,4,143,2],[105,8,143,6],[105,9,143,7,"NativePerformanceObserver"],[105,43,143,32],[105,45,143,34],[106,6,144,4],[106,13,144,11,"Object"],[106,19,144,17],[106,20,144,18,"freeze"],[106,26,144,24],[106,27,144,25],[106,29,144,27],[106,30,144,28],[107,4,145,2],[108,4,146,2],[108,8,146,6],[108,9,146,7,"NativePerformanceObserver"],[108,43,146,32],[108,44,146,33,"getSupportedPerformanceEntryTypes"],[108,77,146,66],[108,79,146,68],[109,6,148,4],[109,13,148,11,"Object"],[109,19,148,17],[109,20,148,18,"freeze"],[109,26,148,24],[109,27,148,25],[109,28,148,26],[109,34,148,32],[109,36,148,34],[109,45,148,43],[109,47,148,45],[109,54,148,52],[109,55,148,53],[109,56,148,54],[110,4,149,2],[111,4,150,2],[111,11,150,9,"Object"],[111,17,150,15],[111,18,150,16,"freeze"],[111,24,150,22],[111,25,151,4,"NativePerformanceObserver"],[111,59,151,29],[111,60,151,30,"getSupportedPerformanceEntryTypes"],[111,93,151,63],[111,94,151,64],[111,95,151,65],[111,96,151,66,"map"],[111,99,151,69],[111,100,152,6,"rawToPerformanceEntryType"],[111,127,152,6],[111,128,152,6,"rawToPerformanceEntryType"],[111,178,153,4],[111,179,154,2],[111,180,154,3],[112,2,155,0],[113,2,155,1],[113,6,155,1,"_callback"],[113,15,155,1],[113,35,155,1,"_classPrivateFieldLooseKey2"],[113,62,155,1],[113,63,155,1,"default"],[113,70,155,1],[114,2,155,1],[114,6,155,1,"_type"],[114,11,155,1],[114,31,155,1,"_classPrivateFieldLooseKey2"],[114,58,155,1],[114,59,155,1,"default"],[114,66,155,1],[115,2,155,1],[115,6,155,1,"_validateObserveOptions"],[115,29,155,1],[115,49,155,1,"_classPrivateFieldLooseKey2"],[115,76,155,1],[115,77,155,1,"default"],[115,84,155,1],[116,2,155,1],[116,6,177,13,"PerformanceObserver"],[116,25,177,32],[116,28,177,32,"exports"],[116,35,177,32],[116,36,177,32,"PerformanceObserver"],[116,55,177,32],[117,4,181,2],[117,13,181,2,"PerformanceObserver"],[117,33,181,14,"callback"],[117,41,181,51],[117,43,181,53],[118,6,181,53],[118,10,181,53,"_classCallCheck2"],[118,26,181,53],[118,27,181,53,"default"],[118,34,181,53],[118,42,181,53,"PerformanceObserver"],[118,61,181,53],[119,6,181,53,"Object"],[119,12,181,53],[119,13,181,53,"defineProperty"],[119,27,181,53],[119,34,181,53,"_validateObserveOptions"],[119,57,181,53],[120,8,181,53,"value"],[120,13,181,53],[120,15,181,53,"_validateObserveOptions2"],[121,6,181,53],[122,6,181,53,"Object"],[122,12,181,53],[122,13,181,53,"defineProperty"],[122,27,181,53],[122,34,181,53,"_callback"],[122,43,181,53],[123,8,181,53,"writable"],[123,16,181,53],[124,8,181,53,"value"],[124,13,181,53],[125,6,181,53],[126,6,181,53,"Object"],[126,12,181,53],[126,13,181,53,"defineProperty"],[126,27,181,53],[126,34,181,53,"_type"],[126,39,181,53],[127,8,181,53,"writable"],[127,16,181,53],[128,8,181,53,"value"],[128,13,181,53],[129,6,181,53],[130,6,182,4],[130,10,182,4,"_classPrivateFieldLooseBase2"],[130,38,182,4],[130,39,182,4,"default"],[130,46,182,4],[130,52,182,8],[130,54,182,8,"_callback"],[130,63,182,8],[130,65,182,8,"_callback"],[130,74,182,8],[130,78,182,21,"callback"],[130,86,182,29],[131,4,183,2],[132,4,183,3],[132,15,183,3,"_createClass2"],[132,28,183,3],[132,29,183,3,"default"],[132,36,183,3],[132,38,183,3,"PerformanceObserver"],[132,57,183,3],[133,6,183,3,"key"],[133,9,183,3],[134,6,183,3,"value"],[134,11,183,3],[134,13,185,2],[134,22,185,2,"observe"],[134,29,185,9,"observe"],[134,30,185,10,"options"],[134,37,185,42],[134,39,185,50],[135,8,186,4],[135,12,186,8],[135,13,186,9,"NativePerformanceObserver"],[135,47,186,34],[135,49,186,36],[136,10,187,6,"warnNoNativePerformanceObserver"],[136,41,187,37],[136,42,187,38],[136,43,187,39],[137,10,188,6],[138,8,189,4],[139,8,191,4],[139,12,191,4,"_classPrivateFieldLooseBase2"],[139,40,191,4],[139,41,191,4,"default"],[139,48,191,4],[139,54,191,8],[139,56,191,8,"_validateObserveOptions"],[139,79,191,8],[139,81,191,8,"_validateObserveOptions"],[139,104,191,8],[139,106,191,33,"options"],[139,113,191,40],[140,8,193,4],[140,12,193,8,"requestedEntryTypes"],[140,31,193,27],[141,8,195,4],[141,12,195,8,"options"],[141,19,195,15],[141,20,195,16,"entryTypes"],[141,30,195,26],[141,32,195,28],[142,10,196,6],[142,14,196,6,"_classPrivateFieldLooseBase2"],[142,42,196,6],[142,43,196,6,"default"],[142,50,196,6],[142,56,196,10],[142,58,196,10,"_type"],[142,63,196,10],[142,65,196,10,"_type"],[142,70,196,10],[142,74,196,19],[142,84,196,29],[143,10,197,6,"requestedEntryTypes"],[143,29,197,25],[143,32,197,28],[143,36,197,32,"Set"],[143,39,197,35],[143,40,197,36,"options"],[143,47,197,43],[143,48,197,44,"entryTypes"],[143,58,197,54],[143,59,197,55],[144,8,198,4],[144,9,198,5],[144,15,198,11],[145,10,199,6],[145,14,199,6,"_classPrivateFieldLooseBase2"],[145,42,199,6],[145,43,199,6,"default"],[145,50,199,6],[145,56,199,10],[145,58,199,10,"_type"],[145,63,199,10],[145,65,199,10,"_type"],[145,70,199,10],[145,74,199,19],[145,82,199,27],[146,10,200,6,"requestedEntryTypes"],[146,29,200,25],[146,32,200,28],[146,36,200,32,"Set"],[146,39,200,35],[146,40,200,36],[146,41,200,37,"options"],[146,48,200,44],[146,49,200,45,"type"],[146,53,200,49],[146,54,200,50],[146,55,200,51],[147,8,201,4],[148,8,205,4],[148,12,205,10,"currentEntryTypes"],[148,29,205,27],[148,32,205,30,"registeredObservers"],[148,51,205,49],[148,52,205,50,"get"],[148,55,205,53],[148,56,205,54],[148,60,205,58],[148,61,205,59],[148,63,205,61,"entryTypes"],[148,73,205,71],[149,8,206,4],[149,12,206,10,"nextEntryTypes"],[149,26,206,24],[149,29,206,27,"currentEntryTypes"],[149,46,206,44],[149,49,207,8,"union"],[149,54,207,13],[149,55,207,14,"requestedEntryTypes"],[149,74,207,33],[149,76,207,35,"currentEntryTypes"],[149,93,207,52],[149,94,207,53],[149,97,208,8,"requestedEntryTypes"],[149,116,208,27],[150,8,211,4],[150,12,211,8,"currentEntryTypes"],[150,29,211,25],[150,33,211,29,"currentEntryTypes"],[150,50,211,46],[150,51,211,47,"size"],[150,55,211,51],[150,60,211,56,"nextEntryTypes"],[150,74,211,70],[150,75,211,71,"size"],[150,79,211,75],[150,81,211,77],[151,10,212,6],[152,8,213,4],[153,8,215,4,"registeredObservers"],[153,27,215,23],[153,28,215,24,"set"],[153,31,215,27],[153,32,215,28],[153,36,215,32],[153,38,215,34],[154,10,216,6,"callback"],[154,18,216,14],[154,24,216,14,"_classPrivateFieldLooseBase2"],[154,52,216,14],[154,53,216,14,"default"],[154,60,216,14],[154,62,216,16],[154,66,216,20],[154,68,216,20,"_callback"],[154,77,216,20],[154,79,216,20,"_callback"],[154,88,216,20],[154,89,216,30],[155,10,217,6,"durationThreshold"],[155,27,217,23],[155,29,218,8,"options"],[155,36,218,15],[155,37,218,16,"type"],[155,41,218,20],[155,46,218,25],[155,53,218,32],[155,56,218,35,"options"],[155,63,218,42],[155,64,218,43,"durationThreshold"],[155,81,218,60],[155,84,218,63,"undefined"],[155,93,218,72],[156,10,219,6,"entryTypes"],[156,20,219,16],[156,22,219,18,"nextEntryTypes"],[157,8,220,4],[157,9,220,5],[157,10,220,6],[158,8,222,4],[158,12,222,8],[158,13,222,9,"isOnPerformanceEntryCallbackSet"],[158,44,222,40],[158,46,222,42],[159,10,223,6,"NativePerformanceObserver"],[159,44,223,31],[159,45,223,32,"setOnPerformanceEntryCallback"],[159,74,223,61],[159,75,224,8,"onPerformanceEntry"],[159,93,225,6],[159,94,225,7],[160,10,226,6,"isOnPerformanceEntryCallbackSet"],[160,41,226,37],[160,44,226,40],[160,48,226,44],[161,8,227,4],[162,8,231,4],[162,12,231,10,"newEntryTypes"],[162,25,231,23],[162,28,231,26,"currentEntryTypes"],[162,45,231,43],[162,48,232,8,"difference"],[162,58,232,18],[162,59,233,10],[162,63,233,14,"Set"],[162,66,233,17],[162,67,233,18,"requestedEntryTypes"],[162,86,233,37],[162,87,233,38,"keys"],[162,91,233,42],[162,92,233,43],[162,93,233,44],[162,94,233,45],[162,96,234,10],[162,100,234,14,"Set"],[162,103,234,17],[162,104,234,18,"currentEntryTypes"],[162,121,234,35],[162,122,234,36,"keys"],[162,126,234,40],[162,127,234,41],[162,128,234,42],[162,129,235,8],[162,130,235,9],[162,133,236,8],[162,137,236,12,"Set"],[162,140,236,15],[162,141,236,16,"requestedEntryTypes"],[162,160,236,35],[162,161,236,36,"keys"],[162,165,236,40],[162,166,236,41],[162,167,236,42],[162,168,236,43],[163,8,237,4],[163,13,237,9],[163,17,237,15,"type"],[163,21,237,19],[163,25,237,23,"newEntryTypes"],[163,38,237,36],[163,40,237,38],[164,10,238,6],[164,14,238,10],[164,15,238,11,"observerCountPerEntryType"],[164,40,238,36],[164,41,238,37,"has"],[164,44,238,40],[164,45,238,41,"type"],[164,49,238,45],[164,50,238,46],[164,52,238,48],[165,12,239,8],[165,16,239,14,"rawType"],[165,23,239,21],[165,26,239,24],[165,30,239,24,"performanceEntryTypeToRaw"],[165,57,239,24],[165,58,239,24,"performanceEntryTypeToRaw"],[165,108,239,49],[165,110,239,50,"type"],[165,114,239,54],[165,115,239,55],[166,12,240,8,"NativePerformanceObserver"],[166,46,240,33],[166,47,240,34,"startReporting"],[166,61,240,48],[166,62,240,49,"rawType"],[166,69,240,56],[166,70,240,57],[167,10,241,6],[168,10,242,6,"observerCountPerEntryType"],[168,35,242,31],[168,36,242,32,"set"],[168,39,242,35],[168,40,243,8,"type"],[168,44,243,12],[168,46,244,8],[168,47,244,9,"observerCountPerEntryType"],[168,72,244,34],[168,73,244,35,"get"],[168,76,244,38],[168,77,244,39,"type"],[168,81,244,43],[168,82,244,44],[168,86,244,48],[168,87,244,49],[168,91,244,53],[168,92,245,6],[168,93,245,7],[169,8,246,4],[170,8,247,4,"applyDurationThresholds"],[170,31,247,27],[170,32,247,28],[170,33,247,29],[171,6,248,2],[172,4,248,3],[173,6,248,3,"key"],[173,9,248,3],[174,6,248,3,"value"],[174,11,248,3],[174,13,250,2],[174,22,250,2,"disconnect"],[174,32,250,12,"disconnect"],[174,33,250,12],[174,35,250,21],[175,8,251,4],[175,12,251,8],[175,13,251,9,"NativePerformanceObserver"],[175,47,251,34],[175,49,251,36],[176,10,252,6,"warnNoNativePerformanceObserver"],[176,41,252,37],[176,42,252,38],[176,43,252,39],[177,10,253,6],[178,8,254,4],[179,8,256,4],[179,12,256,10,"observerConfig"],[179,26,256,24],[179,29,256,27,"registeredObservers"],[179,48,256,46],[179,49,256,47,"get"],[179,52,256,50],[179,53,256,51],[179,57,256,55],[179,58,256,56],[180,8,257,4],[180,12,257,8],[180,13,257,9,"observerConfig"],[180,27,257,23],[180,29,257,25],[181,10,258,6],[182,8,259,4],[183,8,262,4],[183,13,262,9],[183,17,262,15,"type"],[183,21,262,19],[183,25,262,23,"observerConfig"],[183,39,262,37],[183,40,262,38,"entryTypes"],[183,50,262,48],[183,51,262,49,"keys"],[183,55,262,53],[183,56,262,54],[183,57,262,55],[183,59,262,57],[184,10,263,6],[184,14,263,12,"numberOfObserversForThisType"],[184,42,263,40],[184,45,264,8,"observerCountPerEntryType"],[184,70,264,33],[184,71,264,34,"get"],[184,74,264,37],[184,75,264,38,"type"],[184,79,264,42],[184,80,264,43],[184,84,264,47],[184,85,264,48],[185,10,265,6],[185,14,265,10,"numberOfObserversForThisType"],[185,42,265,38],[185,47,265,43],[185,48,265,44],[185,50,265,46],[186,12,266,8,"observerCountPerEntryType"],[186,37,266,33],[186,38,266,34,"delete"],[186,44,266,40],[186,45,266,41,"type"],[186,49,266,45],[186,50,266,46],[187,12,267,8,"NativePerformanceObserver"],[187,46,267,33],[187,47,267,34,"stopReporting"],[187,60,267,47],[187,61,268,10],[187,65,268,10,"performanceEntryTypeToRaw"],[187,92,268,10],[187,93,268,10,"performanceEntryTypeToRaw"],[187,143,268,35],[187,145,268,36,"type"],[187,149,268,40],[187,150,269,8],[187,151,269,9],[188,10,270,6],[188,11,270,7],[188,17,270,13],[188,21,270,17,"numberOfObserversForThisType"],[188,49,270,45],[188,54,270,50],[188,55,270,51],[188,57,270,53],[189,12,271,8,"observerCountPerEntryType"],[189,37,271,33],[189,38,271,34,"set"],[189,41,271,37],[189,42,271,38,"type"],[189,46,271,42],[189,48,271,44,"numberOfObserversForThisType"],[189,76,271,72],[189,79,271,75],[189,80,271,76],[189,81,271,77],[190,10,272,6],[191,8,273,4],[192,8,276,4,"registeredObservers"],[192,27,276,23],[192,28,276,24,"delete"],[192,34,276,30],[192,35,276,31],[192,39,276,35],[192,40,276,36],[193,8,277,4],[193,12,277,8,"registeredObservers"],[193,31,277,27],[193,32,277,28,"size"],[193,36,277,32],[193,41,277,37],[193,42,277,38],[193,44,277,40],[194,10,278,6,"NativePerformanceObserver"],[194,44,278,31],[194,45,278,32,"setOnPerformanceEntryCallback"],[194,74,278,61],[194,75,278,62,"undefined"],[194,84,278,71],[194,85,278,72],[195,10,279,6,"isOnPerformanceEntryCallbackSet"],[195,41,279,37],[195,44,279,40],[195,49,279,45],[196,8,280,4],[197,8,282,4,"applyDurationThresholds"],[197,31,282,27],[197,32,282,28],[197,33,282,29],[198,6,283,2],[199,4,283,3],[200,2,283,3],[201,2,283,3],[201,11,283,3,"_validateObserveOptions2"],[201,36,285,26,"options"],[201,43,285,58],[201,45,285,66],[202,4,286,4],[202,8,286,11,"type"],[202,12,286,15],[202,15,286,50,"options"],[202,22,286,57],[202,23,286,11,"type"],[202,27,286,15],[203,6,286,17,"entryTypes"],[203,16,286,27],[203,19,286,50,"options"],[203,26,286,57],[203,27,286,17,"entryTypes"],[203,37,286,27],[204,6,286,29,"durationThreshold"],[204,23,286,46],[204,26,286,50,"options"],[204,33,286,57],[204,34,286,29,"durationThreshold"],[204,51,286,46],[205,4,288,4],[205,8,288,8],[205,9,288,9,"type"],[205,13,288,13],[205,17,288,17],[205,18,288,18,"entryTypes"],[205,28,288,28],[205,30,288,30],[206,6,289,6],[206,12,289,12],[206,16,289,16,"TypeError"],[206,25,289,25],[206,26,290,8],[206,152,291,6],[206,153,291,7],[207,4,292,4],[208,4,294,4],[208,8,294,8,"entryTypes"],[208,18,294,18],[208,22,294,22,"type"],[208,26,294,26],[208,28,294,28],[209,6,295,6],[209,12,295,12],[209,16,295,16,"TypeError"],[209,25,295,25],[209,26,296,8],[209,149,297,6],[209,150,297,7],[210,4,298,4],[211,4,300,4],[211,8,300,8],[211,12,300,8,"_classPrivateFieldLooseBase2"],[211,40,300,8],[211,41,300,8,"default"],[211,48,300,8],[211,54,300,12],[211,56,300,12,"_type"],[211,61,300,12],[211,63,300,12,"_type"],[211,68,300,12],[211,74,300,23],[211,84,300,33],[211,88,300,37,"type"],[211,92,300,41],[211,94,300,43],[212,6,301,6],[212,12,301,12],[212,16,301,16,"Error"],[212,21,301,21],[212,22,302,8],[212,179,303,6],[212,180,303,7],[213,4,304,4],[214,4,306,4],[214,8,306,8],[214,12,306,8,"_classPrivateFieldLooseBase2"],[214,40,306,8],[214,41,306,8,"default"],[214,48,306,8],[214,54,306,12],[214,56,306,12,"_type"],[214,61,306,12],[214,63,306,12,"_type"],[214,68,306,12],[214,74,306,23],[214,82,306,31],[214,86,306,35,"entryTypes"],[214,96,306,45],[214,98,306,47],[215,6,307,6],[215,12,307,12],[215,16,307,16,"Error"],[215,21,307,21],[215,22,308,8],[215,190,309,6],[215,191,309,7],[216,4,310,4],[217,4,312,4],[217,8,312,8,"entryTypes"],[217,18,312,18],[217,22,312,22,"durationThreshold"],[217,39,312,39],[217,44,312,44,"undefined"],[217,53,312,53],[217,55,312,55],[218,6,313,6],[218,12,313,12],[218,16,313,16,"TypeError"],[218,25,313,25],[218,26,314,8],[218,165,315,6],[218,166,315,7],[219,4,316,4],[220,2,317,2],[221,2,177,13,"PerformanceObserver"],[221,21,177,32],[221,22,319,9,"supportedEntryTypes"],[221,41,319,28],[221,44,320,4,"getSupportedPerformanceEntryTypes"],[221,77,320,37],[221,78,320,38],[221,79,320,39],[222,2,323,0],[222,11,323,9,"union"],[222,16,323,14,"union"],[222,17,323,18,"a"],[222,18,323,36],[222,20,323,38,"b"],[222,21,323,56],[222,23,323,66],[223,4,324,2],[223,11,324,9],[223,15,324,13,"Set"],[223,18,324,16],[223,19,324,17],[223,20,324,18],[223,23,324,21,"a"],[223,24,324,22],[223,26,324,24],[223,29,324,27,"b"],[223,30,324,28],[223,31,324,29],[223,32,324,30],[224,2,325,0],[225,2,327,0],[225,11,327,9,"difference"],[225,21,327,19,"difference"],[225,22,327,23,"a"],[225,23,327,41],[225,25,327,43,"b"],[225,26,327,61],[225,28,327,71],[226,4,328,2],[226,11,328,9],[226,15,328,13,"Set"],[226,18,328,16],[226,19,328,17],[226,20,328,18],[226,23,328,21,"a"],[226,24,328,22],[226,25,328,23],[226,26,328,24,"filter"],[226,32,328,30],[226,33,328,31,"x"],[226,34,328,32],[226,38,328,36],[226,39,328,37,"b"],[226,40,328,38],[226,41,328,39,"has"],[226,44,328,42],[226,45,328,43,"x"],[226,46,328,44],[226,47,328,45],[226,48,328,46],[226,49,328,47],[227,2,329,0],[228,0,329,1],[228,3]],"functionMap":{"names":["<global>","PerformanceObserverEntryList","PerformanceObserverEntryList#constructor","PerformanceObserverEntryList#getEntries","PerformanceObserverEntryList#getEntriesByType","filter$argument_0","PerformanceObserverEntryList#getEntriesByName","onPerformanceEntry","entries.filter$argument_0","warnNoNativePerformanceObserver","applyDurationThresholds","Array.from.map$argument_0","getSupportedPerformanceEntryTypes","PerformanceObserver","constructor","observe","disconnect","<anonymous>","union","difference"],"mappings":"AAA;OC6B;ECG;GDE;EEE;GFE;EGE;gCCC,iCD;GHC;EKE;kCDK,4BC;QDG,wDC;GLG;CDC;2BO8B;oECY;KDa;CPa;OSE;CTK;AUE;SCE,kDD;CVI;AYE;CZa;OasB;ECI;GDE;EEE;GF+D;EGE;GHiC;EIE;GJgC;CbI;AkBE;ClBE;AmBE;+BdC,cc;CnBC"}},"type":"js/module"}]}