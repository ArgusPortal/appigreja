{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":55,"index":55}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"./web/index","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":57},"end":{"line":3,"column":49,"index":106}}],"key":"gbqIczDgcxJq28f9NbxIhb1F3sw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ensureNativeModulesAreInstalled = ensureNativeModulesAreInstalled;\n  var _reactNative = require(_dependencyMap[0], \"react-native\");\n  /**\n   * Ensures that the native modules are installed in the current runtime.\n   * Otherwise, it synchronously calls a native function that installs them.\n   */\n  function ensureNativeModulesAreInstalled() {\n    if (globalThis.expo) {\n      return;\n    }\n    try {\n      if (_reactNative.Platform.OS === 'web') {\n        // Requiring web folder sets up the `globalThis.expo` object.\n        (0, require(_dependencyMap[1], \"./web/index\").registerWebGlobals)();\n      } else {\n        // TODO: ExpoModulesCore shouldn't be optional here,\n        // but to keep backwards compatibility let's just ignore it in SDK 50.\n        // In most cases the modules were already installed from the native side.\n        _reactNative.NativeModules.ExpoModulesCore?.installModules();\n      }\n    } catch (error) {\n      console.error(`Unable to install Expo modules: ${error}`);\n    }\n  }\n});","lineCount":29,"map":[[6,2,1,0],[6,6,1,0,"_reactNative"],[6,18,1,0],[6,21,1,0,"require"],[6,28,1,0],[6,29,1,0,"_dependencyMap"],[6,43,1,0],[7,2,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,2,9,7],[11,11,9,16,"ensureNativeModulesAreInstalled"],[11,42,9,47,"ensureNativeModulesAreInstalled"],[11,43,9,47],[11,45,9,56],[12,4,10,2],[12,8,10,6,"globalThis"],[12,18,10,16],[12,19,10,17,"expo"],[12,23,10,21],[12,25,10,23],[13,6,11,4],[14,4,12,2],[15,4,13,2],[15,8,13,6],[16,6,14,4],[16,10,14,8,"Platform"],[16,31,14,16],[16,32,14,17,"OS"],[16,34,14,19],[16,39,14,24],[16,44,14,29],[16,46,14,31],[17,8,15,6],[18,8,16,6],[18,12,16,6,"registerWebGlobals"],[18,38,16,6],[18,39,16,6,"registerWebGlobals"],[18,72,16,24],[18,74,16,25],[18,75,16,26],[19,6,17,4],[19,7,17,5],[19,13,17,11],[20,8,18,6],[21,8,19,6],[22,8,20,6],[23,8,21,6,"NativeModules"],[23,34,21,19],[23,35,21,20,"ExpoModulesCore"],[23,50,21,35],[23,52,21,37,"installModules"],[23,66,21,51],[23,67,21,52],[23,68,21,53],[24,6,22,4],[25,4,23,2],[25,5,23,3],[25,6,23,4],[25,13,23,11,"error"],[25,18,23,16],[25,20,23,18],[26,6,24,4,"console"],[26,13,24,11],[26,14,24,12,"error"],[26,19,24,17],[26,20,24,18],[26,55,24,53,"error"],[26,60,24,58],[26,62,24,60],[26,63,24,61],[27,4,25,2],[28,2,26,0],[29,0,26,1],[29,3]],"functionMap":{"names":["<global>","ensureNativeModulesAreInstalled"],"mappings":"AAA;OCQ;CDiB"}},"type":"js/module"}]}