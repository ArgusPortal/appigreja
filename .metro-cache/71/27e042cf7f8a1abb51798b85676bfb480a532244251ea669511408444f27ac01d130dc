{"dependencies":[{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":18},"end":{"line":13,"column":38}},{"start":{"line":13,"column":18},"end":{"line":13,"column":38}},{"start":{"line":13,"column":18},"end":{"line":13,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function processAspectRatio(aspectRatio) {\n    if (typeof aspectRatio === 'number') {\n      return aspectRatio;\n    }\n    if (typeof aspectRatio !== 'string') {\n      if (__DEV__) {\n        require(_dependencyMap[0], \"invariant\")(!aspectRatio, 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var matches = aspectRatio.split('/').map(s => s.trim());\n    if (matches.includes('auto')) {\n      if (__DEV__) {\n        require(_dependencyMap[0], \"invariant\")(matches.length, 'aspectRatio does not support `auto <ratio>`. You passed: %s', aspectRatio);\n      }\n      return;\n    }\n    var hasNonNumericValues = matches.some(n => Number.isNaN(Number(n)));\n    if (__DEV__) {\n      require(_dependencyMap[0], \"invariant\")(!hasNonNumericValues && (matches.length === 1 || matches.length === 2), 'aspectRatio must either be a number, a ratio string or `auto`. You passed: %s', aspectRatio);\n    }\n    if (hasNonNumericValues) {\n      return;\n    }\n    if (matches.length === 2) {\n      return Number(matches[0]) / Number(matches[1]);\n    }\n    return Number(matches[0]);\n  }\n  module.exports = processAspectRatio;\n});","lineCount":34,"map":[[2,2,11,0],[2,14,11,12],[4,2,15,0],[4,11,15,9,"processAspectRatio"],[4,29,15,27,"processAspectRatio"],[4,30,15,28,"aspectRatio"],[4,41,15,57],[4,43,15,68],[5,4,16,2],[5,8,16,6],[5,15,16,13,"aspectRatio"],[5,26,16,24],[5,31,16,29],[5,39,16,37],[5,41,16,39],[6,6,17,4],[6,13,17,11,"aspectRatio"],[6,24,17,22],[7,4,18,2],[8,4,19,2],[8,8,19,6],[8,15,19,13,"aspectRatio"],[8,26,19,24],[8,31,19,29],[8,39,19,37],[8,41,19,39],[9,6,20,4],[9,10,20,8,"__DEV__"],[9,17,20,15],[9,19,20,17],[10,8,21,6,"require"],[10,15,21,6],[10,16,21,6,"_dependencyMap"],[10,30,21,6],[10,48,22,8],[10,49,22,9,"aspectRatio"],[10,60,22,20],[10,62,23,8],[10,141,23,87],[10,143,24,8,"aspectRatio"],[10,154,25,6],[10,155,25,7],[11,6,26,4],[12,6,27,4],[13,4,28,2],[14,4,30,2],[14,8,30,8,"matches"],[14,15,30,15],[14,18,30,18,"aspectRatio"],[14,29,30,29],[14,30,30,30,"split"],[14,35,30,35],[14,36,30,36],[14,39,30,39],[14,40,30,40],[14,41,30,41,"map"],[14,44,30,44],[14,45,30,45,"s"],[14,46,30,46],[14,50,30,50,"s"],[14,51,30,51],[14,52,30,52,"trim"],[14,56,30,56],[14,57,30,57],[14,58,30,58],[14,59,30,59],[15,4,32,2],[15,8,32,6,"matches"],[15,15,32,13],[15,16,32,14,"includes"],[15,24,32,22],[15,25,32,23],[15,31,32,29],[15,32,32,30],[15,34,32,32],[16,6,33,4],[16,10,33,8,"__DEV__"],[16,17,33,15],[16,19,33,17],[17,8,34,6,"require"],[17,15,34,6],[17,16,34,6,"_dependencyMap"],[17,30,34,6],[17,48,35,8,"matches"],[17,55,35,15],[17,56,35,16,"length"],[17,62,35,22],[17,64,36,8],[17,125,36,69],[17,127,37,8,"aspectRatio"],[17,138,38,6],[17,139,38,7],[18,6,39,4],[19,6,40,4],[20,4,41,2],[21,4,43,2],[21,8,43,8,"hasNonNumericValues"],[21,27,43,27],[21,30,43,30,"matches"],[21,37,43,37],[21,38,43,38,"some"],[21,42,43,42],[21,43,43,43,"n"],[21,44,43,44],[21,48,43,48,"Number"],[21,54,43,54],[21,55,43,55,"isNaN"],[21,60,43,60],[21,61,43,61,"Number"],[21,67,43,67],[21,68,43,68,"n"],[21,69,43,69],[21,70,43,70],[21,71,43,71],[21,72,43,72],[22,4,44,2],[22,8,44,6,"__DEV__"],[22,15,44,13],[22,17,44,15],[23,6,45,4,"require"],[23,13,45,4],[23,14,45,4,"_dependencyMap"],[23,28,45,4],[23,46,46,6],[23,47,46,7,"hasNonNumericValues"],[23,66,46,26],[23,71,46,31,"matches"],[23,78,46,38],[23,79,46,39,"length"],[23,85,46,45],[23,90,46,50],[23,91,46,51],[23,95,46,55,"matches"],[23,102,46,62],[23,103,46,63,"length"],[23,109,46,69],[23,114,46,74],[23,115,46,75],[23,116,46,76],[23,118,47,6],[23,197,47,85],[23,199,48,6,"aspectRatio"],[23,210,49,4],[23,211,49,5],[24,4,50,2],[25,4,52,2],[25,8,52,6,"hasNonNumericValues"],[25,27,52,25],[25,29,52,27],[26,6,53,4],[27,4,54,2],[28,4,56,2],[28,8,56,6,"matches"],[28,15,56,13],[28,16,56,14,"length"],[28,22,56,20],[28,27,56,25],[28,28,56,26],[28,30,56,28],[29,6,57,4],[29,13,57,11,"Number"],[29,19,57,17],[29,20,57,18,"matches"],[29,27,57,25],[29,28,57,26],[29,29,57,27],[29,30,57,28],[29,31,57,29],[29,34,57,32,"Number"],[29,40,57,38],[29,41,57,39,"matches"],[29,48,57,46],[29,49,57,47],[29,50,57,48],[29,51,57,49],[29,52,57,50],[30,4,58,2],[31,4,60,2],[31,11,60,9,"Number"],[31,17,60,15],[31,18,60,16,"matches"],[31,25,60,23],[31,26,60,24],[31,27,60,25],[31,28,60,26],[31,29,60,27],[32,2,61,0],[33,2,63,0,"module"],[33,8,63,6],[33,9,63,7,"exports"],[33,16,63,14],[33,19,63,17,"processAspectRatio"],[33,37,63,35],[34,0,63,36],[34,3]],"functionMap":{"names":["<global>","processAspectRatio","aspectRatio.split.map$argument_0","matches.some$argument_0"],"mappings":"AAA;ACc;6CCe,aD;2CEa,4BF;CDkB"}},"type":"js/module"}]}