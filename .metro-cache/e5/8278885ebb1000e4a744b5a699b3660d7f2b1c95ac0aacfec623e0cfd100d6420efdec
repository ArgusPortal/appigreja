{"dependencies":[{"name":"./getRoutesCore","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":24,"index":232},"end":{"line":4,"column":50,"index":258}},{"start":{"line":78,"column":22,"index":3240},"end":{"line":78,"column":48,"index":3266}},{"start":{"line":78,"column":22,"index":3240},"end":{"line":78,"column":48,"index":3266}},{"start":{"line":78,"column":22,"index":3240},"end":{"line":78,"column":48,"index":3266}}],"key":"gOO2v0sl1XvYI6QH2o9IVEEjbmQ="}},{"name":"./views/Navigator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":33,"index":1238},"end":{"line":25,"column":61,"index":1266}}],"key":"PBpeZlMTHxnI1L+/mUlv77sLyo4="}},{"name":"./views/Sitemap","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":39,"column":59,"index":1830},"end":{"line":39,"column":85,"index":1856}}],"key":"G8ud5EPcJ8MF2dMhl1o+nfNHuTs="}},{"name":"./views/Unmatched","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":54,"column":42,"index":2436},"end":{"line":54,"column":70,"index":2464}}],"key":"i1x8xpZw0K+kAMz1gUdMaXw0H74="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getIgnoreList = exports.extrapolateGroups = exports.generateDynamic = exports.getExactRoutes = exports.getRoutes = void 0;\n  /**\n   * Given a Metro context module, return an array of nested routes.\n   *\n   * This is a two step process:\n   *  1. Convert the RequireContext keys (file paths) into a directory tree.\n   *      - This should extrapolate array syntax into multiple routes\n   *      - Routes are given a specificity score\n   *  2. Flatten the directory tree into routes\n   *      - Routes in directories without _layout files are hoisted to the nearest _layout\n   *      - The name of the route is relative to the nearest _layout\n   *      - If multiple routes have the same name, the most specific route is used\n   */\n  function getRoutes(contextModule) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return (0, require(_dependencyMap[0], \"./getRoutesCore\").getRoutes)(contextModule, {\n      getSystemRoute(_ref) {\n        var route = _ref.route,\n          type = _ref.type;\n        if (route === '' && type === 'layout') {\n          // Root layout when no layout is defined.\n          return {\n            type: 'layout',\n            loadRoute: () => ({\n              default: require(_dependencyMap[1], \"./views/Navigator\").DefaultNavigator\n            }),\n            // Generate a fake file name for the directory\n            contextKey: 'expo-router/build/views/Navigator.js',\n            route: '',\n            generated: true,\n            dynamic: null,\n            children: []\n          };\n        } else if (route === '_sitemap' && type === 'route') {\n          return {\n            loadRoute() {\n              var _require = require(_dependencyMap[2], \"./views/Sitemap\"),\n                Sitemap = _require.Sitemap,\n                getNavOptions = _require.getNavOptions;\n              return {\n                default: Sitemap,\n                getNavOptions\n              };\n            },\n            route: '_sitemap',\n            type: 'route',\n            contextKey: 'expo-router/build/views/Sitemap.js',\n            generated: true,\n            internal: true,\n            dynamic: null,\n            children: []\n          };\n        } else if (route === '+not-found' && type === 'route') {\n          return {\n            loadRoute() {\n              return {\n                default: require(_dependencyMap[3], \"./views/Unmatched\").Unmatched\n              };\n            },\n            type: 'route',\n            route: '+not-found',\n            contextKey: 'expo-router/build/views/Unmatched.js',\n            generated: true,\n            internal: true,\n            dynamic: [{\n              name: '+not-found',\n              deep: true,\n              notFound: true\n            }],\n            children: []\n          };\n        }\n        throw new Error(`Unknown system route: ${route} and type: ${type}`);\n      },\n      ...options\n    });\n  }\n  exports.getRoutes = getRoutes;\n  function getExactRoutes(contextModule) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return getRoutes(contextModule, {\n      ...options,\n      skipGenerated: true\n    });\n  }\n  exports.getExactRoutes = getExactRoutes;\n  Object.defineProperty(exports, \"generateDynamic\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[0], \"./getRoutesCore\").generateDynamic;\n    }\n  });\n  Object.defineProperty(exports, \"extrapolateGroups\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[0], \"./getRoutesCore\").extrapolateGroups;\n    }\n  });\n  Object.defineProperty(exports, \"getIgnoreList\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[0], \"./getRoutesCore\").getIgnoreList;\n    }\n  });\n});","lineCount":111,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getIgnoreList"],[7,23,3,21],[7,26,3,24,"exports"],[7,33,3,31],[7,34,3,32,"extrapolateGroups"],[7,51,3,49],[7,54,3,52,"exports"],[7,61,3,59],[7,62,3,60,"generateDynamic"],[7,77,3,75],[7,80,3,78,"exports"],[7,87,3,85],[7,88,3,86,"getExactRoutes"],[7,102,3,100],[7,105,3,103,"exports"],[7,112,3,110],[7,113,3,111,"getRoutes"],[7,122,3,120],[7,125,3,123],[7,130,3,128],[7,131,3,129],[8,2,5,0],[9,0,6,0],[10,0,7,0],[11,0,8,0],[12,0,9,0],[13,0,10,0],[14,0,11,0],[15,0,12,0],[16,0,13,0],[17,0,14,0],[18,0,15,0],[19,0,16,0],[20,2,17,0],[20,11,17,9,"getRoutes"],[20,20,17,18,"getRoutes"],[20,21,17,19,"contextModule"],[20,34,17,32],[20,36,17,48],[21,4,17,48],[21,8,17,34,"options"],[21,15,17,41],[21,18,17,41,"arguments"],[21,27,17,41],[21,28,17,41,"length"],[21,34,17,41],[21,42,17,41,"arguments"],[21,51,17,41],[21,59,17,41,"undefined"],[21,68,17,41],[21,71,17,41,"arguments"],[21,80,17,41],[21,86,17,44],[21,87,17,45],[21,88,17,46],[22,4,18,4],[22,11,18,11],[22,12,18,12],[22,13,18,13],[22,15,18,15,"require"],[22,22,18,15],[22,23,18,15,"_dependencyMap"],[22,37,18,15],[22,61,18,31,"getRoutes"],[22,70,18,40],[22,72,18,42,"contextModule"],[22,85,18,55],[22,87,18,57],[23,6,19,8,"getSystemRoute"],[23,20,19,22,"getSystemRoute"],[23,21,19,22,"_ref"],[23,25,19,22],[23,27,19,40],[24,8,19,40],[24,12,19,25,"route"],[24,17,19,30],[24,20,19,30,"_ref"],[24,24,19,30],[24,25,19,25,"route"],[24,30,19,30],[25,10,19,32,"type"],[25,14,19,36],[25,17,19,36,"_ref"],[25,21,19,36],[25,22,19,32,"type"],[25,26,19,36],[26,8,20,12],[26,12,20,16,"route"],[26,17,20,21],[26,22,20,26],[26,24,20,28],[26,28,20,32,"type"],[26,32,20,36],[26,37,20,41],[26,45,20,49],[26,47,20,51],[27,10,21,16],[28,10,22,16],[28,17,22,23],[29,12,23,20,"type"],[29,16,23,24],[29,18,23,26],[29,26,23,34],[30,12,24,20,"loadRoute"],[30,21,24,29],[30,23,24,31,"loadRoute"],[30,24,24,31],[30,30,24,38],[31,14,25,24,"default"],[31,21,25,31],[31,23,25,33,"require"],[31,30,25,40],[31,31,25,40,"_dependencyMap"],[31,45,25,40],[31,69,25,60],[31,70,25,61],[31,71,26,29,"DefaultNavigator"],[32,12,27,20],[32,13,27,21],[32,14,27,22],[33,12,28,20],[34,12,29,20,"contextKey"],[34,22,29,30],[34,24,29,32],[34,62,29,70],[35,12,30,20,"route"],[35,17,30,25],[35,19,30,27],[35,21,30,29],[36,12,31,20,"generated"],[36,21,31,29],[36,23,31,31],[36,27,31,35],[37,12,32,20,"dynamic"],[37,19,32,27],[37,21,32,29],[37,25,32,33],[38,12,33,20,"children"],[38,20,33,28],[38,22,33,30],[39,10,34,16],[39,11,34,17],[40,8,35,12],[40,9,35,13],[40,15,36,17],[40,19,36,21,"route"],[40,24,36,26],[40,29,36,31],[40,39,36,41],[40,43,36,45,"type"],[40,47,36,49],[40,52,36,54],[40,59,36,61],[40,61,36,63],[41,10,37,16],[41,17,37,23],[42,12,38,20,"loadRoute"],[42,21,38,29,"loadRoute"],[42,22,38,29],[42,24,38,32],[43,14,39,24],[43,18,39,24,"_require"],[43,26,39,24],[43,29,39,59,"require"],[43,36,39,66],[43,37,39,66,"_dependencyMap"],[43,51,39,66],[43,73,39,84],[43,74,39,85],[44,16,39,32,"Sitemap"],[44,23,39,39],[44,26,39,39,"_require"],[44,34,39,39],[44,35,39,32,"Sitemap"],[44,42,39,39],[45,16,39,41,"getNavOptions"],[45,29,39,54],[45,32,39,54,"_require"],[45,40,39,54],[45,41,39,41,"getNavOptions"],[45,54,39,54],[46,14,40,24],[46,21,40,31],[47,16,40,33,"default"],[47,23,40,40],[47,25,40,42,"Sitemap"],[47,32,40,49],[48,16,40,51,"getNavOptions"],[49,14,40,65],[49,15,40,66],[50,12,41,20],[50,13,41,21],[51,12,42,20,"route"],[51,17,42,25],[51,19,42,27],[51,29,42,37],[52,12,43,20,"type"],[52,16,43,24],[52,18,43,26],[52,25,43,33],[53,12,44,20,"contextKey"],[53,22,44,30],[53,24,44,32],[53,60,44,68],[54,12,45,20,"generated"],[54,21,45,29],[54,23,45,31],[54,27,45,35],[55,12,46,20,"internal"],[55,20,46,28],[55,22,46,30],[55,26,46,34],[56,12,47,20,"dynamic"],[56,19,47,27],[56,21,47,29],[56,25,47,33],[57,12,48,20,"children"],[57,20,48,28],[57,22,48,30],[58,10,49,16],[58,11,49,17],[59,8,50,12],[59,9,50,13],[59,15,51,17],[59,19,51,21,"route"],[59,24,51,26],[59,29,51,31],[59,41,51,43],[59,45,51,47,"type"],[59,49,51,51],[59,54,51,56],[59,61,51,63],[59,63,51,65],[60,10,52,16],[60,17,52,23],[61,12,53,20,"loadRoute"],[61,21,53,29,"loadRoute"],[61,22,53,29],[61,24,53,32],[62,14,54,24],[62,21,54,31],[63,16,54,33,"default"],[63,23,54,40],[63,25,54,42,"require"],[63,32,54,49],[63,33,54,49,"_dependencyMap"],[63,47,54,49],[63,71,54,69],[63,72,54,70],[63,73,54,71,"Unmatched"],[64,14,54,81],[64,15,54,82],[65,12,55,20],[65,13,55,21],[66,12,56,20,"type"],[66,16,56,24],[66,18,56,26],[66,25,56,33],[67,12,57,20,"route"],[67,17,57,25],[67,19,57,27],[67,31,57,39],[68,12,58,20,"contextKey"],[68,22,58,30],[68,24,58,32],[68,62,58,70],[69,12,59,20,"generated"],[69,21,59,29],[69,23,59,31],[69,27,59,35],[70,12,60,20,"internal"],[70,20,60,28],[70,22,60,30],[70,26,60,34],[71,12,61,20,"dynamic"],[71,19,61,27],[71,21,61,29],[71,22,61,30],[72,14,61,32,"name"],[72,18,61,36],[72,20,61,38],[72,32,61,50],[73,14,61,52,"deep"],[73,18,61,56],[73,20,61,58],[73,24,61,62],[74,14,61,64,"notFound"],[74,22,61,72],[74,24,61,74],[75,12,61,79],[75,13,61,80],[75,14,61,81],[76,12,62,20,"children"],[76,20,62,28],[76,22,62,30],[77,10,63,16],[77,11,63,17],[78,8,64,12],[79,8,65,12],[79,14,65,18],[79,18,65,22,"Error"],[79,23,65,27],[79,24,65,28],[79,49,65,53,"route"],[79,54,65,58],[79,68,65,72,"type"],[79,72,65,76],[79,74,65,78],[79,75,65,79],[80,6,66,8],[80,7,66,9],[81,6,67,8],[81,9,67,11,"options"],[82,4,68,4],[82,5,68,5],[82,6,68,6],[83,2,69,0],[84,2,70,0,"exports"],[84,9,70,7],[84,10,70,8,"getRoutes"],[84,19,70,17],[84,22,70,20,"getRoutes"],[84,31,70,29],[85,2,71,0],[85,11,71,9,"getExactRoutes"],[85,25,71,23,"getExactRoutes"],[85,26,71,24,"contextModule"],[85,39,71,37],[85,41,71,53],[86,4,71,53],[86,8,71,39,"options"],[86,15,71,46],[86,18,71,46,"arguments"],[86,27,71,46],[86,28,71,46,"length"],[86,34,71,46],[86,42,71,46,"arguments"],[86,51,71,46],[86,59,71,46,"undefined"],[86,68,71,46],[86,71,71,46,"arguments"],[86,80,71,46],[86,86,71,49],[86,87,71,50],[86,88,71,51],[87,4,72,4],[87,11,72,11,"getRoutes"],[87,20,72,20],[87,21,72,21,"contextModule"],[87,34,72,34],[87,36,72,36],[88,6,73,8],[88,9,73,11,"options"],[88,16,73,18],[89,6,74,8,"skipGenerated"],[89,19,74,21],[89,21,74,23],[90,4,75,4],[90,5,75,5],[90,6,75,6],[91,2,76,0],[92,2,77,0,"exports"],[92,9,77,7],[92,10,77,8,"getExactRoutes"],[92,24,77,22],[92,27,77,25,"getExactRoutes"],[92,41,77,39],[93,2,79,0,"Object"],[93,8,79,6],[93,9,79,7,"defineProperty"],[93,23,79,21],[93,24,79,22,"exports"],[93,31,79,29],[93,33,79,31],[93,50,79,48],[93,52,79,50],[94,4,79,52,"enumerable"],[94,14,79,62],[94,16,79,64],[94,20,79,68],[95,4,79,70,"get"],[95,7,79,73],[95,9,79,75],[95,18,79,75,"get"],[95,19,79,75],[95,21,79,87],[96,6,79,89],[96,13,79,96,"require"],[96,20,79,96],[96,21,79,96,"_dependencyMap"],[96,35,79,96],[96,59,79,112,"generateDynamic"],[96,74,79,127],[97,4,79,129],[98,2,79,131],[98,3,79,132],[98,4,79,133],[99,2,80,0,"Object"],[99,8,80,6],[99,9,80,7,"defineProperty"],[99,23,80,21],[99,24,80,22,"exports"],[99,31,80,29],[99,33,80,31],[99,52,80,50],[99,54,80,52],[100,4,80,54,"enumerable"],[100,14,80,64],[100,16,80,66],[100,20,80,70],[101,4,80,72,"get"],[101,7,80,75],[101,9,80,77],[101,18,80,77,"get"],[101,19,80,77],[101,21,80,89],[102,6,80,91],[102,13,80,98,"require"],[102,20,80,98],[102,21,80,98,"_dependencyMap"],[102,35,80,98],[102,59,80,114,"extrapolateGroups"],[102,76,80,131],[103,4,80,133],[104,2,80,135],[104,3,80,136],[104,4,80,137],[105,2,81,0,"Object"],[105,8,81,6],[105,9,81,7,"defineProperty"],[105,23,81,21],[105,24,81,22,"exports"],[105,31,81,29],[105,33,81,31],[105,48,81,46],[105,50,81,48],[106,4,81,50,"enumerable"],[106,14,81,60],[106,16,81,62],[106,20,81,66],[107,4,81,68,"get"],[107,7,81,71],[107,9,81,73],[107,18,81,73,"get"],[107,19,81,73],[107,21,81,85],[108,6,81,87],[108,13,81,94,"require"],[108,20,81,94],[108,21,81,94,"_dependencyMap"],[108,35,81,94],[108,59,81,110,"getIgnoreList"],[108,72,81,123],[109,4,81,125],[110,2,81,127],[110,3,81,128],[110,4,81,129],[111,0,81,130],[111,3]],"functionMap":{"names":["<global>","getRoutes","getSystemRoute","loadRoute","getExactRoutes","Object.defineProperty$argument_2.get"],"mappings":"AAA;ACgB;QCE;+BCK;sBDG;oBCW;qBDG;oBCY;qBDE;SDW;CDG;AIE;CJK;2EKG,uDL;6EKC,yDL;yEKC,qDL"}},"type":"js/module"}]}