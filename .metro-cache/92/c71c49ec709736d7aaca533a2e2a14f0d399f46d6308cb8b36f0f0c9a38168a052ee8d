{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM="}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":850},"end":{"line":24,"column":77,"index":927}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc="}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":544,"column":0,"index":18954}}],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI="}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc="}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}},{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}},{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}},{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}},{"start":{"line":21,"column":0,"index":670},"end":{"line":21,"column":70,"index":740}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps="}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE="}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":741},"end":{"line":22,"column":43,"index":784}},{"start":{"line":22,"column":0,"index":741},"end":{"line":22,"column":43,"index":784}},{"start":{"line":22,"column":0,"index":741},"end":{"line":22,"column":43,"index":784}},{"start":{"line":22,"column":0,"index":741},"end":{"line":22,"column":43,"index":784}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw="}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}},{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}},{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}},{"start":{"line":11,"column":0,"index":299},"end":{"line":11,"column":79,"index":378}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}},{"start":{"line":19,"column":0,"index":549},"end":{"line":19,"column":80,"index":629}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I="}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":379},"end":{"line":12,"column":56,"index":435}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ="}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":928},"end":{"line":25,"column":55,"index":983}},{"start":{"line":25,"column":0,"index":928},"end":{"line":25,"column":55,"index":983}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE="}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":785},"end":{"line":23,"column":64,"index":849}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var React = _interopRequireWildcard(require(_dependencyMap[6], \"react\"));\n  var _reactNative = require(_dependencyMap[7], \"react-native\");\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[8], \"../RNGestureHandlerModule\"));\n  var _GestureHandlerRootViewContext = _interopRequireDefault(require(_dependencyMap[9], \"../GestureHandlerRootViewContext\"));\n  var _jsxDevRuntime = require(_dependencyMap[10], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"C:\\\\Users\\\\argus\\\\workspace\\\\appigreja\\\\node_modules\\\\react-native-gesture-handler\\\\src\\\\handlers\\\\createHandler.tsx\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var UIManagerAny = _reactNative.UIManager;\n  require(_dependencyMap[11], \"./customDirectEventTypes\").customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    },\n    // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n    // on Android with Fabric enabled, the native part still sends the native events to JS\n    // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n    // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n    // That's why we need to register another pair of event names.\n    // The incoming events will be queued but never handled.\n    // Without this piece of code below, you'll get the following JS error:\n    // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n    ...((0, require(_dependencyMap[12], \"../utils\").isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid)\n  };\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = {\n    ...UIManagerAny.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n  // In newer versions of RN the `genericDirectEventTypes` is located in the object\n  // returned by UIManager.getViewManagerConfig('getConstants') or in older RN UIManager.getConstants(), we need to add it there as well to make\n  // it compatible with RN 61+\n  var UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants') ?? UIManagerAny.getConstants?.();\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = {\n      ...UIManagerConstants.genericDirectEventTypes,\n      ...customGHEventsConfig\n    };\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? () => {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? () => {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = (tag, blockNativeResponder) => {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = () => {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = refs => {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(r => r && r.current === null);\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = {\n    [require(_dependencyMap[13], \"../State\").State.UNDETERMINED]: undefined,\n    [require(_dependencyMap[13], \"../State\").State.BEGAN]: 'onBegan',\n    [require(_dependencyMap[13], \"../State\").State.FAILED]: 'onFailed',\n    [require(_dependencyMap[13], \"../State\").State.CANCELLED]: 'onCancelled',\n    [require(_dependencyMap[13], \"../State\").State.ACTIVE]: 'onActivated',\n    [require(_dependencyMap[13], \"../State\").State.END]: 'onEnded'\n  };\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _callSuper(this, Handler, [props]);\n        _this.onGestureHandlerEvent = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent?.(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent?.(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = event => {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange?.(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange?.(event);\n          }\n        };\n        _this.refHandler = node => {\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // TODO(TS) fix ref type\n          var ref = child.ref;\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n        _this.createGestureHandler = newConfig => {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = newViewTag => {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, require(_dependencyMap[14], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, require(_dependencyMap[15], \"./handlersRegistry\").registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = (() => {\n              var onGestureEvent = _this.props?.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = _this.props?.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return require(_dependencyMap[14], \"../ActionType\").ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return require(_dependencyMap[14], \"../ActionType\").ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return require(_dependencyMap[14], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API;\n              }\n            })();\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, require(_dependencyMap[16], \"./utils\").scheduleFlushOperations)();\n        };\n        _this.updateGestureHandler = newConfig => {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, require(_dependencyMap[16], \"./utils\").scheduleFlushOperations)();\n        };\n        _this.handlerTag = (0, require(_dependencyMap[17], \"./getNextHandlerTag\").getNextHandlerTag)();\n        _this.config = {};\n        _this.propsRef = /*#__PURE__*/React.createRef();\n        _this.isMountedRef = /*#__PURE__*/React.createRef();\n        _this.state = {\n          allowTouches\n        };\n        if (props.id) {\n          if (require(_dependencyMap[15], \"./handlersRegistry\").handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          require(_dependencyMap[15], \"./handlersRegistry\").handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(Handler, _React$Component);\n      return (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', () => {\n              this.setState(_ => ({\n                allowTouches\n              }));\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, require(_dependencyMap[18], \"../ghQueueMicrotask\").ghQueueMicrotask)(() => {\n              this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, require(_dependencyMap[16], \"./utils\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n          this.attachGestureHandler((0, require(_dependencyMap[16], \"./utils\").findNodeHandle)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, require(_dependencyMap[16], \"./utils\").findNodeHandle)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.inspectorToggleListener?.remove();\n          this.isMountedRef.current = false;\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, require(_dependencyMap[16], \"./utils\").scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete require(_dependencyMap[15], \"./handlersRegistry\").handlerIDToTag[handlerID];\n          }\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, require(_dependencyMap[18], \"../ghQueueMicrotask\").ghQueueMicrotask)(() => {\n              this.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, require(_dependencyMap[16], \"./utils\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n            if (!(0, require(_dependencyMap[12], \"../utils\").deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = {\n            ...this.props,\n            ...updates\n          };\n          var newConfig = (0, require(_dependencyMap[16], \"./utils\").filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          if (__DEV__ && !this.context && !(0, require(_dependencyMap[12], \"../utils\").isJestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props = this.props,\n            onGestureEvent = _this$props.onGestureEvent,\n            onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props2 = this.props,\n            onHandlerStateChange = _this$props2.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, require(_dependencyMap[12], \"../utils\").tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(require(_dependencyMap[19], \"./PressabilityDebugView\").PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 11\n            }, this));\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            ref: this.refHandler,\n            collapsable: false,\n            ...((0, require(_dependencyMap[12], \"../utils\").isJestEnv)() ? {\n              handlerType: name,\n              handlerTag: this.handlerTag,\n              enabled: this.props.enabled\n            } : {}),\n            testID: this.props.testID ?? child.props.testID,\n            ...events\n          }, grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = _GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":398,"map":[[12,2,1,0],[12,6,1,0,"React"],[12,11,1,0],[12,14,1,0,"_interopRequireWildcard"],[12,37,1,0],[12,38,1,0,"require"],[12,45,1,0],[12,46,1,0,"_dependencyMap"],[12,60,1,0],[13,2,2,0],[13,6,2,0,"_reactNative"],[13,18,2,0],[13,21,2,0,"require"],[13,28,2,0],[13,29,2,0,"_dependencyMap"],[13,43,2,0],[14,2,9,0],[14,6,9,0,"_RNGestureHandlerModule"],[14,29,9,0],[14,32,9,0,"_interopRequireDefault"],[14,54,9,0],[14,55,9,0,"require"],[14,62,9,0],[14,63,9,0,"_dependencyMap"],[14,77,9,0],[15,2,24,0],[15,6,24,0,"_GestureHandlerRootViewContext"],[15,36,24,0],[15,39,24,0,"_interopRequireDefault"],[15,61,24,0],[15,62,24,0,"require"],[15,69,24,0],[15,70,24,0,"_dependencyMap"],[15,84,24,0],[16,2,24,77],[16,6,24,77,"_jsxDevRuntime"],[16,20,24,77],[16,23,24,77,"require"],[16,30,24,77],[16,31,24,77,"_dependencyMap"],[16,45,24,77],[17,2,24,77],[17,6,24,77,"_jsxFileName"],[17,18,24,77],[18,2,24,77],[18,11,24,77,"_getRequireWildcardCache"],[18,36,24,77,"e"],[18,37,24,77],[18,66,24,77,"WeakMap"],[18,73,24,77],[18,92,24,77,"r"],[18,93,24,77],[18,100,24,77,"WeakMap"],[18,107,24,77],[18,111,24,77,"t"],[18,112,24,77],[18,119,24,77,"WeakMap"],[18,126,24,77],[18,138,24,77,"_getRequireWildcardCache"],[18,162,24,77],[18,174,24,77,"_getRequireWildcardCache"],[18,175,24,77,"e"],[18,176,24,77],[18,187,24,77,"e"],[18,188,24,77],[18,191,24,77,"t"],[18,192,24,77],[18,195,24,77,"r"],[18,196,24,77],[18,201,24,77,"e"],[18,202,24,77],[19,2,24,77],[19,11,24,77,"_interopRequireWildcard"],[19,35,24,77,"e"],[19,36,24,77],[19,38,24,77,"r"],[19,39,24,77],[19,48,24,77,"r"],[19,49,24,77],[19,53,24,77,"e"],[19,54,24,77],[19,58,24,77,"e"],[19,59,24,77],[19,60,24,77,"__esModule"],[19,70,24,77],[19,79,24,77,"e"],[19,80,24,77],[19,95,24,77,"e"],[19,96,24,77],[19,119,24,77,"e"],[19,120,24,77],[19,145,24,77,"e"],[19,146,24,77],[19,157,24,77,"default"],[19,164,24,77],[19,166,24,77,"e"],[19,167,24,77],[19,175,24,77,"t"],[19,176,24,77],[19,179,24,77,"_getRequireWildcardCache"],[19,203,24,77],[19,204,24,77,"r"],[19,205,24,77],[19,212,24,77,"t"],[19,213,24,77],[19,217,24,77,"t"],[19,218,24,77],[19,219,24,77,"has"],[19,222,24,77],[19,223,24,77,"e"],[19,224,24,77],[19,234,24,77,"t"],[19,235,24,77],[19,236,24,77,"get"],[19,239,24,77],[19,240,24,77,"e"],[19,241,24,77],[19,248,24,77,"n"],[19,249,24,77],[19,254,24,77,"__proto__"],[19,263,24,77],[19,273,24,77,"a"],[19,274,24,77],[19,277,24,77,"Object"],[19,283,24,77],[19,284,24,77,"defineProperty"],[19,298,24,77],[19,302,24,77,"Object"],[19,308,24,77],[19,309,24,77,"getOwnPropertyDescriptor"],[19,333,24,77],[19,344,24,77,"u"],[19,345,24,77],[19,349,24,77,"e"],[19,350,24,77],[19,370,24,77,"u"],[19,371,24,77],[19,378,24,77,"hasOwnProperty"],[19,392,24,77],[19,393,24,77,"call"],[19,397,24,77],[19,398,24,77,"e"],[19,399,24,77],[19,401,24,77,"u"],[19,402,24,77],[19,411,24,77,"i"],[19,412,24,77],[19,415,24,77,"a"],[19,416,24,77],[19,419,24,77,"Object"],[19,425,24,77],[19,426,24,77,"getOwnPropertyDescriptor"],[19,450,24,77],[19,451,24,77,"e"],[19,452,24,77],[19,454,24,77,"u"],[19,455,24,77],[19,465,24,77,"i"],[19,466,24,77],[19,471,24,77,"i"],[19,472,24,77],[19,473,24,77,"get"],[19,476,24,77],[19,480,24,77,"i"],[19,481,24,77],[19,482,24,77,"set"],[19,485,24,77],[19,489,24,77,"Object"],[19,495,24,77],[19,496,24,77,"defineProperty"],[19,510,24,77],[19,511,24,77,"n"],[19,512,24,77],[19,514,24,77,"u"],[19,515,24,77],[19,517,24,77,"i"],[19,518,24,77],[19,522,24,77,"n"],[19,523,24,77],[19,524,24,77,"u"],[19,525,24,77],[19,529,24,77,"e"],[19,530,24,77],[19,531,24,77,"u"],[19,532,24,77],[19,544,24,77,"n"],[19,545,24,77],[19,546,24,77,"default"],[19,553,24,77],[19,556,24,77,"e"],[19,557,24,77],[19,559,24,77,"t"],[19,560,24,77],[19,564,24,77,"t"],[19,565,24,77],[19,566,24,77,"set"],[19,569,24,77],[19,570,24,77,"e"],[19,571,24,77],[19,573,24,77,"n"],[19,574,24,77],[19,577,24,77,"n"],[19,578,24,77],[20,2,24,77],[20,11,24,77,"_callSuper"],[20,22,24,77,"t"],[20,23,24,77],[20,25,24,77,"o"],[20,26,24,77],[20,28,24,77,"e"],[20,29,24,77],[20,40,24,77,"o"],[20,41,24,77],[20,48,24,77,"_getPrototypeOf2"],[20,64,24,77],[20,65,24,77,"default"],[20,72,24,77],[20,74,24,77,"o"],[20,75,24,77],[20,82,24,77,"_possibleConstructorReturn2"],[20,109,24,77],[20,110,24,77,"default"],[20,117,24,77],[20,119,24,77,"t"],[20,120,24,77],[20,122,24,77,"_isNativeReflectConstruct"],[20,147,24,77],[20,152,24,77,"Reflect"],[20,159,24,77],[20,160,24,77,"construct"],[20,169,24,77],[20,170,24,77,"o"],[20,171,24,77],[20,173,24,77,"e"],[20,174,24,77],[20,186,24,77,"_getPrototypeOf2"],[20,202,24,77],[20,203,24,77,"default"],[20,210,24,77],[20,212,24,77,"t"],[20,213,24,77],[20,215,24,77,"constructor"],[20,226,24,77],[20,230,24,77,"o"],[20,231,24,77],[20,232,24,77,"apply"],[20,237,24,77],[20,238,24,77,"t"],[20,239,24,77],[20,241,24,77,"e"],[20,242,24,77],[21,2,24,77],[21,11,24,77,"_isNativeReflectConstruct"],[21,37,24,77],[21,51,24,77,"t"],[21,52,24,77],[21,56,24,77,"Boolean"],[21,63,24,77],[21,64,24,77,"prototype"],[21,73,24,77],[21,74,24,77,"valueOf"],[21,81,24,77],[21,82,24,77,"call"],[21,86,24,77],[21,87,24,77,"Reflect"],[21,94,24,77],[21,95,24,77,"construct"],[21,104,24,77],[21,105,24,77,"Boolean"],[21,112,24,77],[21,145,24,77,"t"],[21,146,24,77],[21,159,24,77,"_isNativeReflectConstruct"],[21,184,24,77],[21,196,24,77,"_isNativeReflectConstruct"],[21,197,24,77],[21,210,24,77,"t"],[21,211,24,77],[22,2,27,0],[22,6,27,6,"UIManagerAny"],[22,18,27,18],[22,21,27,21,"UIManager"],[22,43,27,37],[23,2,29,0,"customDirectEventTypes"],[23,29,29,0],[23,30,29,0,"customDirectEventTypes"],[23,80,29,22],[23,81,29,23,"topGestureHandlerEvent"],[23,103,29,45],[23,106,29,48],[24,4,30,2,"registrationName"],[24,20,30,18],[24,22,30,20],[25,2,31,0],[25,3,31,1],[26,2,33,0],[26,6,33,6,"customGHEventsConfigFabricAndroid"],[26,39,33,39],[26,42,33,42],[27,4,34,2,"topOnGestureHandlerEvent"],[27,28,34,26],[27,30,34,28],[28,6,34,30,"registrationName"],[28,22,34,46],[28,24,34,48],[29,4,34,72],[29,5,34,73],[30,4,35,2,"topOnGestureHandlerStateChange"],[30,34,35,32],[30,36,35,34],[31,6,36,4,"registrationName"],[31,22,36,20],[31,24,36,22],[32,4,37,2],[33,2,38,0],[33,3,38,1],[34,2,40,0],[34,6,40,6,"customGHEventsConfig"],[34,26,40,26],[34,29,40,29],[35,4,41,2,"onGestureHandlerEvent"],[35,25,41,23],[35,27,41,25],[36,6,41,27,"registrationName"],[36,22,41,43],[36,24,41,45],[37,4,41,69],[37,5,41,70],[38,4,42,2,"onGestureHandlerStateChange"],[38,31,42,29],[38,33,42,31],[39,6,43,4,"registrationName"],[39,22,43,20],[39,24,43,22],[40,4,44,2],[40,5,44,3],[41,4,46,2],[42,4,47,2],[43,4,48,2],[44,4,49,2],[45,4,50,2],[46,4,51,2],[47,4,52,2],[48,4,53,2],[49,4,54,2],[49,8,54,6],[49,12,54,6,"isFabric"],[49,39,54,6],[49,40,54,6,"isFabric"],[49,60,54,14],[49,62,54,15],[49,63,54,16],[49,67,55,4,"Platform"],[49,88,55,12],[49,89,55,13,"OS"],[49,91,55,15],[49,96,55,20],[49,105,55,29],[49,109,56,4,"customGHEventsConfigFabricAndroid"],[49,142,56,37],[50,2,57,0],[50,3,57,1],[52,2,59,0],[53,2,60,0],[54,2,61,0],[55,2,62,0],[56,2,63,0,"UIManagerAny"],[56,14,63,12],[56,15,63,13,"genericDirectEventTypes"],[56,38,63,36],[56,41,63,39],[57,4,64,2],[57,7,64,5,"UIManagerAny"],[57,19,64,17],[57,20,64,18,"genericDirectEventTypes"],[57,43,64,41],[58,4,65,2],[58,7,65,5,"customGHEventsConfig"],[59,2,66,0],[59,3,66,1],[60,2,67,0],[61,2,68,0],[62,2,69,0],[63,2,70,0],[63,6,70,6,"UIManagerConstants"],[63,24,70,24],[63,27,71,2,"UIManagerAny"],[63,39,71,14],[63,40,71,15,"getViewManagerConfig"],[63,60,71,35],[63,63,71,38],[63,77,71,52],[63,78,71,53],[63,82,72,2,"UIManagerAny"],[63,94,72,14],[63,95,72,15,"getConstants"],[63,107,72,27],[63,110,72,30],[63,111,72,31],[64,2,74,0],[64,6,74,4,"UIManagerConstants"],[64,24,74,22],[64,26,74,24],[65,4,75,2,"UIManagerConstants"],[65,22,75,20],[65,23,75,21,"genericDirectEventTypes"],[65,46,75,44],[65,49,75,47],[66,6,76,4],[66,9,76,7,"UIManagerConstants"],[66,27,76,25],[66,28,76,26,"genericDirectEventTypes"],[66,51,76,49],[67,6,77,4],[67,9,77,7,"customGHEventsConfig"],[68,4,78,2],[68,5,78,3],[69,2,79,0],[71,2,81,0],[72,2,82,0],[72,6,82,0,"_UIManagerAny$setJSRe"],[72,27,82,0],[72,30,89,4,"UIManagerAny"],[72,42,89,16],[72,43,83,2,"setJSResponder"],[72,57,83,16],[73,4,83,18,"oldSetJSResponder"],[73,21,83,35],[73,24,83,35,"_UIManagerAny$setJSRe"],[73,45,83,35],[73,59,83,38],[73,65,83,44],[74,6,84,4],[75,4,84,4],[75,5,85,3],[75,8,85,3,"_UIManagerAny$setJSRe"],[75,29,85,3],[76,4,85,3,"_UIManagerAny$clearJS"],[76,25,85,3],[76,28,89,4,"UIManagerAny"],[76,40,89,16],[76,41,86,2,"clearJSResponder"],[76,57,86,18],[77,4,86,20,"oldClearJSResponder"],[77,23,86,39],[77,26,86,39,"_UIManagerAny$clearJS"],[77,47,86,39],[77,61,86,42],[77,67,86,48],[78,6,87,4],[79,4,87,4],[79,5,88,3],[79,8,88,3,"_UIManagerAny$clearJS"],[79,29,88,3],[80,2,90,0,"UIManagerAny"],[80,14,90,12],[80,15,90,13,"setJSResponder"],[80,29,90,27],[80,32,90,30],[80,33,90,31,"tag"],[80,36,90,42],[80,38,90,44,"blockNativeResponder"],[80,58,90,73],[80,63,90,78],[81,4,91,2,"RNGestureHandlerModule"],[81,35,91,24],[81,36,91,25,"handleSetJSResponder"],[81,56,91,45],[81,57,91,46,"tag"],[81,60,91,49],[81,62,91,51,"blockNativeResponder"],[81,82,91,71],[81,83,91,72],[82,4,92,2,"oldSetJSResponder"],[82,21,92,19],[82,22,92,20,"tag"],[82,25,92,23],[82,27,92,25,"blockNativeResponder"],[82,47,92,45],[82,48,92,46],[83,2,93,0],[83,3,93,1],[84,2,94,0,"UIManagerAny"],[84,14,94,12],[84,15,94,13,"clearJSResponder"],[84,31,94,29],[84,34,94,32],[84,40,94,38],[85,4,95,2,"RNGestureHandlerModule"],[85,35,95,24],[85,36,95,25,"handleClearJSResponder"],[85,58,95,47],[85,59,95,48],[85,60,95,49],[86,4,96,2,"oldClearJSResponder"],[86,23,96,21],[86,24,96,22],[86,25,96,23],[87,2,97,0],[87,3,97,1],[88,2,99,0],[88,6,99,4,"allowTouches"],[88,18,99,16],[88,21,99,19],[88,25,99,23],[89,2,100,0],[89,6,100,6,"DEV_ON_ANDROID"],[89,20,100,20],[89,23,100,23,"__DEV__"],[89,30,100,30],[89,34,100,34,"Platform"],[89,55,100,42],[89,56,100,43,"OS"],[89,58,100,45],[89,63,100,50],[89,72,100,59],[90,2,101,0],[91,2,102,0],[92,2,103,0],[92,6,103,4,"DEV_ON_ANDROID"],[92,20,103,18],[92,22,103,20],[93,4,104,2,"DeviceEventEmitter"],[93,35,104,20],[93,36,104,21,"addListener"],[93,47,104,32],[93,48,104,33],[93,72,104,57],[93,74,104,59],[93,80,104,65],[94,6,105,4,"allowTouches"],[94,18,105,16],[94,21,105,19],[94,22,105,20,"allowTouches"],[94,34,105,32],[95,4,106,2],[95,5,106,3],[95,6,106,4],[96,2,107,0],[97,2,112,0],[97,11,112,9,"hasUnresolvedRefs"],[97,28,112,26,"hasUnresolvedRefs"],[97,29,113,2,"props"],[97,34,113,24],[97,36,114,2],[98,4,115,2],[99,4,116,2],[99,8,116,8,"extract"],[99,15,116,15],[99,18,116,19,"refs"],[99,22,116,36],[99,26,116,41],[100,6,117,4],[100,10,117,8],[100,11,117,9,"Array"],[100,16,117,14],[100,17,117,15,"isArray"],[100,24,117,22],[100,25,117,23,"refs"],[100,29,117,27],[100,30,117,28],[100,32,117,30],[101,8,118,6],[101,15,118,13,"refs"],[101,19,118,17],[101,23,118,21,"refs"],[101,27,118,25],[101,28,118,26,"current"],[101,35,118,33],[101,40,118,38],[101,44,118,42],[102,6,119,4],[103,6,120,4],[103,13,120,11,"refs"],[103,17,120,15],[103,18,120,16,"some"],[103,22,120,20],[103,23,120,22,"r"],[103,24,120,23],[103,28,120,28,"r"],[103,29,120,29],[103,33,120,33,"r"],[103,34,120,34],[103,35,120,35,"current"],[103,42,120,42],[103,47,120,47],[103,51,120,51],[103,52,120,52],[104,4,121,2],[104,5,121,3],[105,4,122,2],[105,11,122,9,"extract"],[105,18,122,16],[105,19,122,17,"props"],[105,24,122,22],[105,25,122,23],[105,47,122,45],[105,48,122,46],[105,49,122,47],[105,53,122,51,"extract"],[105,60,122,58],[105,61,122,59,"props"],[105,66,122,64],[105,67,122,65],[105,76,122,74],[105,77,122,75],[105,78,122,76],[106,2,123,0],[107,2,125,0],[107,6,125,6,"stateToPropMappings"],[107,25,125,25],[107,28,125,28],[108,4,126,2],[108,5,126,3,"State"],[108,32,126,3],[108,33,126,3,"State"],[108,50,126,8],[108,51,126,9,"UNDETERMINED"],[108,63,126,21],[108,66,126,24,"undefined"],[108,75,126,33],[109,4,127,2],[109,5,127,3,"State"],[109,32,127,3],[109,33,127,3,"State"],[109,50,127,8],[109,51,127,9,"BEGAN"],[109,56,127,14],[109,59,127,17],[109,68,127,26],[110,4,128,2],[110,5,128,3,"State"],[110,32,128,3],[110,33,128,3,"State"],[110,50,128,8],[110,51,128,9,"FAILED"],[110,57,128,15],[110,60,128,18],[110,70,128,28],[111,4,129,2],[111,5,129,3,"State"],[111,32,129,3],[111,33,129,3,"State"],[111,50,129,8],[111,51,129,9,"CANCELLED"],[111,60,129,18],[111,63,129,21],[111,76,129,34],[112,4,130,2],[112,5,130,3,"State"],[112,32,130,3],[112,33,130,3,"State"],[112,50,130,8],[112,51,130,9,"ACTIVE"],[112,57,130,15],[112,60,130,18],[112,73,130,31],[113,4,131,2],[113,5,131,3,"State"],[113,32,131,3],[113,33,131,3,"State"],[113,50,131,8],[113,51,131,9,"END"],[113,54,131,12],[113,57,131,15],[114,2,132,0],[114,3,132,10],[116,2,143,0],[118,2,157,0],[118,6,157,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[118,33,157,33],[118,36,157,36],[118,37,157,37],[120,2,159,0],[121,2,160,15],[121,11,160,24,"createHandler"],[121,24,160,37,"createHandler"],[121,25,160,37,"_ref"],[121,29,160,37],[121,31,169,76],[122,4,169,76],[122,8,164,2,"name"],[122,12,164,6],[122,15,164,6,"_ref"],[122,19,164,6],[122,20,164,2,"name"],[122,24,164,6],[123,6,164,6,"_ref$allowedProps"],[123,23,164,6],[123,26,164,6,"_ref"],[123,30,164,6],[123,31,165,2,"allowedProps"],[123,43,165,14],[124,6,165,2,"allowedProps"],[124,18,165,14],[124,21,165,14,"_ref$allowedProps"],[124,38,165,14],[124,52,165,17],[124,54,165,19],[124,57,165,19,"_ref$allowedProps"],[124,74,165,19],[125,6,165,19,"_ref$config"],[125,17,165,19],[125,20,165,19,"_ref"],[125,24,165,19],[125,25,166,2,"config"],[125,31,166,8],[126,6,166,2,"config"],[126,12,166,8],[126,15,166,8,"_ref$config"],[126,26,166,8],[126,40,166,11],[126,41,166,12],[126,42,166,13],[126,45,166,13,"_ref$config"],[126,56,166,13],[127,6,167,2,"transformProps"],[127,20,167,16],[127,23,167,16,"_ref"],[127,27,167,16],[127,28,167,2,"transformProps"],[127,42,167,16],[128,6,167,16,"_ref$customNativeProp"],[128,27,167,16],[128,30,167,16,"_ref"],[128,34,167,16],[128,35,168,2,"customNativeProps"],[128,52,168,19],[129,6,168,2,"customNativeProps"],[129,23,168,19],[129,26,168,19,"_ref$customNativeProp"],[129,47,168,19],[129,61,168,22],[129,63,168,24],[129,66,168,24,"_ref$customNativeProp"],[129,87,168,24],[130,4,168,24],[130,8,173,8,"Handler"],[130,15,173,15],[130,41,173,15,"_React$Component"],[130,57,173,15],[131,6,188,4],[131,15,188,4,"Handler"],[131,23,188,16,"props"],[131,28,188,48],[131,30,188,50],[132,8,188,50],[132,12,188,50,"_this"],[132,17,188,50],[133,8,188,50],[133,12,188,50,"_classCallCheck2"],[133,28,188,50],[133,29,188,50,"default"],[133,36,188,50],[133,44,188,50,"Handler"],[133,51,188,50],[134,8,189,6,"_this"],[134,13,189,6],[134,16,189,6,"_callSuper"],[134,26,189,6],[134,33,189,6,"Handler"],[134,40,189,6],[134,43,189,12,"props"],[134,48,189,17],[135,8,189,19,"_this"],[135,13,189,19],[135,14,260,12,"onGestureHandlerEvent"],[135,35,260,33],[135,38,260,37,"event"],[135,43,260,59],[135,47,260,64],[136,10,261,6],[136,14,261,10,"event"],[136,19,261,15],[136,20,261,16,"nativeEvent"],[136,31,261,27],[136,32,261,28,"handlerTag"],[136,42,261,38],[136,47,261,43,"_this"],[136,52,261,43],[136,53,261,48,"handlerTag"],[136,63,261,58],[136,65,261,60],[137,12,262,8],[137,16,262,12],[137,23,262,19,"_this"],[137,28,262,19],[137,29,262,24,"props"],[137,34,262,29],[137,35,262,30,"onGestureEvent"],[137,49,262,44],[137,54,262,49],[137,64,262,59],[137,66,262,61],[138,14,263,10,"_this"],[138,19,263,10],[138,20,263,15,"props"],[138,25,263,20],[138,26,263,21,"onGestureEvent"],[138,40,263,35],[138,43,263,38,"event"],[138,48,263,43],[138,49,263,44],[139,12,264,8],[140,10,265,6],[140,11,265,7],[140,17,265,13],[141,12,266,8,"_this"],[141,17,266,8],[141,18,266,13,"props"],[141,23,266,18],[141,24,266,19,"onGestureHandlerEvent"],[141,45,266,40],[141,48,266,43,"event"],[141,53,266,48],[141,54,266,49],[142,10,267,6],[143,8,268,4],[143,9,268,5],[144,8,270,4],[145,8,270,4,"_this"],[145,13,270,4],[145,14,271,12,"onGestureHandlerStateChange"],[145,41,271,39],[145,44,272,6,"event"],[145,49,272,39],[145,53,273,9],[146,10,274,6],[146,14,274,10,"event"],[146,19,274,15],[146,20,274,16,"nativeEvent"],[146,31,274,27],[146,32,274,28,"handlerTag"],[146,42,274,38],[146,47,274,43,"_this"],[146,52,274,43],[146,53,274,48,"handlerTag"],[146,63,274,58],[146,65,274,60],[147,12,275,8],[147,16,275,12],[147,23,275,19,"_this"],[147,28,275,19],[147,29,275,24,"props"],[147,34,275,29],[147,35,275,30,"onHandlerStateChange"],[147,55,275,50],[147,60,275,55],[147,70,275,65],[147,72,275,67],[148,14,276,10,"_this"],[148,19,276,10],[148,20,276,15,"props"],[148,25,276,20],[148,26,276,21,"onHandlerStateChange"],[148,46,276,41],[148,49,276,44,"event"],[148,54,276,49],[148,55,276,50],[149,12,277,8],[150,12,279,8],[150,16,279,14,"state"],[150,21,279,42],[150,24,279,45,"event"],[150,29,279,50],[150,30,279,51,"nativeEvent"],[150,41,279,62],[150,42,279,63,"state"],[150,47,279,68],[151,12,280,8],[151,16,280,14,"stateEventName"],[151,30,280,28],[151,33,280,31,"stateToPropMappings"],[151,52,280,50],[151,53,280,51,"state"],[151,58,280,56],[151,59,280,57],[152,12,281,8],[152,16,281,14,"eventHandler"],[152,28,281,26],[152,31,281,29,"stateEventName"],[152,45,281,43],[152,49,281,47,"_this"],[152,54,281,47],[152,55,281,52,"props"],[152,60,281,57],[152,61,281,58,"stateEventName"],[152,75,281,72],[152,76,281,73],[153,12,282,8],[153,16,282,12,"eventHandler"],[153,28,282,24],[153,32,282,28],[153,39,282,35,"eventHandler"],[153,51,282,47],[153,56,282,52],[153,66,282,62],[153,68,282,64],[154,14,283,10,"eventHandler"],[154,26,283,22],[154,27,283,23,"event"],[154,32,283,28],[154,33,283,29],[155,12,284,8],[156,10,285,6],[156,11,285,7],[156,17,285,13],[157,12,286,8,"_this"],[157,17,286,8],[157,18,286,13,"props"],[157,23,286,18],[157,24,286,19,"onGestureHandlerStateChange"],[157,51,286,46],[157,54,286,49,"event"],[157,59,286,54],[157,60,286,55],[158,10,287,6],[159,8,288,4],[159,9,288,5],[160,8,288,5,"_this"],[160,13,288,5],[160,14,290,12,"refHandler"],[160,24,290,22],[160,27,290,26,"node"],[160,31,290,35],[160,35,290,40],[161,10,291,6,"_this"],[161,15,291,6],[161,16,291,11,"viewNode"],[161,24,291,19],[161,27,291,22,"node"],[161,31,291,26],[162,10,293,6],[162,14,293,12,"child"],[162,19,293,17],[162,22,293,20,"React"],[162,27,293,25],[162,28,293,26,"Children"],[162,36,293,34],[162,37,293,35,"only"],[162,41,293,39],[162,42,293,40,"_this"],[162,47,293,40],[162,48,293,45,"props"],[162,53,293,50],[162,54,293,51,"children"],[162,62,293,59],[162,63,293,60],[163,10,294,6],[164,10,295,6],[164,14,295,14,"ref"],[164,17,295,17],[164,20,295,27,"child"],[164,25,295,32],[164,26,295,14,"ref"],[164,29,295,17],[165,10,296,6],[165,14,296,10,"ref"],[165,17,296,13],[165,22,296,18],[165,26,296,22],[165,28,296,24],[166,12,297,8],[166,16,297,12],[166,23,297,19,"ref"],[166,26,297,22],[166,31,297,27],[166,41,297,37],[166,43,297,39],[167,14,298,10,"ref"],[167,17,298,13],[167,18,298,14,"node"],[167,22,298,18],[167,23,298,19],[168,12,299,8],[168,13,299,9],[168,19,299,15],[169,14,300,10,"ref"],[169,17,300,13],[169,18,300,14,"current"],[169,25,300,21],[169,28,300,24,"node"],[169,32,300,28],[170,12,301,8],[171,10,302,6],[172,8,303,4],[172,9,303,5],[173,8,303,5,"_this"],[173,13,303,5],[173,14,305,12,"createGestureHandler"],[173,34,305,32],[173,37,306,6,"newConfig"],[173,46,306,50],[173,50,307,9],[174,10,308,6,"_this"],[174,15,308,6],[174,16,308,11,"config"],[174,22,308,17],[174,25,308,20,"newConfig"],[174,34,308,29],[175,10,310,6,"RNGestureHandlerModule"],[175,41,310,28],[175,42,310,29,"createGestureHandler"],[175,62,310,49],[175,63,311,8,"name"],[175,67,311,12],[175,69,312,8,"_this"],[175,74,312,8],[175,75,312,13,"handlerTag"],[175,85,312,23],[175,87,313,8,"newConfig"],[175,96,314,6],[175,97,314,7],[176,8,315,4],[176,9,315,5],[177,8,315,5,"_this"],[177,13,315,5],[177,14,317,12,"attachGestureHandler"],[177,34,317,32],[177,37,317,36,"newViewTag"],[177,47,317,54],[177,51,317,59],[178,10,318,6,"_this"],[178,15,318,6],[178,16,318,11,"viewTag"],[178,23,318,18],[178,26,318,21,"newViewTag"],[178,36,318,31],[179,10,320,6],[179,14,320,10,"Platform"],[179,35,320,18],[179,36,320,19,"OS"],[179,38,320,21],[179,43,320,26],[179,48,320,31],[179,50,320,33],[180,12,321,8],[181,12,323,10,"RNGestureHandlerModule"],[181,43,323,32],[181,44,323,33,"attachGestureHandler"],[181,64,323,53],[181,65,325,10,"_this"],[181,70,325,10],[181,71,325,15,"handlerTag"],[181,81,325,25],[181,83,326,10,"newViewTag"],[181,93,326,20],[181,95,327,10,"ActionType"],[181,122,327,10],[181,123,327,10,"ActionType"],[181,150,327,20],[181,151,327,21,"JS_FUNCTION_OLD_API"],[181,170,327,40],[182,12,327,42],[183,12,328,10,"_this"],[183,17,328,10],[183,18,328,15,"propsRef"],[183,26,329,8],[183,27,329,9],[184,10,330,6],[184,11,330,7],[184,17,330,13],[185,12,331,8],[185,16,331,8,"registerOldGestureHandler"],[185,43,331,8],[185,44,331,8,"registerOldGestureHandler"],[185,91,331,33],[185,93,331,34,"_this"],[185,98,331,34],[185,99,331,39,"handlerTag"],[185,109,331,49],[185,111,331,51],[186,14,332,10,"onGestureEvent"],[186,28,332,24],[186,30,332,26,"_this"],[186,35,332,26],[186,36,332,31,"onGestureHandlerEvent"],[186,57,332,52],[187,14,333,10,"onGestureStateChange"],[187,34,333,30],[187,36,333,32,"_this"],[187,41,333,32],[187,42,333,37,"onGestureHandlerStateChange"],[188,12,334,8],[188,13,334,9],[188,14,334,10],[189,12,336,8],[189,16,336,14,"actionType"],[189,26,336,24],[189,29,336,27],[189,30,336,28],[189,36,336,34],[190,14,337,10],[190,18,337,16,"onGestureEvent"],[190,32,337,30],[190,35,337,33,"_this"],[190,40,337,33],[190,41,337,38,"props"],[190,46,337,43],[190,48,337,45,"onGestureEvent"],[190,62,337,59],[191,14,338,10],[191,18,338,16,"isGestureHandlerWorklet"],[191,41,338,39],[191,44,339,12,"onGestureEvent"],[191,58,339,26],[191,63,340,13],[191,72,340,22],[191,76,340,26,"onGestureEvent"],[191,90,340,40],[191,94,341,14],[191,115,341,35],[191,119,341,39,"onGestureEvent"],[191,133,341,53],[191,134,341,54],[192,14,342,10],[192,18,342,16,"onHandlerStateChange"],[192,38,342,36],[192,41,342,39,"_this"],[192,46,342,39],[192,47,342,44,"props"],[192,52,342,49],[192,54,342,51,"onHandlerStateChange"],[192,74,342,71],[193,14,343,10],[193,18,343,16,"isStateChangeHandlerWorklet"],[193,45,343,43],[193,48,344,12,"onHandlerStateChange"],[193,68,344,32],[193,73,345,13],[193,82,345,22],[193,86,345,26,"onHandlerStateChange"],[193,106,345,46],[193,110,346,14],[193,131,346,35],[193,135,346,39,"onHandlerStateChange"],[193,155,346,59],[193,156,346,60],[194,14,347,10],[194,18,347,16,"isReanimatedHandler"],[194,37,347,35],[194,40,348,12,"isGestureHandlerWorklet"],[194,63,348,35],[194,67,348,39,"isStateChangeHandlerWorklet"],[194,94,348,66],[195,14,349,10],[195,18,349,14,"isReanimatedHandler"],[195,37,349,33],[195,39,349,35],[196,16,350,12],[197,16,351,12],[197,23,351,19,"ActionType"],[197,50,351,19],[197,51,351,19,"ActionType"],[197,78,351,29],[197,79,351,30,"REANIMATED_WORKLET"],[197,97,351,48],[198,14,352,10],[198,15,352,11],[198,21,352,17],[198,25,352,21,"onGestureEvent"],[198,39,352,35],[198,43,352,39],[198,55,352,51],[198,59,352,55,"onGestureEvent"],[198,73,352,69],[198,75,352,71],[199,16,353,12],[200,16,354,12],[200,23,354,19,"ActionType"],[200,50,354,19],[200,51,354,19,"ActionType"],[200,78,354,29],[200,79,354,30,"NATIVE_ANIMATED_EVENT"],[200,100,354,51],[201,14,355,10],[201,15,355,11],[201,21,355,17],[202,16,356,12],[203,16,357,12],[203,23,357,19,"ActionType"],[203,50,357,19],[203,51,357,19,"ActionType"],[203,78,357,29],[203,79,357,30,"JS_FUNCTION_OLD_API"],[203,98,357,49],[204,14,358,10],[205,12,359,8],[205,13,359,9],[205,15,359,11],[205,16,359,12],[206,12,361,8,"RNGestureHandlerModule"],[206,43,361,30],[206,44,361,31,"attachGestureHandler"],[206,64,361,51],[206,65,362,10,"_this"],[206,70,362,10],[206,71,362,15,"handlerTag"],[206,81,362,25],[206,83,363,10,"newViewTag"],[206,93,363,20],[206,95,364,10,"actionType"],[206,105,365,8],[206,106,365,9],[207,10,366,6],[208,10,368,6],[208,14,368,6,"scheduleFlushOperations"],[208,41,368,6],[208,42,368,6,"scheduleFlushOperations"],[208,76,368,29],[208,78,368,30],[208,79,368,31],[209,8,369,4],[209,9,369,5],[210,8,369,5,"_this"],[210,13,369,5],[210,14,371,12,"updateGestureHandler"],[210,34,371,32],[210,37,372,6,"newConfig"],[210,46,372,50],[210,50,373,9],[211,10,374,6,"_this"],[211,15,374,6],[211,16,374,11,"config"],[211,22,374,17],[211,25,374,20,"newConfig"],[211,34,374,29],[212,10,376,6,"RNGestureHandlerModule"],[212,41,376,28],[212,42,376,29,"updateGestureHandler"],[212,62,376,49],[212,63,376,50,"_this"],[212,68,376,50],[212,69,376,55,"handlerTag"],[212,79,376,65],[212,81,376,67,"newConfig"],[212,90,376,76],[212,91,376,77],[213,10,377,6],[213,14,377,6,"scheduleFlushOperations"],[213,41,377,6],[213,42,377,6,"scheduleFlushOperations"],[213,76,377,29],[213,78,377,30],[213,79,377,31],[214,8,378,4],[214,9,378,5],[215,8,190,6,"_this"],[215,13,190,6],[215,14,190,11,"handlerTag"],[215,24,190,21],[215,27,190,24],[215,31,190,24,"getNextHandlerTag"],[215,58,190,24],[215,59,190,24,"getNextHandlerTag"],[215,99,190,41],[215,101,190,42],[215,102,190,43],[216,8,191,6,"_this"],[216,13,191,6],[216,14,191,11,"config"],[216,20,191,17],[216,23,191,20],[216,24,191,21],[216,25,191,22],[217,8,192,6,"_this"],[217,13,192,6],[217,14,192,11,"propsRef"],[217,22,192,19],[217,38,192,22,"React"],[217,43,192,27],[217,44,192,28,"createRef"],[217,53,192,37],[217,54,192,38],[217,55,192,39],[218,8,193,6,"_this"],[218,13,193,6],[218,14,193,11,"isMountedRef"],[218,26,193,23],[218,42,193,26,"React"],[218,47,193,31],[218,48,193,32,"createRef"],[218,57,193,41],[218,58,193,42],[218,59,193,43],[219,8,194,6,"_this"],[219,13,194,6],[219,14,194,11,"state"],[219,19,194,16],[219,22,194,19],[220,10,194,21,"allowTouches"],[221,8,194,34],[221,9,194,35],[222,8,195,6],[222,12,195,10,"props"],[222,17,195,15],[222,18,195,16,"id"],[222,20,195,18],[222,22,195,20],[223,10,196,8],[223,14,196,12,"handlerIDToTag"],[223,41,196,12],[223,42,196,12,"handlerIDToTag"],[223,78,196,26],[223,79,196,27,"props"],[223,84,196,32],[223,85,196,33,"id"],[223,87,196,35],[223,88,196,36],[223,93,196,41,"undefined"],[223,102,196,50],[223,104,196,52],[224,12,197,10],[224,18,197,16],[224,22,197,20,"Error"],[224,27,197,25],[224,28,197,26],[224,48,197,46,"props"],[224,53,197,51],[224,54,197,52,"id"],[224,56,197,54],[224,78,197,76],[224,79,197,77],[225,10,198,8],[226,10,199,8,"handlerIDToTag"],[226,37,199,8],[226,38,199,8,"handlerIDToTag"],[226,74,199,22],[226,75,199,23,"props"],[226,80,199,28],[226,81,199,29,"id"],[226,83,199,31],[226,84,199,32],[226,87,199,35,"_this"],[226,92,199,35],[226,93,199,40,"handlerTag"],[226,103,199,50],[227,8,200,6],[228,8,200,7],[228,15,200,7,"_this"],[228,20,200,7],[229,6,201,4],[230,6,201,5],[230,10,201,5,"_inherits2"],[230,20,201,5],[230,21,201,5,"default"],[230,28,201,5],[230,30,201,5,"Handler"],[230,37,201,5],[230,39,201,5,"_React$Component"],[230,55,201,5],[231,6,201,5],[231,17,201,5,"_createClass2"],[231,30,201,5],[231,31,201,5,"default"],[231,38,201,5],[231,40,201,5,"Handler"],[231,47,201,5],[232,8,201,5,"key"],[232,11,201,5],[233,8,201,5,"value"],[233,13,201,5],[233,15,203,4],[233,24,203,4,"componentDidMount"],[233,41,203,21,"componentDidMount"],[233,42,203,21],[233,44,203,24],[234,10,204,6],[234,14,204,12,"props"],[234,19,204,34],[234,22,204,37],[234,26,204,41],[234,27,204,42,"props"],[234,32,204,47],[235,10,205,6],[235,14,205,10],[235,15,205,11,"isMountedRef"],[235,27,205,23],[235,28,205,24,"current"],[235,35,205,31],[235,38,205,34],[235,42,205,38],[236,10,207,6],[236,14,207,10,"DEV_ON_ANDROID"],[236,28,207,24],[236,30,207,26],[237,12,208,8],[237,16,208,12],[237,17,208,13,"inspectorToggleListener"],[237,40,208,36],[237,43,208,39,"DeviceEventEmitter"],[237,74,208,57],[237,75,208,58,"addListener"],[237,86,208,69],[237,87,209,10],[237,111,209,34],[237,113,210,10],[237,119,210,16],[238,14,211,12],[238,18,211,16],[238,19,211,17,"setState"],[238,27,211,25],[238,28,211,27,"_"],[238,29,211,28],[238,34,211,34],[239,16,211,36,"allowTouches"],[240,14,211,49],[240,15,211,50],[240,16,211,51],[240,17,211,52],[241,14,212,12],[241,18,212,16],[241,19,212,17,"update"],[241,25,212,23],[241,26,212,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[241,53,212,51],[241,54,212,52],[242,12,213,10],[242,13,214,8],[242,14,214,9],[243,10,215,6],[244,10,216,6],[244,14,216,10,"hasUnresolvedRefs"],[244,31,216,27],[244,32,216,28,"props"],[244,37,216,33],[244,38,216,34],[244,40,216,36],[245,12,217,8],[246,12,218,8],[247,12,219,8],[248,12,220,8],[249,12,221,8],[250,12,222,8],[251,12,223,8],[251,16,223,8,"ghQueueMicrotask"],[251,43,223,8],[251,44,223,8,"ghQueueMicrotask"],[251,83,223,24],[251,85,223,25],[251,91,223,31],[252,14,224,10],[252,18,224,14],[252,19,224,15,"update"],[252,25,224,21],[252,26,224,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[252,53,224,49],[252,54,224,50],[253,12,225,8],[253,13,225,9],[253,14,225,10],[254,10,226,6],[255,10,228,6],[255,14,228,10],[255,15,228,11,"createGestureHandler"],[255,35,228,31],[255,36,229,8],[255,40,229,8,"filterConfig"],[255,67,229,8],[255,68,229,8,"filterConfig"],[255,91,229,20],[255,93,230,10,"transformProps"],[255,107,230,24],[255,110,230,27,"transformProps"],[255,124,230,41],[255,125,230,42],[255,129,230,46],[255,130,230,47,"props"],[255,135,230,52],[255,136,230,53],[255,139,230,56],[255,143,230,60],[255,144,230,61,"props"],[255,149,230,66],[255,151,231,10],[255,152,231,11],[255,155,231,14,"allowedProps"],[255,167,231,26],[255,169,231,28],[255,172,231,31,"customNativeProps"],[255,189,231,48],[255,190,231,49],[255,192,232,10,"config"],[255,198,233,8],[255,199,234,6],[255,200,234,7],[256,10,236,6],[256,14,236,10],[256,15,236,11,"attachGestureHandler"],[256,35,236,31],[256,36,236,32],[256,40,236,32,"findNodeHandle"],[256,67,236,32],[256,68,236,32,"findNodeHandle"],[256,93,236,46],[256,95,236,47],[256,99,236,51],[256,100,236,52,"viewNode"],[256,108,236,60],[256,109,236,71],[256,110,236,72],[256,111,236,73],[256,112,236,74],[257,8,237,4],[258,6,237,5],[259,8,237,5,"key"],[259,11,237,5],[260,8,237,5,"value"],[260,13,237,5],[260,15,239,4],[260,24,239,4,"componentDidUpdate"],[260,42,239,22,"componentDidUpdate"],[260,43,239,22],[260,45,239,25],[261,10,240,6],[261,14,240,12,"viewTag"],[261,21,240,19],[261,24,240,22],[261,28,240,22,"findNodeHandle"],[261,55,240,22],[261,56,240,22,"findNodeHandle"],[261,81,240,36],[261,83,240,37],[261,87,240,41],[261,88,240,42,"viewNode"],[261,96,240,50],[261,97,240,51],[262,10,241,6],[262,14,241,10],[262,18,241,14],[262,19,241,15,"viewTag"],[262,26,241,22],[262,31,241,27,"viewTag"],[262,38,241,34],[262,40,241,36],[263,12,242,8],[263,16,242,12],[263,17,242,13,"attachGestureHandler"],[263,37,242,33],[263,38,242,34,"viewTag"],[263,45,242,51],[263,46,242,52],[263,47,242,53],[263,48,242,54],[264,10,243,6],[265,10,244,6],[265,14,244,10],[265,15,244,11,"update"],[265,21,244,17],[265,22,244,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[265,49,244,45],[265,50,244,46],[266,8,245,4],[267,6,245,5],[268,8,245,5,"key"],[268,11,245,5],[269,8,245,5,"value"],[269,13,245,5],[269,15,247,4],[269,24,247,4,"componentWillUnmount"],[269,44,247,24,"componentWillUnmount"],[269,45,247,24],[269,47,247,27],[270,10,248,6],[270,14,248,10],[270,15,248,11,"inspectorToggleListener"],[270,38,248,34],[270,40,248,36,"remove"],[270,46,248,42],[270,47,248,43],[270,48,248,44],[271,10,249,6],[271,14,249,10],[271,15,249,11,"isMountedRef"],[271,27,249,23],[271,28,249,24,"current"],[271,35,249,31],[271,38,249,34],[271,43,249,39],[272,10,250,6,"RNGestureHandlerModule"],[272,41,250,28],[272,42,250,29,"dropGestureHandler"],[272,60,250,47],[272,61,250,48],[272,65,250,52],[272,66,250,53,"handlerTag"],[272,76,250,63],[272,77,250,64],[273,10,251,6],[273,14,251,6,"scheduleFlushOperations"],[273,41,251,6],[273,42,251,6,"scheduleFlushOperations"],[273,76,251,29],[273,78,251,30],[273,79,251,31],[274,10,252,6],[275,10,253,6],[275,14,253,12,"handlerID"],[275,23,253,41],[275,26,253,44],[275,30,253,48],[275,31,253,49,"props"],[275,36,253,54],[275,37,253,55,"id"],[275,39,253,57],[276,10,254,6],[276,14,254,10,"handlerID"],[276,23,254,19],[276,25,254,21],[277,12,255,8],[278,12,256,8],[278,19,256,15,"handlerIDToTag"],[278,46,256,15],[278,47,256,15,"handlerIDToTag"],[278,83,256,29],[278,84,256,30,"handlerID"],[278,93,256,39],[278,94,256,40],[279,10,257,6],[280,8,258,4],[281,6,258,5],[282,8,258,5,"key"],[282,11,258,5],[283,8,258,5,"value"],[283,13,258,5],[283,15,380,4],[283,24,380,12,"update"],[283,30,380,18,"update"],[283,31,380,19,"remainingTries"],[283,45,380,41],[283,47,380,43],[284,10,381,6],[284,14,381,10],[284,15,381,11],[284,19,381,15],[284,20,381,16,"isMountedRef"],[284,32,381,28],[284,33,381,29,"current"],[284,40,381,36],[284,42,381,38],[285,12,382,8],[286,10,383,6],[287,10,385,6],[287,14,385,12,"props"],[287,19,385,34],[287,22,385,37],[287,26,385,41],[287,27,385,42,"props"],[287,32,385,47],[289,10,387,6],[290,10,388,6],[291,10,389,6],[292,10,390,6],[292,14,390,10,"hasUnresolvedRefs"],[292,31,390,27],[292,32,390,28,"props"],[292,37,390,33],[292,38,390,34],[292,42,390,38,"remainingTries"],[292,56,390,52],[292,59,390,55],[292,60,390,56],[292,62,390,58],[293,12,391,8],[293,16,391,8,"ghQueueMicrotask"],[293,43,391,8],[293,44,391,8,"ghQueueMicrotask"],[293,83,391,24],[293,85,391,25],[293,91,391,31],[294,14,392,10],[294,18,392,14],[294,19,392,15,"update"],[294,25,392,21],[294,26,392,22,"remainingTries"],[294,40,392,36],[294,43,392,39],[294,44,392,40],[294,45,392,41],[295,12,393,8],[295,13,393,9],[295,14,393,10],[296,10,394,6],[296,11,394,7],[296,17,394,13],[297,12,395,8],[297,16,395,14,"newConfig"],[297,25,395,23],[297,28,395,26],[297,32,395,26,"filterConfig"],[297,59,395,26],[297,60,395,26,"filterConfig"],[297,83,395,38],[297,85,396,10,"transformProps"],[297,99,396,24],[297,102,396,27,"transformProps"],[297,116,396,41],[297,117,396,42],[297,121,396,46],[297,122,396,47,"props"],[297,127,396,52],[297,128,396,53],[297,131,396,56],[297,135,396,60],[297,136,396,61,"props"],[297,141,396,66],[297,143,397,10],[297,144,397,11],[297,147,397,14,"allowedProps"],[297,159,397,26],[297,161,397,28],[297,164,397,31,"customNativeProps"],[297,181,397,48],[297,182,397,49],[297,184,398,10,"config"],[297,190,399,8],[297,191,399,9],[298,12,400,8],[298,16,400,12],[298,17,400,13],[298,21,400,13,"deepEqual"],[298,48,400,13],[298,49,400,13,"deepEqual"],[298,70,400,22],[298,72,400,23],[298,76,400,27],[298,77,400,28,"config"],[298,83,400,34],[298,85,400,36,"newConfig"],[298,94,400,45],[298,95,400,46],[298,97,400,48],[299,14,401,10],[299,18,401,14],[299,19,401,15,"updateGestureHandler"],[299,39,401,35],[299,40,401,36,"newConfig"],[299,49,401,45],[299,50,401,46],[300,12,402,8],[301,10,403,6],[302,8,404,4],[303,6,404,5],[304,8,404,5,"key"],[304,11,404,5],[305,8,404,5,"value"],[305,13,404,5],[305,15,406,4],[305,24,406,4,"setNativeProps"],[305,38,406,18,"setNativeProps"],[305,39,406,19,"updates"],[305,46,406,31],[305,48,406,33],[306,10,407,6],[306,14,407,12,"mergedProps"],[306,25,407,23],[306,28,407,26],[307,12,407,28],[307,15,407,31],[307,19,407,35],[307,20,407,36,"props"],[307,25,407,41],[308,12,407,43],[308,15,407,46,"updates"],[309,10,407,54],[309,11,407,55],[310,10,408,6],[310,14,408,12,"newConfig"],[310,23,408,21],[310,26,408,24],[310,30,408,24,"filterConfig"],[310,57,408,24],[310,58,408,24,"filterConfig"],[310,81,408,36],[310,83,409,8,"transformProps"],[310,97,409,22],[310,100,409,25,"transformProps"],[310,114,409,39],[310,115,409,40,"mergedProps"],[310,126,409,51],[310,127,409,52],[310,130,409,55,"mergedProps"],[310,141,409,66],[310,143,410,8],[310,144,410,9],[310,147,410,12,"allowedProps"],[310,159,410,24],[310,161,410,26],[310,164,410,29,"customNativeProps"],[310,181,410,46],[310,182,410,47],[310,184,411,8,"config"],[310,190,412,6],[310,191,412,7],[311,10,413,6],[311,14,413,10],[311,15,413,11,"updateGestureHandler"],[311,35,413,31],[311,36,413,32,"newConfig"],[311,45,413,41],[311,46,413,42],[312,8,414,4],[313,6,414,5],[314,8,414,5,"key"],[314,11,414,5],[315,8,414,5,"value"],[315,13,414,5],[315,15,416,4],[315,24,416,4,"render"],[315,30,416,10,"render"],[315,31,416,10],[315,33,416,13],[316,10,417,6],[316,14,417,10,"__DEV__"],[316,21,417,17],[316,25,417,21],[316,26,417,22],[316,30,417,26],[316,31,417,27,"context"],[316,38,417,34],[316,42,417,38],[316,43,417,39],[316,47,417,39,"isJestEnv"],[316,74,417,39],[316,75,417,39,"isJestEnv"],[316,96,417,48],[316,98,417,49],[316,99,417,50],[316,103,417,54,"Platform"],[316,124,417,62],[316,125,417,63,"OS"],[316,127,417,65],[316,132,417,70],[316,137,417,75],[316,139,417,77],[317,12,418,8],[317,18,418,14],[317,22,418,18,"Error"],[317,27,418,23],[317,28,419,10,"name"],[317,32,419,14],[317,35,420,12],[317,236,421,8],[317,237,421,9],[318,10,422,6],[319,10,424,6],[319,14,424,10,"gestureEventHandler"],[319,33,424,29],[319,36,424,32],[319,40,424,36],[319,41,424,37,"onGestureHandlerEvent"],[319,62,424,58],[320,10,425,6],[322,10,430,6],[322,14,430,6,"_this$props"],[322,25,430,6],[322,28,431,8],[322,32,431,12],[322,33,431,13,"props"],[322,38,431,18],[323,12,430,14,"onGestureEvent"],[323,26,430,28],[323,29,430,28,"_this$props"],[323,40,430,28],[323,41,430,14,"onGestureEvent"],[323,55,430,28],[324,12,430,30,"onGestureHandlerEvent"],[324,33,430,51],[324,36,430,51,"_this$props"],[324,47,430,51],[324,48,430,30,"onGestureHandlerEvent"],[324,69,430,51],[325,10,432,6],[325,14,432,10,"onGestureEvent"],[325,28,432,24],[325,32,432,28],[325,39,432,35,"onGestureEvent"],[325,53,432,49],[325,58,432,54],[325,68,432,64],[325,70,432,66],[326,12,433,8],[327,12,434,8],[328,12,435,8],[329,12,436,8],[329,16,436,12,"onGestureHandlerEvent"],[329,37,436,33],[329,39,436,35],[330,14,437,10],[330,20,437,16],[330,24,437,20,"Error"],[330,29,437,25],[330,30,438,12],[330,103,439,10],[330,104,439,11],[331,12,440,8],[332,12,441,8,"gestureEventHandler"],[332,31,441,27],[332,34,441,30,"onGestureEvent"],[332,48,441,44],[333,10,442,6],[333,11,442,7],[333,17,442,13],[334,12,443,8],[334,16,444,10,"onGestureHandlerEvent"],[334,37,444,31],[334,41,445,10],[334,48,445,17,"onGestureHandlerEvent"],[334,69,445,38],[334,74,445,43],[334,84,445,53],[334,86,446,10],[335,14,447,10],[335,20,447,16],[335,24,447,20,"Error"],[335,29,447,25],[335,30,448,12],[335,103,449,10],[335,104,449,11],[336,12,450,8],[337,10,451,6],[338,10,453,6],[338,14,453,10,"gestureStateEventHandler"],[338,38,453,34],[338,41,453,37],[338,45,453,41],[338,46,453,42,"onGestureHandlerStateChange"],[338,73,453,69],[339,10,454,6],[341,10,459,6],[341,14,459,6,"_this$props2"],[341,26,459,6],[341,29,462,40],[341,33,462,44],[341,34,462,45,"props"],[341,39,462,50],[342,12,460,8,"onHandlerStateChange"],[342,32,460,28],[342,35,460,28,"_this$props2"],[342,47,460,28],[342,48,460,8,"onHandlerStateChange"],[342,68,460,28],[343,12,461,8,"onGestureHandlerStateChange"],[343,39,461,35],[343,42,461,35,"_this$props2"],[343,54,461,35],[343,55,461,8,"onGestureHandlerStateChange"],[343,82,461,35],[344,10,463,6],[344,14,463,10,"onHandlerStateChange"],[344,34,463,30],[344,38,463,34],[344,45,463,41,"onHandlerStateChange"],[344,65,463,61],[344,70,463,66],[344,80,463,76],[344,82,463,78],[345,12,464,8],[346,12,465,8],[347,12,466,8],[348,12,467,8],[348,16,467,12,"onGestureHandlerStateChange"],[348,43,467,39],[348,45,467,41],[349,14,468,10],[349,20,468,16],[349,24,468,20,"Error"],[349,29,468,25],[349,30,469,12],[349,103,470,10],[349,104,470,11],[350,12,471,8],[351,12,472,8,"gestureStateEventHandler"],[351,36,472,32],[351,39,472,35,"onHandlerStateChange"],[351,59,472,55],[352,10,473,6],[352,11,473,7],[352,17,473,13],[353,12,474,8],[353,16,475,10,"onGestureHandlerStateChange"],[353,43,475,37],[353,47,476,10],[353,54,476,17,"onGestureHandlerStateChange"],[353,81,476,44],[353,86,476,49],[353,96,476,59],[353,98,477,10],[354,14,478,10],[354,20,478,16],[354,24,478,20,"Error"],[354,29,478,25],[354,30,479,12],[354,103,480,10],[354,104,480,11],[355,12,481,8],[356,10,482,6],[357,10,483,6],[357,14,483,12,"events"],[357,20,483,18],[357,23,483,21],[358,12,484,8,"onGestureHandlerEvent"],[358,33,484,29],[358,35,484,31],[358,39,484,35],[358,40,484,36,"state"],[358,45,484,41],[358,46,484,42,"allowTouches"],[358,58,484,54],[358,61,485,12,"gestureEventHandler"],[358,80,485,31],[358,83,486,12,"undefined"],[358,92,486,21],[359,12,487,8,"onGestureHandlerStateChange"],[359,39,487,35],[359,41,487,37],[359,45,487,41],[359,46,487,42,"state"],[359,51,487,47],[359,52,487,48,"allowTouches"],[359,64,487,60],[359,67,488,12,"gestureStateEventHandler"],[359,91,488,36],[359,94,489,12,"undefined"],[360,10,490,6],[360,11,490,7],[361,10,492,6],[361,14,492,10],[361,15,492,11,"propsRef"],[361,23,492,19],[361,24,492,20,"current"],[361,31,492,27],[361,34,492,30,"events"],[361,40,492,36],[362,10,494,6],[362,14,494,10,"child"],[362,19,494,20],[362,22,494,23],[362,26,494,27],[363,10,495,6],[363,14,495,10],[364,12,496,8,"child"],[364,17,496,13],[364,20,496,16,"React"],[364,25,496,21],[364,26,496,22,"Children"],[364,34,496,30],[364,35,496,31,"only"],[364,39,496,35],[364,40,496,36],[364,44,496,40],[364,45,496,41,"props"],[364,50,496,46],[364,51,496,47,"children"],[364,59,496,55],[364,60,496,56],[365,10,497,6],[365,11,497,7],[365,12,497,8],[365,19,497,15,"e"],[365,20,497,16],[365,22,497,18],[366,12,498,8],[366,18,498,14],[366,22,498,18,"Error"],[366,27,498,23],[366,28,499,10],[366,32,499,10,"tagMessage"],[366,59,499,10],[366,60,499,10,"tagMessage"],[366,82,499,20],[366,84,500,12],[366,87,500,15,"name"],[366,91,500,19],[366,247,501,10],[366,248,502,8],[366,249,502,9],[367,10,503,6],[368,10,505,6],[368,14,505,10,"grandChildren"],[368,27,505,23],[368,30,505,26,"child"],[368,35,505,31],[368,36,505,32,"props"],[368,41,505,37],[368,42,505,38,"children"],[368,50,505,46],[369,10,506,6],[369,14,507,8,"__DEV__"],[369,21,507,15],[369,25,508,8,"child"],[369,30,508,13],[369,31,508,14,"type"],[369,35,508,18],[369,40,509,9,"child"],[369,45,509,14],[369,46,509,15,"type"],[369,50,509,19],[369,55,509,24],[369,79,509,48],[369,83,510,10,"child"],[369,88,510,15],[369,89,510,16,"type"],[369,93,510,20],[369,94,510,21,"name"],[369,98,510,25],[369,103,510,30],[369,109,510,36],[369,113,511,10,"child"],[369,118,511,15],[369,119,511,16,"type"],[369,123,511,20],[369,124,511,21,"displayName"],[369,135,511,32],[369,140,511,37],[369,146,511,43],[369,147,511,44],[369,149,512,8],[370,12,513,8,"grandChildren"],[370,25,513,21],[370,28,513,24,"React"],[370,33,513,29],[370,34,513,30,"Children"],[370,42,513,38],[370,43,513,39,"toArray"],[370,50,513,46],[370,51,513,47,"grandChildren"],[370,64,513,60],[370,65,513,61],[371,12,514,8,"grandChildren"],[371,25,514,21],[371,26,514,22,"push"],[371,30,514,26],[371,44,515,10],[371,48,515,10,"_jsxDevRuntime"],[371,62,515,10],[371,63,515,10,"jsxDEV"],[371,69,515,10],[371,71,515,11,"require"],[371,78,515,11],[371,79,515,11,"_dependencyMap"],[371,93,515,11],[371,126,515,11,"PressabilityDebugView"],[371,147,515,32],[372,14,517,12,"color"],[372,19,517,17],[372,21,517,18],[372,40,517,37],[373,14,518,12,"hitSlop"],[373,21,518,19],[373,23,518,21,"child"],[373,28,518,26],[373,29,518,27,"props"],[373,34,518,32],[373,35,518,33,"hitSlop"],[374,12,518,41],[374,15,516,16],[374,38,516,39],[375,14,516,39,"fileName"],[375,22,516,39],[375,24,516,39,"_jsxFileName"],[375,36,516,39],[376,14,516,39,"lineNumber"],[376,24,516,39],[377,14,516,39,"columnNumber"],[377,26,516,39],[378,12,516,39],[378,19,519,11],[378,20,520,8],[378,21,520,9],[379,10,521,6],[380,10,523,6],[380,30,523,13,"React"],[380,35,523,18],[380,36,523,19,"cloneElement"],[380,48,523,31],[380,49,524,8,"child"],[380,54,524,13],[380,56,525,8],[381,12,526,10,"ref"],[381,15,526,13],[381,17,526,15],[381,21,526,19],[381,22,526,20,"refHandler"],[381,32,526,30],[382,12,527,10,"collapsable"],[382,23,527,21],[382,25,527,23],[382,30,527,28],[383,12,528,10],[383,16,528,14],[383,20,528,14,"isJestEnv"],[383,47,528,14],[383,48,528,14,"isJestEnv"],[383,69,528,23],[383,71,528,24],[383,72,528,25],[383,75,529,14],[384,14,530,16,"handlerType"],[384,25,530,27],[384,27,530,29,"name"],[384,31,530,33],[385,14,531,16,"handlerTag"],[385,24,531,26],[385,26,531,28],[385,30,531,32],[385,31,531,33,"handlerTag"],[385,41,531,43],[386,14,532,16,"enabled"],[386,21,532,23],[386,23,532,25],[386,27,532,29],[386,28,532,30,"props"],[386,33,532,35],[386,34,532,36,"enabled"],[387,12,533,14],[387,13,533,15],[387,16,534,14],[387,17,534,15],[387,18,534,16],[387,19,534,17],[388,12,535,10,"testID"],[388,18,535,16],[388,20,535,18],[388,24,535,22],[388,25,535,23,"props"],[388,30,535,28],[388,31,535,29,"testID"],[388,37,535,35],[388,41,535,39,"child"],[388,46,535,44],[388,47,535,45,"props"],[388,52,535,50],[388,53,535,51,"testID"],[388,59,535,57],[389,12,536,10],[389,15,536,13,"events"],[390,10,537,8],[390,11,537,9],[390,13,538,8,"grandChildren"],[390,26,539,6],[390,27,539,7],[391,8,540,4],[392,6,540,5],[393,4,540,5],[393,6,173,24,"React"],[393,11,173,29],[393,12,173,30,"Component"],[393,21,173,39],[394,4,173,8,"Handler"],[394,11,173,15],[394,12,177,11,"displayName"],[394,23,177,22],[394,26,177,25,"name"],[394,30,177,29],[395,4,173,8,"Handler"],[395,11,173,15],[395,12,178,11,"contextType"],[395,23,178,22],[395,26,178,25,"GestureHandlerRootViewContext"],[395,64,178,54],[396,4,542,2],[396,11,542,9,"Handler"],[396,18,542,16],[397,2,543,0],[398,0,543,1],[398,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCCkF;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDa;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFY;IKE;KLM;IME;KNW;oCOE;KPQ;0CQG;KRiB;yBSE;KTa;mCUE;KVU;mCWE;4BnBmB;SmBuB;KXU;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf4H;GDC;CRE"}},"type":"js/module"}]}