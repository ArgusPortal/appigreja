{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/get","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"7RhWyTq5i/X0UNOgMT1VkjxHPX0="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":222,"column":0,"index":6980}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"./gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":68,"index":68}}],"key":"o5NgfUJQHKr9PBMfvlu69EXuwZE="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.PanGesture = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _get2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/get\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n  var _worklet_425682043203_init_data = {\n    code: \"function changeEventCalculator_panGestureTs1(current,previous){let changePayload;if(previous===undefined){changePayload={changeX:current.translationX,changeY:current.translationY};}else{changePayload={changeX:current.translationX-previous.translationX,changeY:current.translationY-previous.translationY};}return{...current,...changePayload};}\",\n    location: \"C:\\\\Users\\\\argus\\\\workspace\\\\appigreja\\\\node_modules\\\\react-native-gesture-handler\\\\src\\\\handlers\\\\gestures\\\\panGesture.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_panGestureTs1\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"changeX\\\",\\\"translationX\\\",\\\"changeY\\\",\\\"translationY\\\"],\\\"sources\\\":[\\\"C:/Users/argus/workspace/appigreja/node_modules/react-native-gesture-handler/src/handlers/gestures/panGesture.ts\\\"],\\\"mappings\\\":\\\"AAUA,SAAAA,mCAEEA,CAAAC,OACA,CAAAC,QAAA,EAEA,GAAI,CAAAC,aAA2C,CAC/C,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAC7BC,OAAO,CAAEN,OAAO,CAACO,YACnB,CAAC,CACH,CAAC,IAAM,CACLL,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAAGJ,QAAQ,CAACI,YAAY,CACrDC,OAAO,CAAEN,OAAO,CAACO,YAAY,CAAGN,QAAQ,CAACM,YAC3C,CAAC,CACH,CAEA,MAAO,CAAE,GAAGP,OAAO,CAAE,GAAGE,aAAc,CAAC,CACzC\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.16.7\"\n  };\n  var changeEventCalculator = function () {\n    var _e = [new global.Error(), 1, -27];\n    var changeEventCalculator = function (current, previous) {\n      var changePayload;\n      if (previous === undefined) {\n        changePayload = {\n          changeX: current.translationX,\n          changeY: current.translationY\n        };\n      } else {\n        changePayload = {\n          changeX: current.translationX - previous.translationX,\n          changeY: current.translationY - previous.translationY\n        };\n      }\n      return {\n        ...current,\n        ...changePayload\n      };\n    };\n    changeEventCalculator.__closure = {};\n    changeEventCalculator.__workletHash = 425682043203;\n    changeEventCalculator.__initData = _worklet_425682043203_init_data;\n    changeEventCalculator.__stackDetails = _e;\n    return changeEventCalculator;\n  }();\n  var PanGesture = exports.PanGesture = /*#__PURE__*/function (_ContinousBaseGesture) {\n    function PanGesture() {\n      var _this;\n      (0, _classCallCheck2.default)(this, PanGesture);\n      _this = _callSuper(this, PanGesture);\n      _this.config = {};\n      _this.handlerName = 'PanGestureHandler';\n      return _this;\n    }\n\n    /**\n     * Range along Y axis (in points) where fingers travels without activation of gesture.\n     * @param offset\n     * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n     */\n    (0, _inherits2.default)(PanGesture, _ContinousBaseGesture);\n    return (0, _createClass2.default)(PanGesture, [{\n      key: \"activeOffsetY\",\n      value: function activeOffsetY(offset) {\n        if (Array.isArray(offset)) {\n          this.config.activeOffsetYStart = offset[0];\n          this.config.activeOffsetYEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.activeOffsetYStart = offset;\n        } else {\n          this.config.activeOffsetYEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * Range along X axis (in points) where fingers travels without activation of gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n       */\n    }, {\n      key: \"activeOffsetX\",\n      value: function activeOffsetX(offset) {\n        if (Array.isArray(offset)) {\n          this.config.activeOffsetXStart = offset[0];\n          this.config.activeOffsetXEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.activeOffsetXStart = offset;\n        } else {\n          this.config.activeOffsetXEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n       */\n    }, {\n      key: \"failOffsetY\",\n      value: function failOffsetY(offset) {\n        if (Array.isArray(offset)) {\n          this.config.failOffsetYStart = offset[0];\n          this.config.failOffsetYEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.failOffsetYStart = offset;\n        } else {\n          this.config.failOffsetYEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n       * @param offset\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n       */\n    }, {\n      key: \"failOffsetX\",\n      value: function failOffsetX(offset) {\n        if (Array.isArray(offset)) {\n          this.config.failOffsetXStart = offset[0];\n          this.config.failOffsetXEnd = offset[1];\n        } else if (offset < 0) {\n          this.config.failOffsetXStart = offset;\n        } else {\n          this.config.failOffsetXEnd = offset;\n        }\n        return this;\n      }\n\n      /**\n       * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n       * @param minPointers\n       */\n    }, {\n      key: \"minPointers\",\n      value: function minPointers(_minPointers) {\n        this.config.minPointers = _minPointers;\n        return this;\n      }\n\n      /**\n       * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n       * Should be a higher or equal to 0 integer.\n       * @param maxPointers\n       */\n    }, {\n      key: \"maxPointers\",\n      value: function maxPointers(_maxPointers) {\n        this.config.maxPointers = _maxPointers;\n        return this;\n      }\n\n      /**\n       * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n       * Expressed in points.\n       * @param distance\n       */\n    }, {\n      key: \"minDistance\",\n      value: function minDistance(distance) {\n        this.config.minDist = distance;\n        return this;\n      }\n\n      /**\n       * Minimum velocity the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocity\",\n      value: function minVelocity(velocity) {\n        this.config.minVelocity = velocity;\n        return this;\n      }\n\n      /**\n       * Minimum velocity along X axis the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocityX\",\n      value: function minVelocityX(velocity) {\n        this.config.minVelocityX = velocity;\n        return this;\n      }\n\n      /**\n       * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n       * @param velocity\n       */\n    }, {\n      key: \"minVelocityY\",\n      value: function minVelocityY(velocity) {\n        this.config.minVelocityY = velocity;\n        return this;\n      }\n\n      /**\n       * #### Android only\n       * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n       * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n       * @param value\n       */\n    }, {\n      key: \"averageTouches\",\n      value: function averageTouches(value) {\n        this.config.avgTouches = value;\n        return this;\n      }\n\n      /**\n       * #### iOS only\n       * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n       * @param value\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n       */\n    }, {\n      key: \"enableTrackpadTwoFingerGesture\",\n      value: function enableTrackpadTwoFingerGesture(value) {\n        this.config.enableTrackpadTwoFingerGesture = value;\n        return this;\n      }\n\n      /**\n       * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n       * @param duration\n       * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n       */\n    }, {\n      key: \"activateAfterLongPress\",\n      value: function activateAfterLongPress(duration) {\n        this.config.activateAfterLongPress = duration;\n        return this;\n      }\n    }, {\n      key: \"onChange\",\n      value: function onChange(callback) {\n        // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n        this.handlers.changeEventCalculator = changeEventCalculator;\n        return _superPropGet(PanGesture, \"onChange\", this, 3)([callback]);\n      }\n    }]);\n  }(require(_dependencyMap[7], \"./gesture\").ContinousBaseGesture);\n});","lineCount":249,"map":[[22,30,11,0],[23,4,11,0],[23,8,11,0,"_e"],[23,10,11,0],[23,18,11,0,"global"],[23,24,11,0],[23,25,11,0,"Error"],[23,30,11,0],[24,4,11,0],[24,8,11,0,"changeEventCalculator"],[24,29,11,0],[24,41,11,0,"changeEventCalculator"],[24,42,12,2,"current"],[24,49,12,60],[24,51,13,2,"previous"],[24,59,13,62],[24,61,14,2],[25,6,16,2],[25,10,16,6,"changePayload"],[25,23,16,49],[26,6,17,2],[26,10,17,6,"previous"],[26,18,17,14],[26,23,17,19,"undefined"],[26,32,17,28],[26,34,17,30],[27,8,18,4,"changePayload"],[27,21,18,17],[27,24,18,20],[28,10,19,6,"changeX"],[28,17,19,13],[28,19,19,15,"current"],[28,26,19,22],[28,27,19,23,"translationX"],[28,39,19,35],[29,10,20,6,"changeY"],[29,17,20,13],[29,19,20,15,"current"],[29,26,20,22],[29,27,20,23,"translationY"],[30,8,21,4],[30,9,21,5],[31,6,22,2],[31,7,22,3],[31,13,22,9],[32,8,23,4,"changePayload"],[32,21,23,17],[32,24,23,20],[33,10,24,6,"changeX"],[33,17,24,13],[33,19,24,15,"current"],[33,26,24,22],[33,27,24,23,"translationX"],[33,39,24,35],[33,42,24,38,"previous"],[33,50,24,46],[33,51,24,47,"translationX"],[33,63,24,59],[34,10,25,6,"changeY"],[34,17,25,13],[34,19,25,15,"current"],[34,26,25,22],[34,27,25,23,"translationY"],[34,39,25,35],[34,42,25,38,"previous"],[34,50,25,46],[34,51,25,47,"translationY"],[35,8,26,4],[35,9,26,5],[36,6,27,2],[37,6,29,2],[37,13,29,9],[38,8,29,11],[38,11,29,14,"current"],[38,18,29,21],[39,8,29,23],[39,11,29,26,"changePayload"],[40,6,29,40],[40,7,29,41],[41,4,30,0],[41,5,30,1],[42,4,30,1,"changeEventCalculator"],[42,25,30,1],[42,26,30,1,"__closure"],[42,35,30,1],[43,4,30,1,"changeEventCalculator"],[43,25,30,1],[43,26,30,1,"__workletHash"],[43,39,30,1],[44,4,30,1,"changeEventCalculator"],[44,25,30,1],[44,26,30,1,"__initData"],[44,36,30,1],[44,39,30,1,"_worklet_425682043203_init_data"],[44,70,30,1],[45,4,30,1,"changeEventCalculator"],[45,25,30,1],[45,26,30,1,"__stackDetails"],[45,40,30,1],[45,43,30,1,"_e"],[45,45,30,1],[46,4,30,1],[46,11,30,1,"changeEventCalculator"],[46,32,30,1],[47,2,30,1],[47,3,11,0],[48,2,11,0],[48,6,32,13,"PanGesture"],[48,16,32,23],[48,19,32,23,"exports"],[48,26,32,23],[48,27,32,23,"PanGesture"],[48,37,32,23],[48,63,32,23,"_ContinousBaseGesture"],[48,84,32,23],[49,4,38,2],[49,13,38,2,"PanGesture"],[49,24,38,2],[49,26,38,16],[50,6,38,16],[50,10,38,16,"_this"],[50,15,38,16],[51,6,38,16],[51,10,38,16,"_classCallCheck2"],[51,26,38,16],[51,27,38,16,"default"],[51,34,38,16],[51,42,38,16,"PanGesture"],[51,52,38,16],[52,6,39,4,"_this"],[52,11,39,4],[52,14,39,4,"_callSuper"],[52,24,39,4],[52,31,39,4,"PanGesture"],[52,41,39,4],[53,6,39,12,"_this"],[53,11,39,12],[53,12,36,9,"config"],[53,18,36,15],[53,21,36,56],[53,22,36,57],[53,23,36,58],[54,6,41,4,"_this"],[54,11,41,4],[54,12,41,9,"handlerName"],[54,23,41,20],[54,26,41,23],[54,45,41,42],[55,6,41,43],[55,13,41,43,"_this"],[55,18,41,43],[56,4,42,2],[58,4,44,2],[59,0,45,0],[60,0,46,0],[61,0,47,0],[62,0,48,0],[63,4,44,2],[63,8,44,2,"_inherits2"],[63,18,44,2],[63,19,44,2,"default"],[63,26,44,2],[63,28,44,2,"PanGesture"],[63,38,44,2],[63,40,44,2,"_ContinousBaseGesture"],[63,61,44,2],[64,4,44,2],[64,15,44,2,"_createClass2"],[64,28,44,2],[64,29,44,2,"default"],[64,36,44,2],[64,38,44,2,"PanGesture"],[64,48,44,2],[65,6,44,2,"key"],[65,9,44,2],[66,6,44,2,"value"],[66,11,44,2],[66,13,49,2],[66,22,49,2,"activeOffsetY"],[66,35,49,15,"activeOffsetY"],[66,36,50,4,"offset"],[66,42,50,75],[66,44,51,4],[67,8,52,4],[67,12,52,8,"Array"],[67,17,52,13],[67,18,52,14,"isArray"],[67,25,52,21],[67,26,52,22,"offset"],[67,32,52,28],[67,33,52,29],[67,35,52,31],[68,10,53,6],[68,14,53,10],[68,15,53,11,"config"],[68,21,53,17],[68,22,53,18,"activeOffsetYStart"],[68,40,53,36],[68,43,53,39,"offset"],[68,49,53,45],[68,50,53,46],[68,51,53,47],[68,52,53,48],[69,10,54,6],[69,14,54,10],[69,15,54,11,"config"],[69,21,54,17],[69,22,54,18,"activeOffsetYEnd"],[69,38,54,34],[69,41,54,37,"offset"],[69,47,54,43],[69,48,54,44],[69,49,54,45],[69,50,54,46],[70,8,55,4],[70,9,55,5],[70,15,55,11],[70,19,55,15,"offset"],[70,25,55,21],[70,28,55,24],[70,29,55,25],[70,31,55,27],[71,10,56,6],[71,14,56,10],[71,15,56,11,"config"],[71,21,56,17],[71,22,56,18,"activeOffsetYStart"],[71,40,56,36],[71,43,56,39,"offset"],[71,49,56,45],[72,8,57,4],[72,9,57,5],[72,15,57,11],[73,10,58,6],[73,14,58,10],[73,15,58,11,"config"],[73,21,58,17],[73,22,58,18,"activeOffsetYEnd"],[73,38,58,34],[73,41,58,37,"offset"],[73,47,58,43],[74,8,59,4],[75,8,60,4],[75,15,60,11],[75,19,60,15],[76,6,61,2],[78,6,63,2],[79,0,64,0],[80,0,65,0],[81,0,66,0],[82,0,67,0],[83,4,63,2],[84,6,63,2,"key"],[84,9,63,2],[85,6,63,2,"value"],[85,11,63,2],[85,13,68,2],[85,22,68,2,"activeOffsetX"],[85,35,68,15,"activeOffsetX"],[85,36,69,4,"offset"],[85,42,69,75],[85,44,70,4],[86,8,71,4],[86,12,71,8,"Array"],[86,17,71,13],[86,18,71,14,"isArray"],[86,25,71,21],[86,26,71,22,"offset"],[86,32,71,28],[86,33,71,29],[86,35,71,31],[87,10,72,6],[87,14,72,10],[87,15,72,11,"config"],[87,21,72,17],[87,22,72,18,"activeOffsetXStart"],[87,40,72,36],[87,43,72,39,"offset"],[87,49,72,45],[87,50,72,46],[87,51,72,47],[87,52,72,48],[88,10,73,6],[88,14,73,10],[88,15,73,11,"config"],[88,21,73,17],[88,22,73,18,"activeOffsetXEnd"],[88,38,73,34],[88,41,73,37,"offset"],[88,47,73,43],[88,48,73,44],[88,49,73,45],[88,50,73,46],[89,8,74,4],[89,9,74,5],[89,15,74,11],[89,19,74,15,"offset"],[89,25,74,21],[89,28,74,24],[89,29,74,25],[89,31,74,27],[90,10,75,6],[90,14,75,10],[90,15,75,11,"config"],[90,21,75,17],[90,22,75,18,"activeOffsetXStart"],[90,40,75,36],[90,43,75,39,"offset"],[90,49,75,45],[91,8,76,4],[91,9,76,5],[91,15,76,11],[92,10,77,6],[92,14,77,10],[92,15,77,11,"config"],[92,21,77,17],[92,22,77,18,"activeOffsetXEnd"],[92,38,77,34],[92,41,77,37,"offset"],[92,47,77,43],[93,8,78,4],[94,8,79,4],[94,15,79,11],[94,19,79,15],[95,6,80,2],[97,6,82,2],[98,0,83,0],[99,0,84,0],[100,0,85,0],[101,0,86,0],[102,4,82,2],[103,6,82,2,"key"],[103,9,82,2],[104,6,82,2,"value"],[104,11,82,2],[104,13,87,2],[104,22,87,2,"failOffsetY"],[104,33,87,13,"failOffsetY"],[104,34,88,4,"offset"],[104,40,88,71],[104,42,89,4],[105,8,90,4],[105,12,90,8,"Array"],[105,17,90,13],[105,18,90,14,"isArray"],[105,25,90,21],[105,26,90,22,"offset"],[105,32,90,28],[105,33,90,29],[105,35,90,31],[106,10,91,6],[106,14,91,10],[106,15,91,11,"config"],[106,21,91,17],[106,22,91,18,"failOffsetYStart"],[106,38,91,34],[106,41,91,37,"offset"],[106,47,91,43],[106,48,91,44],[106,49,91,45],[106,50,91,46],[107,10,92,6],[107,14,92,10],[107,15,92,11,"config"],[107,21,92,17],[107,22,92,18,"failOffsetYEnd"],[107,36,92,32],[107,39,92,35,"offset"],[107,45,92,41],[107,46,92,42],[107,47,92,43],[107,48,92,44],[108,8,93,4],[108,9,93,5],[108,15,93,11],[108,19,93,15,"offset"],[108,25,93,21],[108,28,93,24],[108,29,93,25],[108,31,93,27],[109,10,94,6],[109,14,94,10],[109,15,94,11,"config"],[109,21,94,17],[109,22,94,18,"failOffsetYStart"],[109,38,94,34],[109,41,94,37,"offset"],[109,47,94,43],[110,8,95,4],[110,9,95,5],[110,15,95,11],[111,10,96,6],[111,14,96,10],[111,15,96,11,"config"],[111,21,96,17],[111,22,96,18,"failOffsetYEnd"],[111,36,96,32],[111,39,96,35,"offset"],[111,45,96,41],[112,8,97,4],[113,8,98,4],[113,15,98,11],[113,19,98,15],[114,6,99,2],[116,6,101,2],[117,0,102,0],[118,0,103,0],[119,0,104,0],[120,0,105,0],[121,4,101,2],[122,6,101,2,"key"],[122,9,101,2],[123,6,101,2,"value"],[123,11,101,2],[123,13,106,2],[123,22,106,2,"failOffsetX"],[123,33,106,13,"failOffsetX"],[123,34,107,4,"offset"],[123,40,107,71],[123,42,108,4],[124,8,109,4],[124,12,109,8,"Array"],[124,17,109,13],[124,18,109,14,"isArray"],[124,25,109,21],[124,26,109,22,"offset"],[124,32,109,28],[124,33,109,29],[124,35,109,31],[125,10,110,6],[125,14,110,10],[125,15,110,11,"config"],[125,21,110,17],[125,22,110,18,"failOffsetXStart"],[125,38,110,34],[125,41,110,37,"offset"],[125,47,110,43],[125,48,110,44],[125,49,110,45],[125,50,110,46],[126,10,111,6],[126,14,111,10],[126,15,111,11,"config"],[126,21,111,17],[126,22,111,18,"failOffsetXEnd"],[126,36,111,32],[126,39,111,35,"offset"],[126,45,111,41],[126,46,111,42],[126,47,111,43],[126,48,111,44],[127,8,112,4],[127,9,112,5],[127,15,112,11],[127,19,112,15,"offset"],[127,25,112,21],[127,28,112,24],[127,29,112,25],[127,31,112,27],[128,10,113,6],[128,14,113,10],[128,15,113,11,"config"],[128,21,113,17],[128,22,113,18,"failOffsetXStart"],[128,38,113,34],[128,41,113,37,"offset"],[128,47,113,43],[129,8,114,4],[129,9,114,5],[129,15,114,11],[130,10,115,6],[130,14,115,10],[130,15,115,11,"config"],[130,21,115,17],[130,22,115,18,"failOffsetXEnd"],[130,36,115,32],[130,39,115,35,"offset"],[130,45,115,41],[131,8,116,4],[132,8,117,4],[132,15,117,11],[132,19,117,15],[133,6,118,2],[135,6,120,2],[136,0,121,0],[137,0,122,0],[138,0,123,0],[139,4,120,2],[140,6,120,2,"key"],[140,9,120,2],[141,6,120,2,"value"],[141,11,120,2],[141,13,124,2],[141,22,124,2,"minPointers"],[141,33,124,13,"minPointers"],[141,34,124,14,"minPointers"],[141,46,124,33],[141,48,124,35],[142,8,125,4],[142,12,125,8],[142,13,125,9,"config"],[142,19,125,15],[142,20,125,16,"minPointers"],[142,31,125,27],[142,34,125,30,"minPointers"],[142,46,125,41],[143,8,126,4],[143,15,126,11],[143,19,126,15],[144,6,127,2],[146,6,129,2],[147,0,130,0],[148,0,131,0],[149,0,132,0],[150,0,133,0],[151,4,129,2],[152,6,129,2,"key"],[152,9,129,2],[153,6,129,2,"value"],[153,11,129,2],[153,13,134,2],[153,22,134,2,"maxPointers"],[153,33,134,13,"maxPointers"],[153,34,134,14,"maxPointers"],[153,46,134,33],[153,48,134,35],[154,8,135,4],[154,12,135,8],[154,13,135,9,"config"],[154,19,135,15],[154,20,135,16,"maxPointers"],[154,31,135,27],[154,34,135,30,"maxPointers"],[154,46,135,41],[155,8,136,4],[155,15,136,11],[155,19,136,15],[156,6,137,2],[158,6,139,2],[159,0,140,0],[160,0,141,0],[161,0,142,0],[162,0,143,0],[163,4,139,2],[164,6,139,2,"key"],[164,9,139,2],[165,6,139,2,"value"],[165,11,139,2],[165,13,144,2],[165,22,144,2,"minDistance"],[165,33,144,13,"minDistance"],[165,34,144,14,"distance"],[165,42,144,30],[165,44,144,32],[166,8,145,4],[166,12,145,8],[166,13,145,9,"config"],[166,19,145,15],[166,20,145,16,"minDist"],[166,27,145,23],[166,30,145,26,"distance"],[166,38,145,34],[167,8,146,4],[167,15,146,11],[167,19,146,15],[168,6,147,2],[170,6,149,2],[171,0,150,0],[172,0,151,0],[173,0,152,0],[174,4,149,2],[175,6,149,2,"key"],[175,9,149,2],[176,6,149,2,"value"],[176,11,149,2],[176,13,153,2],[176,22,153,2,"minVelocity"],[176,33,153,13,"minVelocity"],[176,34,153,14,"velocity"],[176,42,153,30],[176,44,153,32],[177,8,154,4],[177,12,154,8],[177,13,154,9,"config"],[177,19,154,15],[177,20,154,16,"minVelocity"],[177,31,154,27],[177,34,154,30,"velocity"],[177,42,154,38],[178,8,155,4],[178,15,155,11],[178,19,155,15],[179,6,156,2],[181,6,158,2],[182,0,159,0],[183,0,160,0],[184,0,161,0],[185,4,158,2],[186,6,158,2,"key"],[186,9,158,2],[187,6,158,2,"value"],[187,11,158,2],[187,13,162,2],[187,22,162,2,"minVelocityX"],[187,34,162,14,"minVelocityX"],[187,35,162,15,"velocity"],[187,43,162,31],[187,45,162,33],[188,8,163,4],[188,12,163,8],[188,13,163,9,"config"],[188,19,163,15],[188,20,163,16,"minVelocityX"],[188,32,163,28],[188,35,163,31,"velocity"],[188,43,163,39],[189,8,164,4],[189,15,164,11],[189,19,164,15],[190,6,165,2],[192,6,167,2],[193,0,168,0],[194,0,169,0],[195,0,170,0],[196,4,167,2],[197,6,167,2,"key"],[197,9,167,2],[198,6,167,2,"value"],[198,11,167,2],[198,13,171,2],[198,22,171,2,"minVelocityY"],[198,34,171,14,"minVelocityY"],[198,35,171,15,"velocity"],[198,43,171,31],[198,45,171,33],[199,8,172,4],[199,12,172,8],[199,13,172,9,"config"],[199,19,172,15],[199,20,172,16,"minVelocityY"],[199,32,172,28],[199,35,172,31,"velocity"],[199,43,172,39],[200,8,173,4],[200,15,173,11],[200,19,173,15],[201,6,174,2],[203,6,176,2],[204,0,177,0],[205,0,178,0],[206,0,179,0],[207,0,180,0],[208,0,181,0],[209,4,176,2],[210,6,176,2,"key"],[210,9,176,2],[211,6,176,2,"value"],[211,11,176,2],[211,13,182,2],[211,22,182,2,"averageTouches"],[211,36,182,16,"averageTouches"],[211,37,182,17,"value"],[211,42,182,31],[211,44,182,33],[212,8,183,4],[212,12,183,8],[212,13,183,9,"config"],[212,19,183,15],[212,20,183,16,"avgTouches"],[212,30,183,26],[212,33,183,29,"value"],[212,38,183,34],[213,8,184,4],[213,15,184,11],[213,19,184,15],[214,6,185,2],[216,6,187,2],[217,0,188,0],[218,0,189,0],[219,0,190,0],[220,0,191,0],[221,0,192,0],[222,4,187,2],[223,6,187,2,"key"],[223,9,187,2],[224,6,187,2,"value"],[224,11,187,2],[224,13,193,2],[224,22,193,2,"enableTrackpadTwoFingerGesture"],[224,52,193,32,"enableTrackpadTwoFingerGesture"],[224,53,193,33,"value"],[224,58,193,47],[224,60,193,49],[225,8,194,4],[225,12,194,8],[225,13,194,9,"config"],[225,19,194,15],[225,20,194,16,"enableTrackpadTwoFingerGesture"],[225,50,194,46],[225,53,194,49,"value"],[225,58,194,54],[226,8,195,4],[226,15,195,11],[226,19,195,15],[227,6,196,2],[229,6,198,2],[230,0,199,0],[231,0,200,0],[232,0,201,0],[233,0,202,0],[234,4,198,2],[235,6,198,2,"key"],[235,9,198,2],[236,6,198,2,"value"],[236,11,198,2],[236,13,203,2],[236,22,203,2,"activateAfterLongPress"],[236,44,203,24,"activateAfterLongPress"],[236,45,203,25,"duration"],[236,53,203,41],[236,55,203,43],[237,8,204,4],[237,12,204,8],[237,13,204,9,"config"],[237,19,204,15],[237,20,204,16,"activateAfterLongPress"],[237,42,204,38],[237,45,204,41,"duration"],[237,53,204,49],[238,8,205,4],[238,15,205,11],[238,19,205,15],[239,6,206,2],[240,4,206,3],[241,6,206,3,"key"],[241,9,206,3],[242,6,206,3,"value"],[242,11,206,3],[242,13,208,2],[242,22,208,2,"onChange"],[242,30,208,10,"onChange"],[242,31,209,4,"callback"],[242,39,213,13],[242,41,214,4],[243,8,215,4],[244,8,216,4],[244,12,216,8],[244,13,216,9,"handlers"],[244,21,216,17],[244,22,216,18,"changeEventCalculator"],[244,43,216,39],[244,46,216,42,"changeEventCalculator"],[244,67,216,63],[245,8,217,4],[245,15,217,4,"_superPropGet"],[245,28,217,4],[245,29,217,4,"PanGesture"],[245,39,217,4],[245,63,217,26,"callback"],[245,71,217,34],[246,6,218,2],[247,4,218,3],[248,2,218,3],[248,4,32,32,"ContinousBaseGesture"],[248,30,32,32],[248,31,32,32,"ContinousBaseGesture"],[248,64,32,52],[249,0,32,52],[249,3]],"functionMap":{"names":["<global>","changeEventCalculator","PanGesture","PanGesture#constructor","PanGesture#activeOffsetY","PanGesture#activeOffsetX","PanGesture#failOffsetY","PanGesture#failOffsetX","PanGesture#minPointers","PanGesture#maxPointers","PanGesture#minDistance","PanGesture#minVelocity","PanGesture#minVelocityX","PanGesture#minVelocityY","PanGesture#averageTouches","PanGesture#enableTrackpadTwoFingerGesture","PanGesture#activateAfterLongPress","PanGesture#onChange"],"mappings":"AAA;ACU;CDmB;OEE;ECM;GDI;EEO;GFY;EGO;GHY;EIO;GJY;EKO;GLY;EMM;GNG;EOO;GPG;EQO;GRG;ESM;GTG;EUM;GVG;EWM;GXG;EYQ;GZG;EaQ;GbG;EcO;GdG;EeE;GfU;CFC"}},"type":"js/module"}]}