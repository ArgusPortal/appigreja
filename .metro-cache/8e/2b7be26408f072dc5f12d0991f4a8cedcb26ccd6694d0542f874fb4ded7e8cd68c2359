{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":68,"column":40,"index":3319}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":46},"end":{"line":2,"column":57,"index":103}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"./AssetSourceResolver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":104},"end":{"line":3,"column":56,"index":160}}],"key":"1XREZLfiB40YsGJEOFyn6rrYKeQ="}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":45,"index":45}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY="}},{"name":"./PlatformUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":64,"index":225}},{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":64,"index":225}},{"start":{"line":4,"column":0,"index":161},"end":{"line":4,"column":64,"index":225}}],"key":"vk5TSZJTws6vRpll7frKCvmMWgw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.resolveUri = resolveUri;\n  exports.selectAssetSource = selectAssetSource;\n  var _reactNative = require(_dependencyMap[1], \"react-native\");\n  var _AssetSourceResolver = _interopRequireDefault(require(_dependencyMap[2], \"./AssetSourceResolver\"));\n  /**\n   * Selects the best file for the given asset (ex: choosing the best scale for images) and returns\n   * a { uri, hash } pair for the specific asset file.\n   *\n   * If the asset isn't an image with multiple scales, the first file is selected.\n   */\n  function selectAssetSource(meta) {\n    // This logic is based on that of AssetSourceResolver, with additional support for file hashes and\n    // explicitly provided URIs\n    var scale = _AssetSourceResolver.default.pickScale(meta.scales, _reactNative.PixelRatio.get());\n    var index = meta.scales.findIndex(s => s === scale);\n    var hash = meta.fileHashes ? meta.fileHashes[index] ?? meta.fileHashes[0] : meta.hash;\n    // Allow asset processors to directly provide the URL to load\n    var uri = meta.fileUris ? meta.fileUris[index] ?? meta.fileUris[0] : meta.uri;\n    if (uri) {\n      return {\n        uri: resolveUri(uri),\n        hash\n      };\n    }\n    var fileScale = scale === 1 ? '' : `@${scale}x`;\n    var fileExtension = meta.type ? `.${encodeURIComponent(meta.type)}` : '';\n    var suffix = `/${encodeURIComponent(meta.name)}${fileScale}${fileExtension}`;\n    var params = new URLSearchParams({\n      platform: require(_dependencyMap[3], \"expo-modules-core\").Platform.OS,\n      hash: meta.hash\n    });\n    // For assets with a specified absolute URL, we use the existing origin instead of prepending the\n    // development server or production CDN URL origin\n    if (/^https?:\\/\\//.test(meta.httpServerLocation)) {\n      var _uri = meta.httpServerLocation + suffix + '?' + params;\n      return {\n        uri: _uri,\n        hash\n      };\n    }\n    // For assets during development using manifest2, we use the development server's URL origin\n    var manifest2 = (0, require(_dependencyMap[4], \"./PlatformUtils\").getManifest2)();\n    var devServerUrl = manifest2?.extra?.expoGo?.developer ? 'http://' + manifest2.extra.expoGo.debuggerHost : null;\n    if (devServerUrl) {\n      var baseUrl = new URL(meta.httpServerLocation + suffix, devServerUrl);\n      baseUrl.searchParams.set('platform', require(_dependencyMap[3], \"expo-modules-core\").Platform.OS);\n      baseUrl.searchParams.set('hash', meta.hash);\n      return {\n        uri: baseUrl.href,\n        hash\n      };\n    }\n    // Temporary fallback for loading assets in Expo Go home\n    if (_reactNative.NativeModules.ExponentKernel) {\n      return {\n        uri: `https://classic-assets.eascdn.net/~assets/${encodeURIComponent(hash)}`,\n        hash\n      };\n    }\n    // In correctly configured apps, we arrive here if the asset is locally available on disk due to\n    // being managed by expo-updates, and `getLocalAssetUri(hash)` must return a local URI for this\n    // hash. Since the asset is local, we don't have a remote URL and specify an invalid URL (an empty\n    // string) as a placeholder.\n    return {\n      uri: '',\n      hash\n    };\n  }\n  /**\n   * Resolves the given URI to an absolute URI. If the given URI is already an absolute URI, it is\n   * simply returned. Otherwise, if it is a relative URI, it is resolved relative to the manifest's\n   * base URI.\n   */\n  function resolveUri(uri) {\n    // `manifestBaseUrl` is always an absolute URL or `null`.\n    return require(_dependencyMap[4], \"./PlatformUtils\").manifestBaseUrl ? new URL(uri, require(_dependencyMap[4], \"./PlatformUtils\").manifestBaseUrl).href : uri;\n  }\n});","lineCount":83,"map":[[8,2,2,0],[8,6,2,0,"_reactNative"],[8,18,2,0],[8,21,2,0,"require"],[8,28,2,0],[8,29,2,0,"_dependencyMap"],[8,43,2,0],[9,2,3,0],[9,6,3,0,"_AssetSourceResolver"],[9,26,3,0],[9,29,3,0,"_interopRequireDefault"],[9,51,3,0],[9,52,3,0,"require"],[9,59,3,0],[9,60,3,0,"_dependencyMap"],[9,74,3,0],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,0,8,0],[14,0,9,0],[15,0,10,0],[16,2,11,7],[16,11,11,16,"selectAssetSource"],[16,28,11,33,"selectAssetSource"],[16,29,11,34,"meta"],[16,33,11,38],[16,35,11,40],[17,4,12,4],[18,4,13,4],[19,4,14,4],[19,8,14,10,"scale"],[19,13,14,15],[19,16,14,18,"AssetSourceResolver"],[19,44,14,37],[19,45,14,38,"pickScale"],[19,54,14,47],[19,55,14,48,"meta"],[19,59,14,52],[19,60,14,53,"scales"],[19,66,14,59],[19,68,14,61,"PixelRatio"],[19,91,14,71],[19,92,14,72,"get"],[19,95,14,75],[19,96,14,76],[19,97,14,77],[19,98,14,78],[20,4,15,4],[20,8,15,10,"index"],[20,13,15,15],[20,16,15,18,"meta"],[20,20,15,22],[20,21,15,23,"scales"],[20,27,15,29],[20,28,15,30,"findIndex"],[20,37,15,39],[20,38,15,41,"s"],[20,39,15,42],[20,43,15,47,"s"],[20,44,15,48],[20,49,15,53,"scale"],[20,54,15,58],[20,55,15,59],[21,4,16,4],[21,8,16,10,"hash"],[21,12,16,14],[21,15,16,17,"meta"],[21,19,16,21],[21,20,16,22,"fileHashes"],[21,30,16,32],[21,33,16,36,"meta"],[21,37,16,40],[21,38,16,41,"fileHashes"],[21,48,16,51],[21,49,16,52,"index"],[21,54,16,57],[21,55,16,58],[21,59,16,62,"meta"],[21,63,16,66],[21,64,16,67,"fileHashes"],[21,74,16,77],[21,75,16,78],[21,76,16,79],[21,77,16,80],[21,80,16,84,"meta"],[21,84,16,88],[21,85,16,89,"hash"],[21,89,16,93],[22,4,17,4],[23,4,18,4],[23,8,18,10,"uri"],[23,11,18,13],[23,14,18,16,"meta"],[23,18,18,20],[23,19,18,21,"fileUris"],[23,27,18,29],[23,30,18,33,"meta"],[23,34,18,37],[23,35,18,38,"fileUris"],[23,43,18,46],[23,44,18,47,"index"],[23,49,18,52],[23,50,18,53],[23,54,18,57,"meta"],[23,58,18,61],[23,59,18,62,"fileUris"],[23,67,18,70],[23,68,18,71],[23,69,18,72],[23,70,18,73],[23,73,18,77,"meta"],[23,77,18,81],[23,78,18,82,"uri"],[23,81,18,85],[24,4,19,4],[24,8,19,8,"uri"],[24,11,19,11],[24,13,19,13],[25,6,20,8],[25,13,20,15],[26,8,20,17,"uri"],[26,11,20,20],[26,13,20,22,"resolveUri"],[26,23,20,32],[26,24,20,33,"uri"],[26,27,20,36],[26,28,20,37],[27,8,20,39,"hash"],[28,6,20,44],[28,7,20,45],[29,4,21,4],[30,4,22,4],[30,8,22,10,"fileScale"],[30,17,22,19],[30,20,22,22,"scale"],[30,25,22,27],[30,30,22,32],[30,31,22,33],[30,34,22,36],[30,36,22,38],[30,39,22,41],[30,43,22,45,"scale"],[30,48,22,50],[30,51,22,53],[31,4,23,4],[31,8,23,10,"fileExtension"],[31,21,23,23],[31,24,23,26,"meta"],[31,28,23,30],[31,29,23,31,"type"],[31,33,23,35],[31,36,23,38],[31,40,23,42,"encodeURIComponent"],[31,58,23,60],[31,59,23,61,"meta"],[31,63,23,65],[31,64,23,66,"type"],[31,68,23,70],[31,69,23,71],[31,71,23,73],[31,74,23,76],[31,76,23,78],[32,4,24,4],[32,8,24,10,"suffix"],[32,14,24,16],[32,17,24,19],[32,21,24,23,"encodeURIComponent"],[32,39,24,41],[32,40,24,42,"meta"],[32,44,24,46],[32,45,24,47,"name"],[32,49,24,51],[32,50,24,52],[32,53,24,55,"fileScale"],[32,62,24,64],[32,65,24,67,"fileExtension"],[32,78,24,80],[32,80,24,82],[33,4,25,4],[33,8,25,10,"params"],[33,14,25,16],[33,17,25,19],[33,21,25,23,"URLSearchParams"],[33,36,25,38],[33,37,25,39],[34,6,26,8,"platform"],[34,14,26,16],[34,16,26,18,"Platform"],[34,42,26,18],[34,43,26,18,"Platform"],[34,72,26,26],[34,73,26,27,"OS"],[34,75,26,29],[35,6,27,8,"hash"],[35,10,27,12],[35,12,27,14,"meta"],[35,16,27,18],[35,17,27,19,"hash"],[36,4,28,4],[36,5,28,5],[36,6,28,6],[37,4,29,4],[38,4,30,4],[39,4,31,4],[39,8,31,8],[39,22,31,22],[39,23,31,23,"test"],[39,27,31,27],[39,28,31,28,"meta"],[39,32,31,32],[39,33,31,33,"httpServerLocation"],[39,51,31,51],[39,52,31,52],[39,54,31,54],[40,6,32,8],[40,10,32,14,"uri"],[40,14,32,17],[40,17,32,20,"meta"],[40,21,32,24],[40,22,32,25,"httpServerLocation"],[40,40,32,43],[40,43,32,46,"suffix"],[40,49,32,52],[40,52,32,55],[40,55,32,58],[40,58,32,61,"params"],[40,64,32,67],[41,6,33,8],[41,13,33,15],[42,8,33,17,"uri"],[42,11,33,20],[42,13,33,17,"uri"],[42,17,33,20],[43,8,33,22,"hash"],[44,6,33,27],[44,7,33,28],[45,4,34,4],[46,4,35,4],[47,4,36,4],[47,8,36,10,"manifest2"],[47,17,36,19],[47,20,36,22],[47,24,36,22,"getManifest2"],[47,50,36,22],[47,51,36,22,"getManifest2"],[47,82,36,34],[47,84,36,35],[47,85,36,36],[48,4,37,4],[48,8,37,10,"devServerUrl"],[48,20,37,22],[48,23,37,25,"manifest2"],[48,32,37,34],[48,34,37,36,"extra"],[48,39,37,41],[48,41,37,43,"expoGo"],[48,47,37,49],[48,49,37,51,"developer"],[48,58,37,60],[48,61,38,10],[48,70,38,19],[48,73,38,22,"manifest2"],[48,82,38,31],[48,83,38,32,"extra"],[48,88,38,37],[48,89,38,38,"expoGo"],[48,95,38,44],[48,96,38,45,"debuggerHost"],[48,108,38,57],[48,111,39,10],[48,115,39,14],[49,4,40,4],[49,8,40,8,"devServerUrl"],[49,20,40,20],[49,22,40,22],[50,6,41,8],[50,10,41,14,"baseUrl"],[50,17,41,21],[50,20,41,24],[50,24,41,28,"URL"],[50,27,41,31],[50,28,41,32,"meta"],[50,32,41,36],[50,33,41,37,"httpServerLocation"],[50,51,41,55],[50,54,41,58,"suffix"],[50,60,41,64],[50,62,41,66,"devServerUrl"],[50,74,41,78],[50,75,41,79],[51,6,42,8,"baseUrl"],[51,13,42,15],[51,14,42,16,"searchParams"],[51,26,42,28],[51,27,42,29,"set"],[51,30,42,32],[51,31,42,33],[51,41,42,43],[51,43,42,45,"Platform"],[51,69,42,45],[51,70,42,45,"Platform"],[51,99,42,53],[51,100,42,54,"OS"],[51,102,42,56],[51,103,42,57],[52,6,43,8,"baseUrl"],[52,13,43,15],[52,14,43,16,"searchParams"],[52,26,43,28],[52,27,43,29,"set"],[52,30,43,32],[52,31,43,33],[52,37,43,39],[52,39,43,41,"meta"],[52,43,43,45],[52,44,43,46,"hash"],[52,48,43,50],[52,49,43,51],[53,6,44,8],[53,13,44,15],[54,8,45,12,"uri"],[54,11,45,15],[54,13,45,17,"baseUrl"],[54,20,45,24],[54,21,45,25,"href"],[54,25,45,29],[55,8,46,12,"hash"],[56,6,47,8],[56,7,47,9],[57,4,48,4],[58,4,49,4],[59,4,50,4],[59,8,50,8,"NativeModules"],[59,34,50,21],[59,35,50,22,"ExponentKernel"],[59,49,50,36],[59,51,50,38],[60,6,51,8],[60,13,51,15],[61,8,51,17,"uri"],[61,11,51,20],[61,13,51,22],[61,58,51,67,"encodeURIComponent"],[61,76,51,85],[61,77,51,86,"hash"],[61,81,51,90],[61,82,51,91],[61,84,51,93],[62,8,51,95,"hash"],[63,6,51,100],[63,7,51,101],[64,4,52,4],[65,4,53,4],[66,4,54,4],[67,4,55,4],[68,4,56,4],[69,4,57,4],[69,11,57,11],[70,6,57,13,"uri"],[70,9,57,16],[70,11,57,18],[70,13,57,20],[71,6,57,22,"hash"],[72,4,57,27],[72,5,57,28],[73,2,58,0],[74,2,59,0],[75,0,60,0],[76,0,61,0],[77,0,62,0],[78,0,63,0],[79,2,64,7],[79,11,64,16,"resolveUri"],[79,21,64,26,"resolveUri"],[79,22,64,27,"uri"],[79,25,64,30],[79,27,64,32],[80,4,65,4],[81,4,66,4],[81,11,66,11,"manifestBaseUrl"],[81,37,66,11],[81,38,66,11,"manifestBaseUrl"],[81,72,66,26],[81,75,66,29],[81,79,66,33,"URL"],[81,82,66,36],[81,83,66,37,"uri"],[81,86,66,40],[81,88,66,42,"manifestBaseUrl"],[81,114,66,42],[81,115,66,42,"manifestBaseUrl"],[81,149,66,57],[81,150,66,58],[81,151,66,59,"href"],[81,155,66,63],[81,158,66,66,"uri"],[81,161,66,69],[82,2,67,0],[83,0,67,1],[83,3]],"functionMap":{"names":["<global>","selectAssetSource","meta.scales.findIndex$argument_0","resolveUri"],"mappings":"AAA;OCU;wCCI,kBD;CD2C;OGM;CHG"}},"type":"js/module"}]}