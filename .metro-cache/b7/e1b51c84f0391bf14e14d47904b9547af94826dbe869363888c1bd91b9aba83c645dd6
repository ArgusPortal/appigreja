{"dependencies":[{"name":"./PlatformUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":33},"end":{"line":2,"column":59,"index":92}}],"key":"vk5TSZJTws6vRpll7frKCvmMWgw="}},{"name":"./resolveAssetSource","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":93},"end":{"line":3,"column":66,"index":159}}],"key":"qiXdfzfF08Pne6HL41q9H4FDwsA="}},{"name":"./Asset","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":32,"index":32}}],"key":"TwnMoPBJu+ST6a0NSE4l343cBbk="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Override React Native's asset resolution for `Image` components in contexts where it matters\n  if (require(_dependencyMap[0], \"./PlatformUtils\").IS_ENV_WITH_LOCAL_ASSETS) {\n    (0, require(_dependencyMap[1], \"./resolveAssetSource\").setCustomSourceTransformer)(resolver => {\n      try {\n        // Bundler is using the hashAssetFiles plugin if and only if the fileHashes property exists\n        if (resolver.asset.fileHashes) {\n          var asset = require(_dependencyMap[2], \"./Asset\").Asset.fromMetadata(resolver.asset);\n          return resolver.fromSource(asset.downloaded ? asset.localUri : asset.uri);\n        } else {\n          return resolver.defaultAsset();\n        }\n      } catch {\n        return resolver.defaultAsset();\n      }\n    });\n  }\n});","lineCount":18,"map":[[2,2,4,0],[3,2,5,0],[3,6,5,4,"IS_ENV_WITH_LOCAL_ASSETS"],[3,32,5,4],[3,33,5,4,"IS_ENV_WITH_LOCAL_ASSETS"],[3,76,5,28],[3,78,5,30],[4,4,6,4],[4,8,6,4,"setCustomSourceTransformer"],[4,34,6,4],[4,35,6,4,"setCustomSourceTransformer"],[4,85,6,30],[4,87,6,32,"resolver"],[4,95,6,40],[4,99,6,45],[5,6,7,8],[5,10,7,12],[6,8,8,12],[7,8,9,12],[7,12,9,16,"resolver"],[7,20,9,24],[7,21,9,25,"asset"],[7,26,9,30],[7,27,9,31,"fileHashes"],[7,37,9,41],[7,39,9,43],[8,10,10,16],[8,14,10,22,"asset"],[8,19,10,27],[8,22,10,30,"Asset"],[8,48,10,30],[8,49,10,30,"Asset"],[8,65,10,35],[8,66,10,36,"fromMetadata"],[8,78,10,48],[8,79,10,49,"resolver"],[8,87,10,57],[8,88,10,58,"asset"],[8,93,10,63],[8,94,10,64],[9,10,11,16],[9,17,11,23,"resolver"],[9,25,11,31],[9,26,11,32,"fromSource"],[9,36,11,42],[9,37,11,43,"asset"],[9,42,11,48],[9,43,11,49,"downloaded"],[9,53,11,59],[9,56,11,62,"asset"],[9,61,11,67],[9,62,11,68,"localUri"],[9,70,11,76],[9,73,11,79,"asset"],[9,78,11,84],[9,79,11,85,"uri"],[9,82,11,88],[9,83,11,89],[10,8,12,12],[10,9,12,13],[10,15,13,17],[11,10,14,16],[11,17,14,23,"resolver"],[11,25,14,31],[11,26,14,32,"defaultAsset"],[11,38,14,44],[11,39,14,45],[11,40,14,46],[12,8,15,12],[13,6,16,8],[13,7,16,9],[13,8,17,8],[13,14,17,14],[14,8,18,12],[14,15,18,19,"resolver"],[14,23,18,27],[14,24,18,28,"defaultAsset"],[14,36,18,40],[14,37,18,41],[14,38,18,42],[15,6,19,8],[16,4,20,4],[16,5,20,5],[16,6,20,6],[17,2,21,0],[18,0,21,1],[18,3]],"functionMap":{"names":["<global>","setCustomSourceTransformer$argument_0"],"mappings":"AAA;+BCK;KDc"}},"type":"js/module"}]}