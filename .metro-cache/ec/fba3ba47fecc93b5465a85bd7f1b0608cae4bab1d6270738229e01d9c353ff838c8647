{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":228,"column":44,"index":8737}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"query-string","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":42,"index":167},"end":{"line":7,"column":65,"index":190}}],"key":"CQ4f6+ZdkmuRCkqw6zIINc/cka0="}},{"name":"./validatePathConfig.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":26,"index":275},"end":{"line":9,"column":60,"index":309}}],"key":"XXyPbgw7BQ4s5X/Hs9Zl3De2oag="}},{"name":"./getPatternParts.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":23,"index":216},"end":{"line":8,"column":54,"index":247}},{"start":{"line":8,"column":23,"index":216},"end":{"line":8,"column":54,"index":247}},{"start":{"line":8,"column":23,"index":216},"end":{"line":8,"column":54,"index":247}}],"key":"x373vX1U7UCQUMl5g8AN3pEqZu0="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getPathFromState = getPathFromState;\n  var queryString = _interopRequireWildcard(require(_dependencyMap[1], \"query-string\"));\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(),\n      t = new WeakMap();\n    return (_getRequireWildcardCache = function (e) {\n      return e ? t : r;\n    })(e);\n  }\n  function _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n      default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n      },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n      var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n      i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n  }\n  var getActiveRoute = state => {\n    var route = typeof state.index === 'number' ? state.routes[state.index] : state.routes[state.routes.length - 1];\n    if (route.state) {\n      return getActiveRoute(route.state);\n    }\n    return route;\n  };\n  var cachedNormalizedConfigs = new WeakMap();\n  var getNormalizedConfigs = options => {\n    if (!options?.screens) return {};\n    var cached = cachedNormalizedConfigs.get(options?.screens);\n    if (cached) return cached;\n    var normalizedConfigs = createNormalizedConfigs(options.screens);\n    cachedNormalizedConfigs.set(options.screens, normalizedConfigs);\n    return normalizedConfigs;\n  };\n\n  /**\n   * Utility to serialize a navigation state object to a path string.\n   *\n   * @example\n   * ```js\n   * getPathFromState(\n   *   {\n   *     routes: [\n   *       {\n   *         name: 'Chat',\n   *         params: { author: 'Jane', id: 42 },\n   *       },\n   *     ],\n   *   },\n   *   {\n   *     screens: {\n   *       Chat: {\n   *         path: 'chat/:author/:id',\n   *         stringify: { author: author => author.toLowerCase() }\n   *       }\n   *     }\n   *   }\n   * )\n   * ```\n   *\n   * @param state Navigation state to serialize.\n   * @param options Extra options to fine-tune how to serialize the path.\n   * @returns Path representing the state, e.g. /foo/bar?count=42.\n   */\n  function getPathFromState(state, options) {\n    if (state == null) {\n      throw Error(`Got '${String(state)}' for the navigation state. You must pass a valid state object.`);\n    }\n    if (options) {\n      (0, require(_dependencyMap[2], \"./validatePathConfig.js\").validatePathConfig)(options);\n    }\n    var configs = getNormalizedConfigs(options);\n    var path = '/';\n    var current = state;\n    var allParams = {};\n    var _loop = function () {\n      var index = typeof current.index === 'number' ? current.index : 0;\n      var route = current.routes[index];\n      var parts;\n      var focusedParams;\n      var currentOptions = configs;\n      var focusedRoute = getActiveRoute(state);\n\n      // Keep all the route names that appeared during going deeper in config in case the pattern is resolved to undefined\n      var nestedRouteNames = [];\n      var hasNext = true;\n      var _loop2 = function () {\n        parts = currentOptions[route.name].parts;\n        nestedRouteNames.push(route.name);\n        if (route.params) {\n          var stringify = currentOptions[route.name]?.stringify;\n          var currentParams = Object.fromEntries(Object.entries(route.params).map(_ref4 => {\n            var _ref5 = _slicedToArray(_ref4, 2),\n              key = _ref5[0],\n              value = _ref5[1];\n            return [key, stringify?.[key] ? stringify[key](value) : String(value)];\n          }));\n          if (parts?.length) {\n            Object.assign(allParams, currentParams);\n          }\n          if (focusedRoute === route) {\n            // If this is the focused route, keep the params for later use\n            // We save it here since it's been stringified already\n            focusedParams = {\n              ...currentParams\n            };\n            parts\n            // eslint-disable-next-line no-loop-func\n            ?.forEach(_ref6 => {\n              var param = _ref6.param;\n              if (param) {\n                // Remove the params present in the pattern since we'll only use the rest for query string\n                if (focusedParams) {\n                  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                  delete focusedParams[param];\n                }\n              }\n            });\n          }\n        }\n\n        // If there is no `screens` property or no nested state, we return pattern\n        if (!currentOptions[route.name].screens || route.state === undefined) {\n          hasNext = false;\n        } else {\n          index = typeof route.state.index === 'number' ? route.state.index : route.state.routes.length - 1;\n          var nextRoute = route.state.routes[index];\n          var nestedConfig = currentOptions[route.name].screens;\n\n          // if there is config for next route name, we go deeper\n          if (nestedConfig && nextRoute.name in nestedConfig) {\n            route = nextRoute;\n            currentOptions = nestedConfig;\n          } else {\n            // If not, there is no sense in going deeper in config\n            hasNext = false;\n          }\n        }\n      };\n      while (route.name in currentOptions && hasNext) {\n        _loop2();\n      }\n      if (currentOptions[route.name] !== undefined) {\n        path += parts?.map(_ref => {\n          var segment = _ref.segment,\n            param = _ref.param,\n            optional = _ref.optional;\n          // We don't know what to show for wildcard patterns\n          // Showing the route name seems ok, though whatever we show here will be incorrect\n          // Since the page doesn't actually exist\n          if (segment === '*') {\n            return route.name;\n          }\n\n          // If the path has a pattern for a param, put the param in the path\n          if (param) {\n            var value = allParams[param];\n            if (value === undefined && optional) {\n              // Optional params without value assigned in route.params should be ignored\n              return '';\n            }\n\n            // Valid characters according to\n            // https://datatracker.ietf.org/doc/html/rfc3986#section-3.3 (see pchar definition)\n            return String(value).replace(/[^A-Za-z0-9\\-._~!$&'()*+,;=:@]/g, char => encodeURIComponent(char));\n          }\n          return encodeURIComponent(segment);\n        }).join('/');\n      } else {\n        path += encodeURIComponent(route.name);\n      }\n      if (!focusedParams && focusedRoute.params) {\n        focusedParams = Object.fromEntries(Object.entries(focusedRoute.params).map(_ref2 => {\n          var _ref3 = _slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            value = _ref3[1];\n          return [key, String(value)];\n        }));\n      }\n      if (route.state) {\n        path += '/';\n      } else if (focusedParams) {\n        for (var param in focusedParams) {\n          if (focusedParams[param] === 'undefined') {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete focusedParams[param];\n          }\n        }\n        var query = queryString.stringify(focusedParams, {\n          sort: false\n        });\n        if (query) {\n          path += `?${query}`;\n        }\n      }\n      current = route.state;\n    };\n    while (current) {\n      _loop();\n    }\n\n    // Include the root path if specified\n    if (options?.path) {\n      path = `${options.path}/${path}`;\n    }\n\n    // Remove multiple as well as trailing slashes\n    path = path.replace(/\\/+/g, '/');\n    path = path.length > 1 ? path.replace(/\\/$/, '') : path;\n\n    // If path doesn't start with a slash, add it\n    // This makes sure that history.pushState will update the path correctly instead of appending\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    return path;\n  }\n  var createConfigItem = (config, parentParts) => {\n    if (typeof config === 'string') {\n      // If a string is specified as the value of the key(e.g. Foo: '/path'), use it as the pattern\n      var _parts = (0, require(_dependencyMap[3], \"./getPatternParts.js\").getPatternParts)(config);\n      if (parentParts) {\n        return {\n          parts: [...parentParts, ..._parts]\n        };\n      }\n      return {\n        parts: _parts\n      };\n    }\n    if (config.exact && config.path === undefined) {\n      throw new Error(\"A 'path' needs to be specified when specifying 'exact: true'. If you don't want this screen in the URL, specify it as empty string, e.g. `path: ''`.\");\n    }\n\n    // If an object is specified as the value (e.g. Foo: { ... }),\n    // It can have `path` property and `screens` prop which has nested configs\n    var parts = config.exact !== true ? [...(parentParts || []), ...(config.path ? (0, require(_dependencyMap[3], \"./getPatternParts.js\").getPatternParts)(config.path) : [])] : config.path ? (0, require(_dependencyMap[3], \"./getPatternParts.js\").getPatternParts)(config.path) : undefined;\n    var screens = config.screens ? createNormalizedConfigs(config.screens, parts) : undefined;\n    return {\n      parts,\n      stringify: config.stringify,\n      screens\n    };\n  };\n  var createNormalizedConfigs = (options, parts) => Object.fromEntries(Object.entries(options).map(_ref7 => {\n    var _ref8 = _slicedToArray(_ref7, 2),\n      name = _ref8[0],\n      c = _ref8[1];\n    var result = createConfigItem(c, parts);\n    return [name, result];\n  }));\n});","lineCount":268,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,4,2,"value"],[6,9,4,7],[6,11,4,9],[7,2,5,0],[7,3,5,1],[7,4,5,2],[8,2,6,0,"exports"],[8,9,6,7],[8,10,6,8,"getPathFromState"],[8,26,6,24],[8,29,6,27,"getPathFromState"],[8,45,6,43],[9,2,7,0],[9,6,7,4,"queryString"],[9,17,7,15],[9,20,7,18,"_interopRequireWildcard"],[9,43,7,41],[9,44,7,42,"require"],[9,51,7,49],[9,52,7,49,"_dependencyMap"],[9,66,7,49],[9,85,7,64],[9,86,7,65],[9,87,7,66],[10,2,10,0],[10,11,10,9,"_getRequireWildcardCache"],[10,35,10,33,"_getRequireWildcardCache"],[10,36,10,34,"e"],[10,37,10,35],[10,39,10,37],[11,4,10,39],[11,8,10,43],[11,18,10,53],[11,22,10,57],[11,29,10,64,"WeakMap"],[11,36,10,71],[11,38,10,73],[11,45,10,80],[11,49,10,84],[12,4,10,86],[12,8,10,90,"r"],[12,9,10,91],[12,12,10,94],[12,16,10,98,"WeakMap"],[12,23,10,105],[12,24,10,106],[12,25,10,107],[13,6,10,109,"t"],[13,7,10,110],[13,10,10,113],[13,14,10,117,"WeakMap"],[13,21,10,124],[13,22,10,125],[13,23,10,126],[14,4,10,128],[14,11,10,135],[14,12,10,136,"_getRequireWildcardCache"],[14,36,10,160],[14,39,10,163],[14,48,10,163,"_getRequireWildcardCache"],[14,49,10,173,"e"],[14,50,10,174],[14,52,10,176],[15,6,10,178],[15,13,10,185,"e"],[15,14,10,186],[15,17,10,189,"t"],[15,18,10,190],[15,21,10,193,"r"],[15,22,10,194],[16,4,10,196],[16,5,10,197],[16,7,10,199,"e"],[16,8,10,200],[16,9,10,201],[17,2,10,203],[18,2,11,0],[18,11,11,9,"_interopRequireWildcard"],[18,34,11,32,"_interopRequireWildcard"],[18,35,11,33,"e"],[18,36,11,34],[18,38,11,36,"r"],[18,39,11,37],[18,41,11,39],[19,4,11,41],[19,8,11,45],[19,9,11,46,"r"],[19,10,11,47],[19,14,11,51,"e"],[19,15,11,52],[19,19,11,56,"e"],[19,20,11,57],[19,21,11,58,"__esModule"],[19,31,11,68],[19,33,11,70],[19,40,11,77,"e"],[19,41,11,78],[20,4,11,80],[20,8,11,84],[20,12,11,88],[20,17,11,93,"e"],[20,18,11,94],[20,22,11,98],[20,30,11,106],[20,34,11,110],[20,41,11,117,"e"],[20,42,11,118],[20,46,11,122],[20,56,11,132],[20,60,11,136],[20,67,11,143,"e"],[20,68,11,144],[20,70,11,146],[20,77,11,153],[21,6,11,155,"default"],[21,13,11,162],[21,15,11,164,"e"],[22,4,11,166],[22,5,11,167],[23,4,11,169],[23,8,11,173,"t"],[23,9,11,174],[23,12,11,177,"_getRequireWildcardCache"],[23,36,11,201],[23,37,11,202,"r"],[23,38,11,203],[23,39,11,204],[24,4,11,206],[24,8,11,210,"t"],[24,9,11,211],[24,13,11,215,"t"],[24,14,11,216],[24,15,11,217,"has"],[24,18,11,220],[24,19,11,221,"e"],[24,20,11,222],[24,21,11,223],[24,23,11,225],[24,30,11,232,"t"],[24,31,11,233],[24,32,11,234,"get"],[24,35,11,237],[24,36,11,238,"e"],[24,37,11,239],[24,38,11,240],[25,4,11,242],[25,8,11,246,"n"],[25,9,11,247],[25,12,11,250],[26,8,11,252,"__proto__"],[26,17,11,261],[26,19,11,263],[27,6,11,268],[27,7,11,269],[28,6,11,271,"a"],[28,7,11,272],[28,10,11,275,"Object"],[28,16,11,281],[28,17,11,282,"defineProperty"],[28,31,11,296],[28,35,11,300,"Object"],[28,41,11,306],[28,42,11,307,"getOwnPropertyDescriptor"],[28,66,11,331],[29,4,11,333],[29,9,11,338],[29,13,11,342,"u"],[29,14,11,343],[29,18,11,347,"e"],[29,19,11,348],[29,21,11,350],[29,25,11,354],[29,34,11,363],[29,39,11,368,"u"],[29,40,11,369],[29,44,11,373],[29,45,11,374],[29,46,11,375],[29,47,11,376,"hasOwnProperty"],[29,61,11,390],[29,62,11,391,"call"],[29,66,11,395],[29,67,11,396,"e"],[29,68,11,397],[29,70,11,399,"u"],[29,71,11,400],[29,72,11,401],[29,74,11,403],[30,6,11,405],[30,10,11,409,"i"],[30,11,11,410],[30,14,11,413,"a"],[30,15,11,414],[30,18,11,417,"Object"],[30,24,11,423],[30,25,11,424,"getOwnPropertyDescriptor"],[30,49,11,448],[30,50,11,449,"e"],[30,51,11,450],[30,53,11,452,"u"],[30,54,11,453],[30,55,11,454],[30,58,11,457],[30,62,11,461],[31,6,11,463,"i"],[31,7,11,464],[31,12,11,469,"i"],[31,13,11,470],[31,14,11,471,"get"],[31,17,11,474],[31,21,11,478,"i"],[31,22,11,479],[31,23,11,480,"set"],[31,26,11,483],[31,27,11,484],[31,30,11,487,"Object"],[31,36,11,493],[31,37,11,494,"defineProperty"],[31,51,11,508],[31,52,11,509,"n"],[31,53,11,510],[31,55,11,512,"u"],[31,56,11,513],[31,58,11,515,"i"],[31,59,11,516],[31,60,11,517],[31,63,11,520,"n"],[31,64,11,521],[31,65,11,522,"u"],[31,66,11,523],[31,67,11,524],[31,70,11,527,"e"],[31,71,11,528],[31,72,11,529,"u"],[31,73,11,530],[31,74,11,531],[32,4,11,533],[33,4,11,535],[33,11,11,542,"n"],[33,12,11,543],[33,13,11,544,"default"],[33,20,11,551],[33,23,11,554,"e"],[33,24,11,555],[33,26,11,557,"t"],[33,27,11,558],[33,31,11,562,"t"],[33,32,11,563],[33,33,11,564,"set"],[33,36,11,567],[33,37,11,568,"e"],[33,38,11,569],[33,40,11,571,"n"],[33,41,11,572],[33,42,11,573],[33,44,11,575,"n"],[33,45,11,576],[34,2,11,578],[35,2,12,0],[35,6,12,6,"getActiveRoute"],[35,20,12,20],[35,23,12,23,"state"],[35,28,12,28],[35,32,12,32],[36,4,13,2],[36,8,13,8,"route"],[36,13,13,13],[36,16,13,16],[36,23,13,23,"state"],[36,28,13,28],[36,29,13,29,"index"],[36,34,13,34],[36,39,13,39],[36,47,13,47],[36,50,13,50,"state"],[36,55,13,55],[36,56,13,56,"routes"],[36,62,13,62],[36,63,13,63,"state"],[36,68,13,68],[36,69,13,69,"index"],[36,74,13,74],[36,75,13,75],[36,78,13,78,"state"],[36,83,13,83],[36,84,13,84,"routes"],[36,90,13,90],[36,91,13,91,"state"],[36,96,13,96],[36,97,13,97,"routes"],[36,103,13,103],[36,104,13,104,"length"],[36,110,13,110],[36,113,13,113],[36,114,13,114],[36,115,13,115],[37,4,14,2],[37,8,14,6,"route"],[37,13,14,11],[37,14,14,12,"state"],[37,19,14,17],[37,21,14,19],[38,6,15,4],[38,13,15,11,"getActiveRoute"],[38,27,15,25],[38,28,15,26,"route"],[38,33,15,31],[38,34,15,32,"state"],[38,39,15,37],[38,40,15,38],[39,4,16,2],[40,4,17,2],[40,11,17,9,"route"],[40,16,17,14],[41,2,18,0],[41,3,18,1],[42,2,19,0],[42,6,19,6,"cachedNormalizedConfigs"],[42,29,19,29],[42,32,19,32],[42,36,19,36,"WeakMap"],[42,43,19,43],[42,44,19,44],[42,45,19,45],[43,2,20,0],[43,6,20,6,"getNormalizedConfigs"],[43,26,20,26],[43,29,20,29,"options"],[43,36,20,36],[43,40,20,40],[44,4,21,2],[44,8,21,6],[44,9,21,7,"options"],[44,16,21,14],[44,18,21,16,"screens"],[44,25,21,23],[44,27,21,25],[44,34,21,32],[44,35,21,33],[44,36,21,34],[45,4,22,2],[45,8,22,8,"cached"],[45,14,22,14],[45,17,22,17,"cachedNormalizedConfigs"],[45,40,22,40],[45,41,22,41,"get"],[45,44,22,44],[45,45,22,45,"options"],[45,52,22,52],[45,54,22,54,"screens"],[45,61,22,61],[45,62,22,62],[46,4,23,2],[46,8,23,6,"cached"],[46,14,23,12],[46,16,23,14],[46,23,23,21,"cached"],[46,29,23,27],[47,4,24,2],[47,8,24,8,"normalizedConfigs"],[47,25,24,25],[47,28,24,28,"createNormalizedConfigs"],[47,51,24,51],[47,52,24,52,"options"],[47,59,24,59],[47,60,24,60,"screens"],[47,67,24,67],[47,68,24,68],[48,4,25,2,"cachedNormalizedConfigs"],[48,27,25,25],[48,28,25,26,"set"],[48,31,25,29],[48,32,25,30,"options"],[48,39,25,37],[48,40,25,38,"screens"],[48,47,25,45],[48,49,25,47,"normalizedConfigs"],[48,66,25,64],[48,67,25,65],[49,4,26,2],[49,11,26,9,"normalizedConfigs"],[49,28,26,26],[50,2,27,0],[50,3,27,1],[52,2,29,0],[53,0,30,0],[54,0,31,0],[55,0,32,0],[56,0,33,0],[57,0,34,0],[58,0,35,0],[59,0,36,0],[60,0,37,0],[61,0,38,0],[62,0,39,0],[63,0,40,0],[64,0,41,0],[65,0,42,0],[66,0,43,0],[67,0,44,0],[68,0,45,0],[69,0,46,0],[70,0,47,0],[71,0,48,0],[72,0,49,0],[73,0,50,0],[74,0,51,0],[75,0,52,0],[76,0,53,0],[77,0,54,0],[78,0,55,0],[79,0,56,0],[80,0,57,0],[81,2,58,0],[81,11,58,9,"getPathFromState"],[81,27,58,25,"getPathFromState"],[81,28,58,26,"state"],[81,33,58,31],[81,35,58,33,"options"],[81,42,58,40],[81,44,58,42],[82,4,59,2],[82,8,59,6,"state"],[82,13,59,11],[82,17,59,15],[82,21,59,19],[82,23,59,21],[83,6,60,4],[83,12,60,10,"Error"],[83,17,60,15],[83,18,60,16],[83,26,60,24,"String"],[83,32,60,30],[83,33,60,31,"state"],[83,38,60,36],[83,39,60,37],[83,104,60,102],[83,105,60,103],[84,4,61,2],[85,4,62,2],[85,8,62,6,"options"],[85,15,62,13],[85,17,62,15],[86,6,63,4],[86,7,63,5],[86,8,63,6],[86,10,63,8,"require"],[86,17,63,8],[86,18,63,8,"_dependencyMap"],[86,32,63,8],[86,64,63,28,"validatePathConfig"],[86,82,63,46],[86,84,63,48,"options"],[86,91,63,55],[86,92,63,56],[87,4,64,2],[88,4,65,2],[88,8,65,8,"configs"],[88,15,65,15],[88,18,65,18,"getNormalizedConfigs"],[88,38,65,38],[88,39,65,39,"options"],[88,46,65,46],[88,47,65,47],[89,4,66,2],[89,8,66,6,"path"],[89,12,66,10],[89,15,66,13],[89,18,66,16],[90,4,67,2],[90,8,67,6,"current"],[90,15,67,13],[90,18,67,16,"state"],[90,23,67,21],[91,4,68,2],[91,8,68,8,"allParams"],[91,17,68,17],[91,20,68,20],[91,21,68,21],[91,22,68,22],[92,4,68,23],[92,8,68,23,"_loop"],[92,13,68,23],[92,25,68,23,"_loop"],[92,26,68,23],[92,28,69,18],[93,6,70,4],[93,10,70,8,"index"],[93,15,70,13],[93,18,70,16],[93,25,70,23,"current"],[93,32,70,30],[93,33,70,31,"index"],[93,38,70,36],[93,43,70,41],[93,51,70,49],[93,54,70,52,"current"],[93,61,70,59],[93,62,70,60,"index"],[93,67,70,65],[93,70,70,68],[93,71,70,69],[94,6,71,4],[94,10,71,8,"route"],[94,15,71,13],[94,18,71,16,"current"],[94,25,71,23],[94,26,71,24,"routes"],[94,32,71,30],[94,33,71,31,"index"],[94,38,71,36],[94,39,71,37],[95,6,72,4],[95,10,72,8,"parts"],[95,15,72,13],[96,6,73,4],[96,10,73,8,"focusedParams"],[96,23,73,21],[97,6,74,4],[97,10,74,8,"currentOptions"],[97,24,74,22],[97,27,74,25,"configs"],[97,34,74,32],[98,6,75,4],[98,10,75,10,"focusedRoute"],[98,22,75,22],[98,25,75,25,"getActiveRoute"],[98,39,75,39],[98,40,75,40,"state"],[98,45,75,45],[98,46,75,46],[100,6,77,4],[101,6,78,4],[101,10,78,10,"nestedRouteNames"],[101,26,78,26],[101,29,78,29],[101,31,78,31],[102,6,79,4],[102,10,79,8,"hasNext"],[102,17,79,15],[102,20,79,18],[102,24,79,22],[103,6,79,23],[103,10,79,23,"_loop2"],[103,16,79,23],[103,28,79,23,"_loop2"],[103,29,79,23],[103,31,80,52],[104,8,81,6,"parts"],[104,13,81,11],[104,16,81,14,"currentOptions"],[104,30,81,28],[104,31,81,29,"route"],[104,36,81,34],[104,37,81,35,"name"],[104,41,81,39],[104,42,81,40],[104,43,81,41,"parts"],[104,48,81,46],[105,8,82,6,"nestedRouteNames"],[105,24,82,22],[105,25,82,23,"push"],[105,29,82,27],[105,30,82,28,"route"],[105,35,82,33],[105,36,82,34,"name"],[105,40,82,38],[105,41,82,39],[106,8,83,6],[106,12,83,10,"route"],[106,17,83,15],[106,18,83,16,"params"],[106,24,83,22],[106,26,83,24],[107,10,84,8],[107,14,84,14,"stringify"],[107,23,84,23],[107,26,84,26,"currentOptions"],[107,40,84,40],[107,41,84,41,"route"],[107,46,84,46],[107,47,84,47,"name"],[107,51,84,51],[107,52,84,52],[107,54,84,54,"stringify"],[107,63,84,63],[108,10,85,8],[108,14,85,14,"currentParams"],[108,27,85,27],[108,30,85,30,"Object"],[108,36,85,36],[108,37,85,37,"fromEntries"],[108,48,85,48],[108,49,85,49,"Object"],[108,55,85,55],[108,56,85,56,"entries"],[108,63,85,63],[108,64,85,64,"route"],[108,69,85,69],[108,70,85,70,"params"],[108,76,85,76],[108,77,85,77],[108,78,85,78,"map"],[108,81,85,81],[108,82,85,82,"_ref4"],[108,87,85,82],[109,12,85,82],[109,16,85,82,"_ref5"],[109,21,85,82],[109,24,85,82,"_slicedToArray"],[109,38,85,82],[109,39,85,82,"_ref4"],[109,44,85,82],[110,14,85,84,"key"],[110,17,85,87],[110,20,85,87,"_ref5"],[110,25,85,87],[111,14,85,89,"value"],[111,19,85,94],[111,22,85,94,"_ref5"],[111,27,85,94],[112,12,85,94],[112,19,85,100],[112,20,85,101,"key"],[112,23,85,104],[112,25,85,106,"stringify"],[112,34,85,115],[112,37,85,118,"key"],[112,40,85,121],[112,41,85,122],[112,44,85,125,"stringify"],[112,53,85,134],[112,54,85,135,"key"],[112,57,85,138],[112,58,85,139],[112,59,85,140,"value"],[112,64,85,145],[112,65,85,146],[112,68,85,149,"String"],[112,74,85,155],[112,75,85,156,"value"],[112,80,85,161],[112,81,85,162],[112,82,85,163],[113,10,85,163],[113,12,85,164],[113,13,85,165],[114,10,86,8],[114,14,86,12,"parts"],[114,19,86,17],[114,21,86,19,"length"],[114,27,86,25],[114,29,86,27],[115,12,87,10,"Object"],[115,18,87,16],[115,19,87,17,"assign"],[115,25,87,23],[115,26,87,24,"allParams"],[115,35,87,33],[115,37,87,35,"currentParams"],[115,50,87,48],[115,51,87,49],[116,10,88,8],[117,10,89,8],[117,14,89,12,"focusedRoute"],[117,26,89,24],[117,31,89,29,"route"],[117,36,89,34],[117,38,89,36],[118,12,90,10],[119,12,91,10],[120,12,92,10,"focusedParams"],[120,25,92,23],[120,28,92,26],[121,14,93,12],[121,17,93,15,"currentParams"],[122,12,94,10],[122,13,94,11],[123,12,95,10,"parts"],[124,12,96,10],[125,12,96,10],[125,14,97,12,"forEach"],[125,21,97,19],[125,22,97,20,"_ref6"],[125,27,97,20],[125,31,99,16],[126,14,99,16],[126,18,98,12,"param"],[126,23,98,17],[126,26,98,17,"_ref6"],[126,31,98,17],[126,32,98,12,"param"],[126,37,98,17],[127,14,100,12],[127,18,100,16,"param"],[127,23,100,21],[127,25,100,23],[128,16,101,14],[129,16,102,14],[129,20,102,18,"focusedParams"],[129,33,102,31],[129,35,102,33],[130,18,103,16],[131,18,104,16],[131,25,104,23,"focusedParams"],[131,38,104,36],[131,39,104,37,"param"],[131,44,104,42],[131,45,104,43],[132,16,105,14],[133,14,106,12],[134,12,107,10],[134,13,107,11],[134,14,107,12],[135,10,108,8],[136,8,109,6],[138,8,111,6],[139,8,112,6],[139,12,112,10],[139,13,112,11,"currentOptions"],[139,27,112,25],[139,28,112,26,"route"],[139,33,112,31],[139,34,112,32,"name"],[139,38,112,36],[139,39,112,37],[139,40,112,38,"screens"],[139,47,112,45],[139,51,112,49,"route"],[139,56,112,54],[139,57,112,55,"state"],[139,62,112,60],[139,67,112,65,"undefined"],[139,76,112,74],[139,78,112,76],[140,10,113,8,"hasNext"],[140,17,113,15],[140,20,113,18],[140,25,113,23],[141,8,114,6],[141,9,114,7],[141,15,114,13],[142,10,115,8,"index"],[142,15,115,13],[142,18,115,16],[142,25,115,23,"route"],[142,30,115,28],[142,31,115,29,"state"],[142,36,115,34],[142,37,115,35,"index"],[142,42,115,40],[142,47,115,45],[142,55,115,53],[142,58,115,56,"route"],[142,63,115,61],[142,64,115,62,"state"],[142,69,115,67],[142,70,115,68,"index"],[142,75,115,73],[142,78,115,76,"route"],[142,83,115,81],[142,84,115,82,"state"],[142,89,115,87],[142,90,115,88,"routes"],[142,96,115,94],[142,97,115,95,"length"],[142,103,115,101],[142,106,115,104],[142,107,115,105],[143,10,116,8],[143,14,116,14,"nextRoute"],[143,23,116,23],[143,26,116,26,"route"],[143,31,116,31],[143,32,116,32,"state"],[143,37,116,37],[143,38,116,38,"routes"],[143,44,116,44],[143,45,116,45,"index"],[143,50,116,50],[143,51,116,51],[144,10,117,8],[144,14,117,14,"nestedConfig"],[144,26,117,26],[144,29,117,29,"currentOptions"],[144,43,117,43],[144,44,117,44,"route"],[144,49,117,49],[144,50,117,50,"name"],[144,54,117,54],[144,55,117,55],[144,56,117,56,"screens"],[144,63,117,63],[146,10,119,8],[147,10,120,8],[147,14,120,12,"nestedConfig"],[147,26,120,24],[147,30,120,28,"nextRoute"],[147,39,120,37],[147,40,120,38,"name"],[147,44,120,42],[147,48,120,46,"nestedConfig"],[147,60,120,58],[147,62,120,60],[148,12,121,10,"route"],[148,17,121,15],[148,20,121,18,"nextRoute"],[148,29,121,27],[149,12,122,10,"currentOptions"],[149,26,122,24],[149,29,122,27,"nestedConfig"],[149,41,122,39],[150,10,123,8],[150,11,123,9],[150,17,123,15],[151,12,124,10],[152,12,125,10,"hasNext"],[152,19,125,17],[152,22,125,20],[152,27,125,25],[153,10,126,8],[154,8,127,6],[155,6,128,4],[155,7,128,5],[156,6,80,4],[156,13,80,11,"route"],[156,18,80,16],[156,19,80,17,"name"],[156,23,80,21],[156,27,80,25,"currentOptions"],[156,41,80,39],[156,45,80,43,"hasNext"],[156,52,80,50],[157,8,80,50,"_loop2"],[157,14,80,50],[158,6,80,50],[159,6,129,4],[159,10,129,8,"currentOptions"],[159,24,129,22],[159,25,129,23,"route"],[159,30,129,28],[159,31,129,29,"name"],[159,35,129,33],[159,36,129,34],[159,41,129,39,"undefined"],[159,50,129,48],[159,52,129,50],[160,8,130,6,"path"],[160,12,130,10],[160,16,130,14,"parts"],[160,21,130,19],[160,23,130,21,"map"],[160,26,130,24],[160,27,130,25,"_ref"],[160,31,130,25],[160,35,134,12],[161,10,134,12],[161,14,131,8,"segment"],[161,21,131,15],[161,24,131,15,"_ref"],[161,28,131,15],[161,29,131,8,"segment"],[161,36,131,15],[162,12,132,8,"param"],[162,17,132,13],[162,20,132,13,"_ref"],[162,24,132,13],[162,25,132,8,"param"],[162,30,132,13],[163,12,133,8,"optional"],[163,20,133,16],[163,23,133,16,"_ref"],[163,27,133,16],[163,28,133,8,"optional"],[163,36,133,16],[164,10,135,8],[165,10,136,8],[166,10,137,8],[167,10,138,8],[167,14,138,12,"segment"],[167,21,138,19],[167,26,138,24],[167,29,138,27],[167,31,138,29],[168,12,139,10],[168,19,139,17,"route"],[168,24,139,22],[168,25,139,23,"name"],[168,29,139,27],[169,10,140,8],[171,10,142,8],[172,10,143,8],[172,14,143,12,"param"],[172,19,143,17],[172,21,143,19],[173,12,144,10],[173,16,144,16,"value"],[173,21,144,21],[173,24,144,24,"allParams"],[173,33,144,33],[173,34,144,34,"param"],[173,39,144,39],[173,40,144,40],[174,12,145,10],[174,16,145,14,"value"],[174,21,145,19],[174,26,145,24,"undefined"],[174,35,145,33],[174,39,145,37,"optional"],[174,47,145,45],[174,49,145,47],[175,14,146,12],[176,14,147,12],[176,21,147,19],[176,23,147,21],[177,12,148,10],[179,12,150,10],[180,12,151,10],[181,12,152,10],[181,19,152,17,"String"],[181,25,152,23],[181,26,152,24,"value"],[181,31,152,29],[181,32,152,30],[181,33,152,31,"replace"],[181,40,152,38],[181,41,152,39],[181,74,152,72],[181,76,152,74,"char"],[181,80,152,78],[181,84,152,82,"encodeURIComponent"],[181,102,152,100],[181,103,152,101,"char"],[181,107,152,105],[181,108,152,106],[181,109,152,107],[182,10,153,8],[183,10,154,8],[183,17,154,15,"encodeURIComponent"],[183,35,154,33],[183,36,154,34,"segment"],[183,43,154,41],[183,44,154,42],[184,8,155,6],[184,9,155,7],[184,10,155,8],[184,11,155,9,"join"],[184,15,155,13],[184,16,155,14],[184,19,155,17],[184,20,155,18],[185,6,156,4],[185,7,156,5],[185,13,156,11],[186,8,157,6,"path"],[186,12,157,10],[186,16,157,14,"encodeURIComponent"],[186,34,157,32],[186,35,157,33,"route"],[186,40,157,38],[186,41,157,39,"name"],[186,45,157,43],[186,46,157,44],[187,6,158,4],[188,6,159,4],[188,10,159,8],[188,11,159,9,"focusedParams"],[188,24,159,22],[188,28,159,26,"focusedRoute"],[188,40,159,38],[188,41,159,39,"params"],[188,47,159,45],[188,49,159,47],[189,8,160,6,"focusedParams"],[189,21,160,19],[189,24,160,22,"Object"],[189,30,160,28],[189,31,160,29,"fromEntries"],[189,42,160,40],[189,43,160,41,"Object"],[189,49,160,47],[189,50,160,48,"entries"],[189,57,160,55],[189,58,160,56,"focusedRoute"],[189,70,160,68],[189,71,160,69,"params"],[189,77,160,75],[189,78,160,76],[189,79,160,77,"map"],[189,82,160,80],[189,83,160,81,"_ref2"],[189,88,160,81],[190,10,160,81],[190,14,160,81,"_ref3"],[190,19,160,81],[190,22,160,81,"_slicedToArray"],[190,36,160,81],[190,37,160,81,"_ref2"],[190,42,160,81],[191,12,160,83,"key"],[191,15,160,86],[191,18,160,86,"_ref3"],[191,23,160,86],[192,12,160,88,"value"],[192,17,160,93],[192,20,160,93,"_ref3"],[192,25,160,93],[193,10,160,93],[193,17,160,99],[193,18,160,100,"key"],[193,21,160,103],[193,23,160,105,"String"],[193,29,160,111],[193,30,160,112,"value"],[193,35,160,117],[193,36,160,118],[193,37,160,119],[194,8,160,119],[194,10,160,120],[194,11,160,121],[195,6,161,4],[196,6,162,4],[196,10,162,8,"route"],[196,15,162,13],[196,16,162,14,"state"],[196,21,162,19],[196,23,162,21],[197,8,163,6,"path"],[197,12,163,10],[197,16,163,14],[197,19,163,17],[198,6,164,4],[198,7,164,5],[198,13,164,11],[198,17,164,15,"focusedParams"],[198,30,164,28],[198,32,164,30],[199,8,165,6],[199,13,165,11],[199,17,165,17,"param"],[199,22,165,22],[199,26,165,26,"focusedParams"],[199,39,165,39],[199,41,165,41],[200,10,166,8],[200,14,166,12,"focusedParams"],[200,27,166,25],[200,28,166,26,"param"],[200,33,166,31],[200,34,166,32],[200,39,166,37],[200,50,166,48],[200,52,166,50],[201,12,167,10],[202,12,168,10],[202,19,168,17,"focusedParams"],[202,32,168,30],[202,33,168,31,"param"],[202,38,168,36],[202,39,168,37],[203,10,169,8],[204,8,170,6],[205,8,171,6],[205,12,171,12,"query"],[205,17,171,17],[205,20,171,20,"queryString"],[205,31,171,31],[205,32,171,32,"stringify"],[205,41,171,41],[205,42,171,42,"focusedParams"],[205,55,171,55],[205,57,171,57],[206,10,172,8,"sort"],[206,14,172,12],[206,16,172,14],[207,8,173,6],[207,9,173,7],[207,10,173,8],[208,8,174,6],[208,12,174,10,"query"],[208,17,174,15],[208,19,174,17],[209,10,175,8,"path"],[209,14,175,12],[209,18,175,16],[209,22,175,20,"query"],[209,27,175,25],[209,29,175,27],[210,8,176,6],[211,6,177,4],[212,6,178,4,"current"],[212,13,178,11],[212,16,178,14,"route"],[212,21,178,19],[212,22,178,20,"state"],[212,27,178,25],[213,4,179,2],[213,5,179,3],[214,4,69,2],[214,11,69,9,"current"],[214,18,69,16],[215,6,69,16,"_loop"],[215,11,69,16],[216,4,69,16],[218,4,181,2],[219,4,182,2],[219,8,182,6,"options"],[219,15,182,13],[219,17,182,15,"path"],[219,21,182,19],[219,23,182,21],[220,6,183,4,"path"],[220,10,183,8],[220,13,183,11],[220,16,183,14,"options"],[220,23,183,21],[220,24,183,22,"path"],[220,28,183,26],[220,32,183,30,"path"],[220,36,183,34],[220,38,183,36],[221,4,184,2],[223,4,186,2],[224,4,187,2,"path"],[224,8,187,6],[224,11,187,9,"path"],[224,15,187,13],[224,16,187,14,"replace"],[224,23,187,21],[224,24,187,22],[224,30,187,28],[224,32,187,30],[224,35,187,33],[224,36,187,34],[225,4,188,2,"path"],[225,8,188,6],[225,11,188,9,"path"],[225,15,188,13],[225,16,188,14,"length"],[225,22,188,20],[225,25,188,23],[225,26,188,24],[225,29,188,27,"path"],[225,33,188,31],[225,34,188,32,"replace"],[225,41,188,39],[225,42,188,40],[225,47,188,45],[225,49,188,47],[225,51,188,49],[225,52,188,50],[225,55,188,53,"path"],[225,59,188,57],[227,4,190,2],[228,4,191,2],[229,4,192,2],[229,8,192,6],[229,9,192,7,"path"],[229,13,192,11],[229,14,192,12,"startsWith"],[229,24,192,22],[229,25,192,23],[229,28,192,26],[229,29,192,27],[229,31,192,29],[230,6,193,4,"path"],[230,10,193,8],[230,13,193,11],[230,17,193,15,"path"],[230,21,193,19],[230,23,193,21],[231,4,194,2],[232,4,195,2],[232,11,195,9,"path"],[232,15,195,13],[233,2,196,0],[234,2,197,0],[234,6,197,6,"createConfigItem"],[234,22,197,22],[234,25,197,25,"createConfigItem"],[234,26,197,26,"config"],[234,32,197,32],[234,34,197,34,"parentParts"],[234,45,197,45],[234,50,197,50],[235,4,198,2],[235,8,198,6],[235,15,198,13,"config"],[235,21,198,19],[235,26,198,24],[235,34,198,32],[235,36,198,34],[236,6,199,4],[237,6,200,4],[237,10,200,10,"parts"],[237,16,200,15],[237,19,200,18],[237,20,200,19],[237,21,200,20],[237,23,200,22,"require"],[237,30,200,22],[237,31,200,22,"_dependencyMap"],[237,45,200,22],[237,74,200,39,"getPatternParts"],[237,89,200,54],[237,91,200,56,"config"],[237,97,200,62],[237,98,200,63],[238,6,201,4],[238,10,201,8,"parentParts"],[238,21,201,19],[238,23,201,21],[239,8,202,6],[239,15,202,13],[240,10,203,8,"parts"],[240,15,203,13],[240,17,203,15],[240,18,203,16],[240,21,203,19,"parentParts"],[240,32,203,30],[240,34,203,32],[240,37,203,35,"parts"],[240,43,203,40],[241,8,204,6],[241,9,204,7],[242,6,205,4],[243,6,206,4],[243,13,206,11],[244,8,207,6,"parts"],[244,13,207,11],[244,15,207,6,"parts"],[245,6,208,4],[245,7,208,5],[246,4,209,2],[247,4,210,2],[247,8,210,6,"config"],[247,14,210,12],[247,15,210,13,"exact"],[247,20,210,18],[247,24,210,22,"config"],[247,30,210,28],[247,31,210,29,"path"],[247,35,210,33],[247,40,210,38,"undefined"],[247,49,210,47],[247,51,210,49],[248,6,211,4],[248,12,211,10],[248,16,211,14,"Error"],[248,21,211,19],[248,22,211,20],[248,172,211,170],[248,173,211,171],[249,4,212,2],[251,4,214,2],[252,4,215,2],[253,4,216,2],[253,8,216,8,"parts"],[253,13,216,13],[253,16,216,16,"config"],[253,22,216,22],[253,23,216,23,"exact"],[253,28,216,28],[253,33,216,33],[253,37,216,37],[253,40,216,40],[253,41,216,41],[253,45,216,45,"parentParts"],[253,56,216,56],[253,60,216,60],[253,62,216,62],[253,63,216,63],[253,65,216,65],[253,69,216,69,"config"],[253,75,216,75],[253,76,216,76,"path"],[253,80,216,80],[253,83,216,83],[253,84,216,84],[253,85,216,85],[253,87,216,87,"require"],[253,94,216,87],[253,95,216,87,"_dependencyMap"],[253,109,216,87],[253,138,216,104,"getPatternParts"],[253,153,216,119],[253,155,216,121,"config"],[253,161,216,127],[253,162,216,128,"path"],[253,166,216,132],[253,167,216,133],[253,170,216,136],[253,172,216,138],[253,173,216,139],[253,174,216,140],[253,177,216,143,"config"],[253,183,216,149],[253,184,216,150,"path"],[253,188,216,154],[253,191,216,157],[253,192,216,158],[253,193,216,159],[253,195,216,161,"require"],[253,202,216,161],[253,203,216,161,"_dependencyMap"],[253,217,216,161],[253,246,216,178,"getPatternParts"],[253,261,216,193],[253,263,216,195,"config"],[253,269,216,201],[253,270,216,202,"path"],[253,274,216,206],[253,275,216,207],[253,278,216,210,"undefined"],[253,287,216,219],[254,4,217,2],[254,8,217,8,"screens"],[254,15,217,15],[254,18,217,18,"config"],[254,24,217,24],[254,25,217,25,"screens"],[254,32,217,32],[254,35,217,35,"createNormalizedConfigs"],[254,58,217,58],[254,59,217,59,"config"],[254,65,217,65],[254,66,217,66,"screens"],[254,73,217,73],[254,75,217,75,"parts"],[254,80,217,80],[254,81,217,81],[254,84,217,84,"undefined"],[254,93,217,93],[255,4,218,2],[255,11,218,9],[256,6,219,4,"parts"],[256,11,219,9],[257,6,220,4,"stringify"],[257,15,220,13],[257,17,220,15,"config"],[257,23,220,21],[257,24,220,22,"stringify"],[257,33,220,31],[258,6,221,4,"screens"],[259,4,222,2],[259,5,222,3],[260,2,223,0],[260,3,223,1],[261,2,224,0],[261,6,224,6,"createNormalizedConfigs"],[261,29,224,29],[261,32,224,32,"createNormalizedConfigs"],[261,33,224,33,"options"],[261,40,224,40],[261,42,224,42,"parts"],[261,47,224,47],[261,52,224,52,"Object"],[261,58,224,58],[261,59,224,59,"fromEntries"],[261,70,224,70],[261,71,224,71,"Object"],[261,77,224,77],[261,78,224,78,"entries"],[261,85,224,85],[261,86,224,86,"options"],[261,93,224,93],[261,94,224,94],[261,95,224,95,"map"],[261,98,224,98],[261,99,224,99,"_ref7"],[261,104,224,99],[261,108,224,114],[262,4,224,114],[262,8,224,114,"_ref8"],[262,13,224,114],[262,16,224,114,"_slicedToArray"],[262,30,224,114],[262,31,224,114,"_ref7"],[262,36,224,114],[263,6,224,101,"name"],[263,10,224,105],[263,13,224,105,"_ref8"],[263,18,224,105],[264,6,224,107,"c"],[264,7,224,108],[264,10,224,108,"_ref8"],[264,15,224,108],[265,4,225,2],[265,8,225,8,"result"],[265,14,225,14],[265,17,225,17,"createConfigItem"],[265,33,225,33],[265,34,225,34,"c"],[265,35,225,35],[265,37,225,37,"parts"],[265,42,225,42],[265,43,225,43],[266,4,226,2],[266,11,226,9],[266,12,226,10,"name"],[266,16,226,14],[266,18,226,16,"result"],[266,24,226,22],[266,25,226,23],[267,2,227,0],[267,3,227,1],[267,4,227,2],[267,5,227,3],[268,0,227,4],[268,3]],"functionMap":{"names":["<global>","_getRequireWildcardCache","_interopRequireWildcard","getActiveRoute","getNormalizedConfigs","getPathFromState","Object.entries.map$argument_0","parts.forEach$argument_0","parts.map$argument_0","String.replace$argument_1","createConfigItem","createNormalizedConfigs"],"mappings":"AAA;ACS,4MD;AEC,mkBF;uBGC;CHM;6BIE;CJO;AK+B;kFC2B,iFD;oBEY;WFU;yBGuB;0ECsB,gCD;OHG;iFCK,sCD;CLoC;yBUC;CV0B;gCWC,mEL;CKG,EX"}},"type":"js/module"}]}