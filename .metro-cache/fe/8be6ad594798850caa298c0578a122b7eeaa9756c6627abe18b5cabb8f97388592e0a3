{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":41,"column":0,"index":1108}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"./LogBoxLog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":28},"end":{"line":3,"column":40,"index":68}}],"key":"RwknKpSLDy9ayXhlPxw1CmbUPgg="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.LogContext = void 0;\n  exports.useLogs = useLogs;\n  exports.useSelectedLog = useSelectedLog;\n  var _react = _interopRequireDefault(require(_dependencyMap[1], \"react\"));\n  // Context provider for Array<LogBoxLog>\n\n  var LogContext = exports.LogContext = /*#__PURE__*/_react.default.createContext(null);\n  function useLogs() {\n    var logs = _react.default.useContext(LogContext);\n    if (!logs) {\n      if (false && typeof window !== 'undefined') {\n        // Logbox data that is pre-fetched on the dev server and rendered here.\n        var expoCliStaticErrorElement = document.getElementById('_expo-static-error');\n        if (expoCliStaticErrorElement?.textContent) {\n          var raw = JSON.parse(expoCliStaticErrorElement.textContent);\n          return {\n            ...raw,\n            logs: raw.logs.map(raw => new (require(_dependencyMap[2], \"./LogBoxLog\").LogBoxLog)(raw))\n          };\n        }\n      }\n      throw new Error('useLogs must be used within a LogProvider');\n    }\n    return logs;\n  }\n  function useSelectedLog() {\n    var _useLogs = useLogs(),\n      selectedLogIndex = _useLogs.selectedLogIndex,\n      logs = _useLogs.logs;\n    return logs[selectedLogIndex];\n  }\n});","lineCount":37,"map":[[9,2,1,0],[9,6,1,0,"_react"],[9,12,1,0],[9,15,1,0,"_interopRequireDefault"],[9,37,1,0],[9,38,1,0,"require"],[9,45,1,0],[9,46,1,0,"_dependencyMap"],[9,60,1,0],[10,2,5,0],[12,2,7,7],[12,6,7,13,"LogContext"],[12,16,7,23],[12,19,7,23,"exports"],[12,26,7,23],[12,27,7,23,"LogContext"],[12,37,7,23],[12,53,7,26,"React"],[12,67,7,31],[12,68,7,32,"createContext"],[12,81,7,45],[12,82,11,10],[12,86,11,14],[12,87,11,15],[13,2,13,7],[13,11,13,16,"useLogs"],[13,18,13,23,"useLogs"],[13,19,13,23],[13,21,17,2],[14,4,18,2],[14,8,18,8,"logs"],[14,12,18,12],[14,15,18,15,"React"],[14,29,18,20],[14,30,18,21,"useContext"],[14,40,18,31],[14,41,18,32,"LogContext"],[14,51,18,42],[14,52,18,43],[15,4,19,2],[15,8,19,6],[15,9,19,7,"logs"],[15,13,19,11],[15,15,19,13],[16,6,20,4],[16,10,20,8],[16,19,20,41],[16,26,20,48,"window"],[16,32,20,54],[16,37,20,59],[16,48,20,70],[16,50,20,72],[17,8,21,6],[18,8,22,6],[18,12,22,12,"expoCliStaticErrorElement"],[18,37,22,37],[18,40,22,40,"document"],[18,48,22,48],[18,49,22,49,"getElementById"],[18,63,22,63],[18,64,22,64],[18,84,22,84],[18,85,22,85],[19,8,23,6],[19,12,23,10,"expoCliStaticErrorElement"],[19,37,23,35],[19,39,23,37,"textContent"],[19,50,23,48],[19,52,23,50],[20,10,24,8],[20,14,24,14,"raw"],[20,17,24,17],[20,20,24,20,"JSON"],[20,24,24,24],[20,25,24,25,"parse"],[20,30,24,30],[20,31,24,31,"expoCliStaticErrorElement"],[20,56,24,56],[20,57,24,57,"textContent"],[20,68,24,68],[20,69,24,69],[21,10,25,8],[21,17,25,15],[22,12,26,10],[22,15,26,13,"raw"],[22,18,26,16],[23,12,27,10,"logs"],[23,16,27,14],[23,18,27,16,"raw"],[23,21,27,19],[23,22,27,20,"logs"],[23,26,27,24],[23,27,27,25,"map"],[23,30,27,28],[23,31,27,30,"raw"],[23,34,27,38],[23,38,27,43],[23,43,27,47,"LogBoxLog"],[23,69,27,47],[23,70,27,47,"LogBoxLog"],[23,94,27,56],[23,96,27,57,"raw"],[23,99,27,60],[23,100,27,61],[24,10,28,8],[24,11,28,9],[25,8,29,6],[26,6,30,4],[27,6,32,4],[27,12,32,10],[27,16,32,14,"Error"],[27,21,32,19],[27,22,32,20],[27,65,32,63],[27,66,32,64],[28,4,33,2],[29,4,34,2],[29,11,34,9,"logs"],[29,15,34,13],[30,2,35,0],[31,2,37,7],[31,11,37,16,"useSelectedLog"],[31,25,37,30,"useSelectedLog"],[31,26,37,30],[31,28,37,33],[32,4,38,2],[32,8,38,2,"_useLogs"],[32,16,38,2],[32,19,38,37,"useLogs"],[32,26,38,44],[32,27,38,45],[32,28,38,46],[33,6,38,10,"selectedLogIndex"],[33,22,38,26],[33,25,38,26,"_useLogs"],[33,33,38,26],[33,34,38,10,"selectedLogIndex"],[33,50,38,26],[34,6,38,28,"logs"],[34,10,38,32],[34,13,38,32,"_useLogs"],[34,21,38,32],[34,22,38,28,"logs"],[34,26,38,32],[35,4,39,2],[35,11,39,9,"logs"],[35,15,39,13],[35,16,39,14,"selectedLogIndex"],[35,32,39,30],[35,33,39,31],[36,2,40,0],[37,0,40,1],[37,3]],"functionMap":{"names":["<global>","useLogs","raw.logs.map$argument_0","useSelectedLog"],"mappings":"AAA;OCY;6BCc,gCD;CDQ;OGE;CHG"}},"type":"js/module"}]}