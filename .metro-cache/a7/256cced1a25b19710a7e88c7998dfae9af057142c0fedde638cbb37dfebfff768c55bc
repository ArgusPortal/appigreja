{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":240},"end":{"line":11,"column":31,"index":271}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":272},"end":{"line":12,"column":50,"index":322}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"../modules/NativeLogBox","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":619},"end":{"line":19,"column":51,"index":670}}],"key":"p3b5WMmEyWxm6gOiGn9fL7Jt3qU="}},{"name":"../modules/parseErrorStack","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":671},"end":{"line":20,"column":57,"index":728}}],"key":"mfxaFYAQGgcp6uWAwEF5cgtcAXk="}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":465,"column":0,"index":12404}}],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI="}},{"name":"../modules/ExceptionsManager","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":85,"column":28,"index":2233},"end":{"line":85,"column":67,"index":2272}}],"key":"O+gFX/law9ujkyw2t64+bdXM/Ng="}},{"name":"./LogBoxLog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":324},"end":{"line":14,"column":51,"index":375}},{"start":{"line":14,"column":0,"index":324},"end":{"line":14,"column":51,"index":375}}],"key":"RwknKpSLDy9ayXhlPxw1CmbUPgg=","isOptional":true}},{"name":"./parseLogBoxLog","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":464},"end":{"line":17,"column":56,"index":520}}],"key":"jpYn6rgG/TatMWMr3MolKhrm4tY=","isOptional":true}},{"name":"./LogContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":421},"end":{"line":16,"column":42,"index":463}}],"key":"08zCGMU0YDPffrVErZBYDWsetf4="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) 650 Industries.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  'use client';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.addException = addException;\n  exports.addIgnorePatterns = addIgnorePatterns;\n  exports.addLog = addLog;\n  exports.clear = clear;\n  exports.clearErrors = clearErrors;\n  exports.clearWarnings = clearWarnings;\n  exports.dismiss = dismiss;\n  exports.getIgnorePatterns = getIgnorePatterns;\n  exports.isDisabled = isDisabled;\n  exports.isLogBoxErrorMessage = isLogBoxErrorMessage;\n  exports.isMessageIgnored = isMessageIgnored;\n  exports.observe = observe;\n  exports.reportLogBoxError = reportLogBoxError;\n  exports.reportUnexpectedLogBoxError = reportUnexpectedLogBoxError;\n  exports.retrySymbolicateLogNow = retrySymbolicateLogNow;\n  exports.setDisabled = setDisabled;\n  exports.setSelectedLog = setSelectedLog;\n  exports.symbolicateLogLazy = symbolicateLogLazy;\n  exports.symbolicateLogNow = symbolicateLogNow;\n  exports.withSubscription = withSubscription;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var React = _interopRequireWildcard(require(_dependencyMap[6], \"react\"));\n  var _reactNative = require(_dependencyMap[7], \"react-native\");\n  var _NativeLogBox = _interopRequireDefault(require(_dependencyMap[8], \"../modules/NativeLogBox\"));\n  var _parseErrorStack = _interopRequireDefault(require(_dependencyMap[9], \"../modules/parseErrorStack\"));\n  var _jsxDevRuntime = require(_dependencyMap[10], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"C:\\\\Users\\\\argus\\\\workspace\\\\appigreja\\\\node_modules\\\\@expo\\\\metro-runtime\\\\src\\\\error-overlay\\\\Data\\\\LogBoxData.tsx\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var observers = new Set();\n  var ignorePatterns = new Set();\n  var logs = new Set();\n  var updateTimeout = null;\n  var _isDisabled = false;\n  var _selectedIndex = -1;\n  var LOGBOX_ERROR_MESSAGE = 'An error was thrown when attempting to render log messages via LogBox.';\n  function getNextState() {\n    return {\n      logs,\n      isDisabled: _isDisabled,\n      selectedLogIndex: _selectedIndex\n    };\n  }\n  function reportLogBoxError(error, componentStack) {\n    var ExceptionsManager = require(_dependencyMap[11], \"../modules/ExceptionsManager\").default;\n    if (componentStack != null) {\n      error.componentStack = componentStack;\n    }\n    ExceptionsManager.handleException(error);\n  }\n  function reportUnexpectedLogBoxError(error, componentStack) {\n    error.message = `${LOGBOX_ERROR_MESSAGE}\\n\\n${error.message}`;\n    return reportLogBoxError(error, componentStack);\n  }\n  function isLogBoxErrorMessage(message) {\n    return typeof message === 'string' && message.includes(LOGBOX_ERROR_MESSAGE);\n  }\n  function isMessageIgnored(message) {\n    for (var pattern of ignorePatterns) {\n      if (pattern instanceof RegExp && pattern.test(message) || typeof pattern === 'string' && message.includes(pattern)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function setImmediateShim(callback) {\n    if (!global.setImmediate) {\n      return setTimeout(callback, 0);\n    }\n    return global.setImmediate(callback);\n  }\n  function handleUpdate() {\n    if (updateTimeout == null) {\n      updateTimeout = setImmediateShim(() => {\n        updateTimeout = null;\n        var nextState = getNextState();\n        observers.forEach(_ref => {\n          var observer = _ref.observer;\n          return observer(nextState);\n        });\n      });\n    }\n  }\n  function appendNewLog(newLog) {\n    // Don't want store these logs because they trigger a\n    // state update when we add them to the store.\n    if (isMessageIgnored(newLog.message.content)) {\n      return;\n    }\n\n    // If the next log has the same category as the previous one\n    // then roll it up into the last log in the list by incrementing\n    // the count (similar to how Chrome does it).\n    var lastLog = Array.from(logs).pop();\n    if (lastLog && lastLog.category === newLog.category) {\n      lastLog.incrementCount();\n      handleUpdate();\n      return;\n    }\n    if (newLog.level === 'fatal') {\n      // If possible, to avoid jank, we don't want to open the error before\n      // it's symbolicated. To do that, we optimistically wait for\n      // symbolication for up to a second before adding the log.\n      var OPTIMISTIC_WAIT_TIME = 1000;\n      var addPendingLog = () => {\n        logs.add(newLog);\n        if (_selectedIndex < 0) {\n          setSelectedLog(logs.size - 1);\n        } else {\n          handleUpdate();\n        }\n        addPendingLog = null;\n      };\n      var optimisticTimeout = setTimeout(() => {\n        if (addPendingLog) {\n          addPendingLog();\n        }\n      }, OPTIMISTIC_WAIT_TIME);\n\n      // TODO: HANDLE THIS\n      newLog.symbolicate('component');\n      newLog.symbolicate('stack', status => {\n        if (addPendingLog && status !== 'PENDING') {\n          addPendingLog();\n          clearTimeout(optimisticTimeout);\n        } else if (status !== 'PENDING') {\n          // The log has already been added but we need to trigger a render.\n          handleUpdate();\n        }\n      });\n    } else if (newLog.level === 'syntax') {\n      logs.add(newLog);\n      setSelectedLog(logs.size - 1);\n    } else {\n      logs.add(newLog);\n      handleUpdate();\n    }\n  }\n  function addLog(log) {\n    var errorForStackTrace = new Error();\n\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(() => {\n      try {\n        var stack = (0, _parseErrorStack.default)(errorForStackTrace?.stack);\n        appendNewLog(new (require(_dependencyMap[12], \"./LogBoxLog\").LogBoxLog)({\n          level: log.level,\n          message: log.message,\n          isComponentError: false,\n          stack,\n          category: log.category,\n          componentStack: log.componentStack\n        }));\n      } catch (error) {\n        reportUnexpectedLogBoxError(error);\n      }\n    });\n  }\n  function addException(error) {\n    // Parsing logs are expensive so we schedule this\n    // otherwise spammy logs would pause rendering.\n    setImmediate(() => {\n      try {\n        appendNewLog(new (require(_dependencyMap[12], \"./LogBoxLog\").LogBoxLog)((0, require(_dependencyMap[13], \"./parseLogBoxLog\").parseLogBoxException)(error)));\n      } catch (loggingError) {\n        reportUnexpectedLogBoxError(loggingError);\n      }\n    });\n  }\n  function symbolicateLogNow(type, log) {\n    log.symbolicate(type, () => {\n      handleUpdate();\n    });\n  }\n  function retrySymbolicateLogNow(type, log) {\n    log.retrySymbolicate(type, () => {\n      handleUpdate();\n    });\n  }\n  function symbolicateLogLazy(type, log) {\n    log.symbolicate(type);\n  }\n  function clear() {\n    if (logs.size > 0) {\n      logs = new Set();\n      setSelectedLog(-1);\n    }\n  }\n  function setSelectedLog(proposedNewIndex) {\n    var oldIndex = _selectedIndex;\n    var newIndex = proposedNewIndex;\n    var logArray = Array.from(logs);\n    var index = logArray.length - 1;\n    while (index >= 0) {\n      // The latest syntax error is selected and displayed before all other logs.\n      if (logArray[index].level === 'syntax') {\n        newIndex = index;\n        break;\n      }\n      index -= 1;\n    }\n    _selectedIndex = newIndex;\n    handleUpdate();\n    if (_NativeLogBox.default) {\n      setTimeout(() => {\n        if (oldIndex < 0 && newIndex >= 0) {\n          _NativeLogBox.default.show();\n        } else if (oldIndex >= 0 && newIndex < 0) {\n          _NativeLogBox.default.hide();\n        }\n      }, 0);\n    }\n  }\n  function clearWarnings() {\n    var newLogs = Array.from(logs).filter(log => log.level !== 'warn');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n      handleUpdate();\n    }\n  }\n  function clearErrors() {\n    var newLogs = Array.from(logs).filter(log => log.level !== 'error' && log.level !== 'fatal');\n    if (newLogs.length !== logs.size) {\n      logs = new Set(newLogs);\n      setSelectedLog(-1);\n    }\n  }\n  function dismiss(log) {\n    if (logs.has(log)) {\n      logs.delete(log);\n      handleUpdate();\n    }\n  }\n  function getIgnorePatterns() {\n    return Array.from(ignorePatterns);\n  }\n  function addIgnorePatterns(patterns) {\n    var existingSize = ignorePatterns.size;\n    // The same pattern may be added multiple times, but adding a new pattern\n    // can be expensive so let's find only the ones that are new.\n    patterns.forEach(pattern => {\n      if (pattern instanceof RegExp) {\n        for (var existingPattern of ignorePatterns) {\n          if (existingPattern instanceof RegExp && existingPattern.toString() === pattern.toString()) {\n            return;\n          }\n        }\n        ignorePatterns.add(pattern);\n      }\n      ignorePatterns.add(pattern);\n    });\n    if (ignorePatterns.size === existingSize) {\n      return;\n    }\n    // We need to recheck all of the existing logs.\n    // This allows adding an ignore pattern anywhere in the codebase.\n    // Without this, if you ignore a pattern after the a log is created,\n    // then we would keep showing the log.\n    logs = new Set(Array.from(logs).filter(log => !isMessageIgnored(log.message.content)));\n    handleUpdate();\n  }\n  function setDisabled(value) {\n    if (value === _isDisabled) {\n      return;\n    }\n    _isDisabled = value;\n    handleUpdate();\n  }\n  function isDisabled() {\n    return _isDisabled;\n  }\n  function observe(observer) {\n    var subscription = {\n      observer\n    };\n    observers.add(subscription);\n    observer(getNextState());\n    return {\n      unsubscribe() {\n        observers.delete(subscription);\n      }\n    };\n  }\n  var emitter = new _reactNative.NativeEventEmitter({\n    addListener() {},\n    removeListeners() {}\n  });\n  function withSubscription(WrappedComponent) {\n    var LogBoxStateSubscription = /*#__PURE__*/function (_React$Component) {\n      function LogBoxStateSubscription(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, LogBoxStateSubscription);\n        _this = _callSuper(this, LogBoxStateSubscription, [props]);\n        _this.state = {\n          logs: new Set(),\n          isDisabled: false,\n          hasError: false,\n          selectedLogIndex: -1\n        };\n        _this.retry = () => {\n          return new Promise(resolve => {\n            _this.setState({\n              hasError: false\n            }, () => {\n              resolve();\n            });\n          });\n        };\n        _this._handleDismiss = () => {\n          // Here we handle the cases when the log is dismissed and it\n          // was either the last log, or when the current index\n          // is now outside the bounds of the log array.\n          var _this$state = _this.state,\n            selectedLogIndex = _this$state.selectedLogIndex,\n            stateLogs = _this$state.logs;\n          var logsArray = Array.from(stateLogs);\n          if (selectedLogIndex != null) {\n            if (logsArray.length - 1 <= 0) {\n              setSelectedLog(-1);\n            } else if (selectedLogIndex >= logsArray.length - 1) {\n              setSelectedLog(selectedLogIndex - 1);\n            }\n            dismiss(logsArray[selectedLogIndex]);\n          }\n        };\n        _this._handleMinimize = () => {\n          setSelectedLog(-1);\n        };\n        _this._handleSetSelectedLog = index => {\n          setSelectedLog(index);\n        };\n        if (process.env.NODE_ENV === 'development') {\n          emitter.addListener('devLoadingView:hide', () => {\n            if (_this.state.hasError) {\n              _this.retry();\n            }\n          });\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(LogBoxStateSubscription, _React$Component);\n      return (0, _createClass2.default)(LogBoxStateSubscription, [{\n        key: \"componentDidCatch\",\n        value: function componentDidCatch(err, errorInfo) {\n          /* $FlowFixMe[class-object-subtyping] added when improving typing for\n           * this parameters */\n          reportLogBoxError(err, errorInfo.componentStack);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(require(_dependencyMap[14], \"./LogContext\").LogContext.Provider, {\n            value: {\n              selectedLogIndex: this.state.selectedLogIndex,\n              isDisabled: this.state.isDisabled,\n              logs: Array.from(this.state.logs)\n            },\n            children: [this.state.hasError ? null : this.props.children, /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(WrappedComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 9\n          }, this);\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this._subscription = observe(data => {\n            // Ignore the initial empty log\n            if (data.selectedLogIndex === -1) return;\n            React.startTransition(() => {\n              this.setState(data);\n            });\n          });\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          if (this._subscription != null) {\n            this._subscription.unsubscribe();\n          }\n        }\n      }], [{\n        key: \"getDerivedStateFromError\",\n        value: function getDerivedStateFromError() {\n          return {\n            hasError: true\n          };\n        }\n      }]);\n    }(React.Component); // @ts-expect-error\n    return LogBoxStateSubscription;\n  }\n});","lineCount":421,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[10,2,9,0],[10,14,9,12],[12,2,9,13],[12,6,9,13,"_interopRequireDefault"],[12,28,9,13],[12,31,9,13,"require"],[12,38,9,13],[12,39,9,13,"_dependencyMap"],[12,53,9,13],[13,2,9,13,"Object"],[13,8,9,13],[13,9,9,13,"defineProperty"],[13,23,9,13],[13,24,9,13,"exports"],[13,31,9,13],[14,4,9,13,"value"],[14,9,9,13],[15,2,9,13],[16,2,9,13,"exports"],[16,9,9,13],[16,10,9,13,"addException"],[16,22,9,13],[16,25,9,13,"addException"],[16,37,9,13],[17,2,9,13,"exports"],[17,9,9,13],[17,10,9,13,"addIgnorePatterns"],[17,27,9,13],[17,30,9,13,"addIgnorePatterns"],[17,47,9,13],[18,2,9,13,"exports"],[18,9,9,13],[18,10,9,13,"addLog"],[18,16,9,13],[18,19,9,13,"addLog"],[18,25,9,13],[19,2,9,13,"exports"],[19,9,9,13],[19,10,9,13,"clear"],[19,15,9,13],[19,18,9,13,"clear"],[19,23,9,13],[20,2,9,13,"exports"],[20,9,9,13],[20,10,9,13,"clearErrors"],[20,21,9,13],[20,24,9,13,"clearErrors"],[20,35,9,13],[21,2,9,13,"exports"],[21,9,9,13],[21,10,9,13,"clearWarnings"],[21,23,9,13],[21,26,9,13,"clearWarnings"],[21,39,9,13],[22,2,9,13,"exports"],[22,9,9,13],[22,10,9,13,"dismiss"],[22,17,9,13],[22,20,9,13,"dismiss"],[22,27,9,13],[23,2,9,13,"exports"],[23,9,9,13],[23,10,9,13,"getIgnorePatterns"],[23,27,9,13],[23,30,9,13,"getIgnorePatterns"],[23,47,9,13],[24,2,9,13,"exports"],[24,9,9,13],[24,10,9,13,"isDisabled"],[24,20,9,13],[24,23,9,13,"isDisabled"],[24,33,9,13],[25,2,9,13,"exports"],[25,9,9,13],[25,10,9,13,"isLogBoxErrorMessage"],[25,30,9,13],[25,33,9,13,"isLogBoxErrorMessage"],[25,53,9,13],[26,2,9,13,"exports"],[26,9,9,13],[26,10,9,13,"isMessageIgnored"],[26,26,9,13],[26,29,9,13,"isMessageIgnored"],[26,45,9,13],[27,2,9,13,"exports"],[27,9,9,13],[27,10,9,13,"observe"],[27,17,9,13],[27,20,9,13,"observe"],[27,27,9,13],[28,2,9,13,"exports"],[28,9,9,13],[28,10,9,13,"reportLogBoxError"],[28,27,9,13],[28,30,9,13,"reportLogBoxError"],[28,47,9,13],[29,2,9,13,"exports"],[29,9,9,13],[29,10,9,13,"reportUnexpectedLogBoxError"],[29,37,9,13],[29,40,9,13,"reportUnexpectedLogBoxError"],[29,67,9,13],[30,2,9,13,"exports"],[30,9,9,13],[30,10,9,13,"retrySymbolicateLogNow"],[30,32,9,13],[30,35,9,13,"retrySymbolicateLogNow"],[30,57,9,13],[31,2,9,13,"exports"],[31,9,9,13],[31,10,9,13,"setDisabled"],[31,21,9,13],[31,24,9,13,"setDisabled"],[31,35,9,13],[32,2,9,13,"exports"],[32,9,9,13],[32,10,9,13,"setSelectedLog"],[32,24,9,13],[32,27,9,13,"setSelectedLog"],[32,41,9,13],[33,2,9,13,"exports"],[33,9,9,13],[33,10,9,13,"symbolicateLogLazy"],[33,28,9,13],[33,31,9,13,"symbolicateLogLazy"],[33,49,9,13],[34,2,9,13,"exports"],[34,9,9,13],[34,10,9,13,"symbolicateLogNow"],[34,27,9,13],[34,30,9,13,"symbolicateLogNow"],[34,47,9,13],[35,2,9,13,"exports"],[35,9,9,13],[35,10,9,13,"withSubscription"],[35,26,9,13],[35,29,9,13,"withSubscription"],[35,45,9,13],[36,2,9,13],[36,6,9,13,"_classCallCheck2"],[36,22,9,13],[36,25,9,13,"_interopRequireDefault"],[36,47,9,13],[36,48,9,13,"require"],[36,55,9,13],[36,56,9,13,"_dependencyMap"],[36,70,9,13],[37,2,9,13],[37,6,9,13,"_createClass2"],[37,19,9,13],[37,22,9,13,"_interopRequireDefault"],[37,44,9,13],[37,45,9,13,"require"],[37,52,9,13],[37,53,9,13,"_dependencyMap"],[37,67,9,13],[38,2,9,13],[38,6,9,13,"_possibleConstructorReturn2"],[38,33,9,13],[38,36,9,13,"_interopRequireDefault"],[38,58,9,13],[38,59,9,13,"require"],[38,66,9,13],[38,67,9,13,"_dependencyMap"],[38,81,9,13],[39,2,9,13],[39,6,9,13,"_getPrototypeOf2"],[39,22,9,13],[39,25,9,13,"_interopRequireDefault"],[39,47,9,13],[39,48,9,13,"require"],[39,55,9,13],[39,56,9,13,"_dependencyMap"],[39,70,9,13],[40,2,9,13],[40,6,9,13,"_inherits2"],[40,16,9,13],[40,19,9,13,"_interopRequireDefault"],[40,41,9,13],[40,42,9,13,"require"],[40,49,9,13],[40,50,9,13,"_dependencyMap"],[40,64,9,13],[41,2,11,0],[41,6,11,0,"React"],[41,11,11,0],[41,14,11,0,"_interopRequireWildcard"],[41,37,11,0],[41,38,11,0,"require"],[41,45,11,0],[41,46,11,0,"_dependencyMap"],[41,60,11,0],[42,2,12,0],[42,6,12,0,"_reactNative"],[42,18,12,0],[42,21,12,0,"require"],[42,28,12,0],[42,29,12,0,"_dependencyMap"],[42,43,12,0],[43,2,19,0],[43,6,19,0,"_NativeLogBox"],[43,19,19,0],[43,22,19,0,"_interopRequireDefault"],[43,44,19,0],[43,45,19,0,"require"],[43,52,19,0],[43,53,19,0,"_dependencyMap"],[43,67,19,0],[44,2,20,0],[44,6,20,0,"_parseErrorStack"],[44,22,20,0],[44,25,20,0,"_interopRequireDefault"],[44,47,20,0],[44,48,20,0,"require"],[44,55,20,0],[44,56,20,0,"_dependencyMap"],[44,70,20,0],[45,2,20,57],[45,6,20,57,"_jsxDevRuntime"],[45,20,20,57],[45,23,20,57,"require"],[45,30,20,57],[45,31,20,57,"_dependencyMap"],[45,45,20,57],[46,2,20,57],[46,6,20,57,"_jsxFileName"],[46,18,20,57],[47,2,20,57],[47,11,20,57,"_getRequireWildcardCache"],[47,36,20,57,"e"],[47,37,20,57],[47,66,20,57,"WeakMap"],[47,73,20,57],[47,92,20,57,"r"],[47,93,20,57],[47,100,20,57,"WeakMap"],[47,107,20,57],[47,111,20,57,"t"],[47,112,20,57],[47,119,20,57,"WeakMap"],[47,126,20,57],[47,138,20,57,"_getRequireWildcardCache"],[47,162,20,57],[47,174,20,57,"_getRequireWildcardCache"],[47,175,20,57,"e"],[47,176,20,57],[47,187,20,57,"e"],[47,188,20,57],[47,191,20,57,"t"],[47,192,20,57],[47,195,20,57,"r"],[47,196,20,57],[47,201,20,57,"e"],[47,202,20,57],[48,2,20,57],[48,11,20,57,"_interopRequireWildcard"],[48,35,20,57,"e"],[48,36,20,57],[48,38,20,57,"r"],[48,39,20,57],[48,48,20,57,"r"],[48,49,20,57],[48,53,20,57,"e"],[48,54,20,57],[48,58,20,57,"e"],[48,59,20,57],[48,60,20,57,"__esModule"],[48,70,20,57],[48,79,20,57,"e"],[48,80,20,57],[48,95,20,57,"e"],[48,96,20,57],[48,119,20,57,"e"],[48,120,20,57],[48,145,20,57,"e"],[48,146,20,57],[48,157,20,57,"default"],[48,164,20,57],[48,166,20,57,"e"],[48,167,20,57],[48,175,20,57,"t"],[48,176,20,57],[48,179,20,57,"_getRequireWildcardCache"],[48,203,20,57],[48,204,20,57,"r"],[48,205,20,57],[48,212,20,57,"t"],[48,213,20,57],[48,217,20,57,"t"],[48,218,20,57],[48,219,20,57,"has"],[48,222,20,57],[48,223,20,57,"e"],[48,224,20,57],[48,234,20,57,"t"],[48,235,20,57],[48,236,20,57,"get"],[48,239,20,57],[48,240,20,57,"e"],[48,241,20,57],[48,248,20,57,"n"],[48,249,20,57],[48,254,20,57,"__proto__"],[48,263,20,57],[48,273,20,57,"a"],[48,274,20,57],[48,277,20,57,"Object"],[48,283,20,57],[48,284,20,57,"defineProperty"],[48,298,20,57],[48,302,20,57,"Object"],[48,308,20,57],[48,309,20,57,"getOwnPropertyDescriptor"],[48,333,20,57],[48,344,20,57,"u"],[48,345,20,57],[48,349,20,57,"e"],[48,350,20,57],[48,370,20,57,"u"],[48,371,20,57],[48,378,20,57,"hasOwnProperty"],[48,392,20,57],[48,393,20,57,"call"],[48,397,20,57],[48,398,20,57,"e"],[48,399,20,57],[48,401,20,57,"u"],[48,402,20,57],[48,411,20,57,"i"],[48,412,20,57],[48,415,20,57,"a"],[48,416,20,57],[48,419,20,57,"Object"],[48,425,20,57],[48,426,20,57,"getOwnPropertyDescriptor"],[48,450,20,57],[48,451,20,57,"e"],[48,452,20,57],[48,454,20,57,"u"],[48,455,20,57],[48,465,20,57,"i"],[48,466,20,57],[48,471,20,57,"i"],[48,472,20,57],[48,473,20,57,"get"],[48,476,20,57],[48,480,20,57,"i"],[48,481,20,57],[48,482,20,57,"set"],[48,485,20,57],[48,489,20,57,"Object"],[48,495,20,57],[48,496,20,57,"defineProperty"],[48,510,20,57],[48,511,20,57,"n"],[48,512,20,57],[48,514,20,57,"u"],[48,515,20,57],[48,517,20,57,"i"],[48,518,20,57],[48,522,20,57,"n"],[48,523,20,57],[48,524,20,57,"u"],[48,525,20,57],[48,529,20,57,"e"],[48,530,20,57],[48,531,20,57,"u"],[48,532,20,57],[48,544,20,57,"n"],[48,545,20,57],[48,546,20,57,"default"],[48,553,20,57],[48,556,20,57,"e"],[48,557,20,57],[48,559,20,57,"t"],[48,560,20,57],[48,564,20,57,"t"],[48,565,20,57],[48,566,20,57,"set"],[48,569,20,57],[48,570,20,57,"e"],[48,571,20,57],[48,573,20,57,"n"],[48,574,20,57],[48,577,20,57,"n"],[48,578,20,57],[49,2,20,57],[49,11,20,57,"_callSuper"],[49,22,20,57,"t"],[49,23,20,57],[49,25,20,57,"o"],[49,26,20,57],[49,28,20,57,"e"],[49,29,20,57],[49,40,20,57,"o"],[49,41,20,57],[49,48,20,57,"_getPrototypeOf2"],[49,64,20,57],[49,65,20,57,"default"],[49,72,20,57],[49,74,20,57,"o"],[49,75,20,57],[49,82,20,57,"_possibleConstructorReturn2"],[49,109,20,57],[49,110,20,57,"default"],[49,117,20,57],[49,119,20,57,"t"],[49,120,20,57],[49,122,20,57,"_isNativeReflectConstruct"],[49,147,20,57],[49,152,20,57,"Reflect"],[49,159,20,57],[49,160,20,57,"construct"],[49,169,20,57],[49,170,20,57,"o"],[49,171,20,57],[49,173,20,57,"e"],[49,174,20,57],[49,186,20,57,"_getPrototypeOf2"],[49,202,20,57],[49,203,20,57,"default"],[49,210,20,57],[49,212,20,57,"t"],[49,213,20,57],[49,215,20,57,"constructor"],[49,226,20,57],[49,230,20,57,"o"],[49,231,20,57],[49,232,20,57,"apply"],[49,237,20,57],[49,238,20,57,"t"],[49,239,20,57],[49,241,20,57,"e"],[49,242,20,57],[50,2,20,57],[50,11,20,57,"_isNativeReflectConstruct"],[50,37,20,57],[50,51,20,57,"t"],[50,52,20,57],[50,56,20,57,"Boolean"],[50,63,20,57],[50,64,20,57,"prototype"],[50,73,20,57],[50,74,20,57,"valueOf"],[50,81,20,57],[50,82,20,57,"call"],[50,86,20,57],[50,87,20,57,"Reflect"],[50,94,20,57],[50,95,20,57,"construct"],[50,104,20,57],[50,105,20,57,"Boolean"],[50,112,20,57],[50,145,20,57,"t"],[50,146,20,57],[50,159,20,57,"_isNativeReflectConstruct"],[50,184,20,57],[50,196,20,57,"_isNativeReflectConstruct"],[50,197,20,57],[50,210,20,57,"t"],[50,211,20,57],[51,2,66,0],[51,6,66,6,"observers"],[51,15,66,50],[51,18,66,53],[51,22,66,57,"Set"],[51,25,66,60],[51,26,66,61],[51,27,66,62],[52,2,67,0],[52,6,67,6,"ignorePatterns"],[52,20,67,40],[52,23,67,43],[52,27,67,47,"Set"],[52,30,67,50],[52,31,67,51],[52,32,67,52],[53,2,68,0],[53,6,68,4,"logs"],[53,10,68,20],[53,13,68,23],[53,17,68,27,"Set"],[53,20,68,30],[53,21,68,31],[53,22,68,32],[54,2,69,0],[54,6,69,4,"updateTimeout"],[54,19,69,89],[54,22,69,92],[54,26,69,96],[55,2,70,0],[55,6,70,4,"_isDisabled"],[55,17,70,15],[55,20,70,18],[55,25,70,23],[56,2,71,0],[56,6,71,4,"_selectedIndex"],[56,20,71,18],[56,23,71,21],[56,24,71,22],[56,25,71,23],[57,2,73,0],[57,6,73,6,"LOGBOX_ERROR_MESSAGE"],[57,26,73,26],[57,29,74,2],[57,101,74,74],[58,2,76,0],[58,11,76,9,"getNextState"],[58,23,76,21,"getNextState"],[58,24,76,21],[58,26,76,24],[59,4,77,2],[59,11,77,9],[60,6,78,4,"logs"],[60,10,78,8],[61,6,79,4,"isDisabled"],[61,16,79,14],[61,18,79,16,"_isDisabled"],[61,29,79,27],[62,6,80,4,"selectedLogIndex"],[62,22,80,20],[62,24,80,22,"_selectedIndex"],[63,4,81,2],[63,5,81,3],[64,2,82,0],[65,2,84,7],[65,11,84,16,"reportLogBoxError"],[65,28,84,33,"reportLogBoxError"],[65,29,84,34,"error"],[65,34,84,54],[65,36,84,56,"componentStack"],[65,50,84,79],[65,52,84,87],[66,4,85,2],[66,8,85,8,"ExceptionsManager"],[66,25,85,25],[66,28,85,28,"require"],[66,35,85,35],[66,36,85,35,"_dependencyMap"],[66,50,85,35],[66,86,85,66],[66,87,85,67],[66,88,85,68,"default"],[66,95,85,75],[67,4,87,2],[67,8,87,6,"componentStack"],[67,22,87,20],[67,26,87,24],[67,30,87,28],[67,32,87,30],[68,6,88,4,"error"],[68,11,88,9],[68,12,88,10,"componentStack"],[68,26,88,24],[68,29,88,27,"componentStack"],[68,43,88,41],[69,4,89,2],[70,4,90,2,"ExceptionsManager"],[70,21,90,19],[70,22,90,20,"handleException"],[70,37,90,35],[70,38,90,36,"error"],[70,43,90,41],[70,44,90,42],[71,2,91,0],[72,2,93,7],[72,11,93,16,"reportUnexpectedLogBoxError"],[72,38,93,43,"reportUnexpectedLogBoxError"],[72,39,93,44,"error"],[72,44,93,64],[72,46,93,66,"componentStack"],[72,60,93,89],[72,62,93,97],[73,4,94,2,"error"],[73,9,94,7],[73,10,94,8,"message"],[73,17,94,15],[73,20,94,18],[73,23,94,21,"LOGBOX_ERROR_MESSAGE"],[73,43,94,41],[73,50,94,48,"error"],[73,55,94,53],[73,56,94,54,"message"],[73,63,94,61],[73,65,94,63],[74,4,95,2],[74,11,95,9,"reportLogBoxError"],[74,28,95,26],[74,29,95,27,"error"],[74,34,95,32],[74,36,95,34,"componentStack"],[74,50,95,48],[74,51,95,49],[75,2,96,0],[76,2,98,7],[76,11,98,16,"isLogBoxErrorMessage"],[76,31,98,36,"isLogBoxErrorMessage"],[76,32,98,37,"message"],[76,39,98,52],[76,41,98,63],[77,4,99,2],[77,11,99,9],[77,18,99,16,"message"],[77,25,99,23],[77,30,99,28],[77,38,99,36],[77,42,99,40,"message"],[77,49,99,47],[77,50,99,48,"includes"],[77,58,99,56],[77,59,99,57,"LOGBOX_ERROR_MESSAGE"],[77,79,99,77],[77,80,99,78],[78,2,100,0],[79,2,102,7],[79,11,102,16,"isMessageIgnored"],[79,27,102,32,"isMessageIgnored"],[79,28,102,33,"message"],[79,35,102,48],[79,37,102,59],[80,4,103,2],[80,9,103,7],[80,13,103,13,"pattern"],[80,20,103,20],[80,24,103,24,"ignorePatterns"],[80,38,103,38],[80,40,103,40],[81,6,104,4],[81,10,105,7,"pattern"],[81,17,105,14],[81,29,105,26,"RegExp"],[81,35,105,32],[81,39,105,36,"pattern"],[81,46,105,43],[81,47,105,44,"test"],[81,51,105,48],[81,52,105,49,"message"],[81,59,105,56],[81,60,105,57],[81,64,106,7],[81,71,106,14,"pattern"],[81,78,106,21],[81,83,106,26],[81,91,106,34],[81,95,106,38,"message"],[81,102,106,45],[81,103,106,46,"includes"],[81,111,106,54],[81,112,106,55,"pattern"],[81,119,106,62],[81,120,106,64],[81,122,107,6],[82,8,108,6],[82,15,108,13],[82,19,108,17],[83,6,109,4],[84,4,110,2],[85,4,111,2],[85,11,111,9],[85,16,111,14],[86,2,112,0],[87,2,114,0],[87,11,114,9,"setImmediateShim"],[87,27,114,25,"setImmediateShim"],[87,28,114,26,"callback"],[87,36,114,46],[87,38,114,48],[88,4,115,2],[88,8,115,6],[88,9,115,7,"global"],[88,15,115,13],[88,16,115,14,"setImmediate"],[88,28,115,26],[88,30,115,28],[89,6,116,4],[89,13,116,11,"setTimeout"],[89,23,116,21],[89,24,116,22,"callback"],[89,32,116,30],[89,34,116,32],[89,35,116,33],[89,36,116,34],[90,4,117,2],[91,4,118,2],[91,11,118,9,"global"],[91,17,118,15],[91,18,118,16,"setImmediate"],[91,30,118,28],[91,31,118,29,"callback"],[91,39,118,37],[91,40,118,38],[92,2,119,0],[93,2,121,0],[93,11,121,9,"handleUpdate"],[93,23,121,21,"handleUpdate"],[93,24,121,21],[93,26,121,30],[94,4,122,2],[94,8,122,6,"updateTimeout"],[94,21,122,19],[94,25,122,23],[94,29,122,27],[94,31,122,29],[95,6,123,4,"updateTimeout"],[95,19,123,17],[95,22,123,20,"setImmediateShim"],[95,38,123,36],[95,39,123,37],[95,45,123,43],[96,8,124,6,"updateTimeout"],[96,21,124,19],[96,24,124,22],[96,28,124,26],[97,8,125,6],[97,12,125,12,"nextState"],[97,21,125,21],[97,24,125,24,"getNextState"],[97,36,125,36],[97,37,125,37],[97,38,125,38],[98,8,126,6,"observers"],[98,17,126,15],[98,18,126,16,"forEach"],[98,25,126,23],[98,26,126,24,"_ref"],[98,30,126,24],[99,10,126,24],[99,14,126,27,"observer"],[99,22,126,35],[99,25,126,35,"_ref"],[99,29,126,35],[99,30,126,27,"observer"],[99,38,126,35],[100,10,126,35],[100,17,126,42,"observer"],[100,25,126,50],[100,26,126,51,"nextState"],[100,35,126,60],[100,36,126,61],[101,8,126,61],[101,10,126,62],[102,6,127,4],[102,7,127,5],[102,8,127,6],[103,4,128,2],[104,2,129,0],[105,2,131,0],[105,11,131,9,"appendNewLog"],[105,23,131,21,"appendNewLog"],[105,24,131,22,"newLog"],[105,30,131,39],[105,32,131,47],[106,4,132,2],[107,4,133,2],[108,4,134,2],[108,8,134,6,"isMessageIgnored"],[108,24,134,22],[108,25,134,23,"newLog"],[108,31,134,29],[108,32,134,30,"message"],[108,39,134,37],[108,40,134,38,"content"],[108,47,134,45],[108,48,134,46],[108,50,134,48],[109,6,135,4],[110,4,136,2],[112,4,138,2],[113,4,139,2],[114,4,140,2],[115,4,141,2],[115,8,141,8,"lastLog"],[115,15,141,15],[115,18,141,18,"Array"],[115,23,141,23],[115,24,141,24,"from"],[115,28,141,28],[115,29,141,29,"logs"],[115,33,141,33],[115,34,141,34],[115,35,141,35,"pop"],[115,38,141,38],[115,39,141,39],[115,40,141,40],[116,4,142,2],[116,8,142,6,"lastLog"],[116,15,142,13],[116,19,142,17,"lastLog"],[116,26,142,24],[116,27,142,25,"category"],[116,35,142,33],[116,40,142,38,"newLog"],[116,46,142,44],[116,47,142,45,"category"],[116,55,142,53],[116,57,142,55],[117,6,143,4,"lastLog"],[117,13,143,11],[117,14,143,12,"incrementCount"],[117,28,143,26],[117,29,143,27],[117,30,143,28],[118,6,144,4,"handleUpdate"],[118,18,144,16],[118,19,144,17],[118,20,144,18],[119,6,145,4],[120,4,146,2],[121,4,148,2],[121,8,148,6,"newLog"],[121,14,148,12],[121,15,148,13,"level"],[121,20,148,18],[121,25,148,23],[121,32,148,30],[121,34,148,32],[122,6,149,4],[123,6,150,4],[124,6,151,4],[125,6,152,4],[125,10,152,10,"OPTIMISTIC_WAIT_TIME"],[125,30,152,30],[125,33,152,33],[125,37,152,37],[126,6,154,4],[126,10,154,8,"addPendingLog"],[126,23,154,42],[126,26,154,45,"addPendingLog"],[126,27,154,45],[126,32,154,51],[127,8,155,6,"logs"],[127,12,155,10],[127,13,155,11,"add"],[127,16,155,14],[127,17,155,15,"newLog"],[127,23,155,21],[127,24,155,22],[128,8,156,6],[128,12,156,10,"_selectedIndex"],[128,26,156,24],[128,29,156,27],[128,30,156,28],[128,32,156,30],[129,10,157,8,"setSelectedLog"],[129,24,157,22],[129,25,157,23,"logs"],[129,29,157,27],[129,30,157,28,"size"],[129,34,157,32],[129,37,157,35],[129,38,157,36],[129,39,157,37],[130,8,158,6],[130,9,158,7],[130,15,158,13],[131,10,159,8,"handleUpdate"],[131,22,159,20],[131,23,159,21],[131,24,159,22],[132,8,160,6],[133,8,161,6,"addPendingLog"],[133,21,161,19],[133,24,161,22],[133,28,161,26],[134,6,162,4],[134,7,162,5],[135,6,164,4],[135,10,164,10,"optimisticTimeout"],[135,27,164,27],[135,30,164,30,"setTimeout"],[135,40,164,40],[135,41,164,41],[135,47,164,47],[136,8,165,6],[136,12,165,10,"addPendingLog"],[136,25,165,23],[136,27,165,25],[137,10,166,8,"addPendingLog"],[137,23,166,21],[137,24,166,22],[137,25,166,23],[138,8,167,6],[139,6,168,4],[139,7,168,5],[139,9,168,7,"OPTIMISTIC_WAIT_TIME"],[139,29,168,27],[139,30,168,28],[141,6,170,4],[142,6,171,4,"newLog"],[142,12,171,10],[142,13,171,11,"symbolicate"],[142,24,171,22],[142,25,171,23],[142,36,171,34],[142,37,171,35],[143,6,173,4,"newLog"],[143,12,173,10],[143,13,173,11,"symbolicate"],[143,24,173,22],[143,25,173,23],[143,32,173,30],[143,34,173,33,"status"],[143,40,173,39],[143,44,173,44],[144,8,174,6],[144,12,174,10,"addPendingLog"],[144,25,174,23],[144,29,174,27,"status"],[144,35,174,33],[144,40,174,38],[144,49,174,47],[144,51,174,49],[145,10,175,8,"addPendingLog"],[145,23,175,21],[145,24,175,22],[145,25,175,23],[146,10,176,8,"clearTimeout"],[146,22,176,20],[146,23,176,21,"optimisticTimeout"],[146,40,176,38],[146,41,176,39],[147,8,177,6],[147,9,177,7],[147,15,177,13],[147,19,177,17,"status"],[147,25,177,23],[147,30,177,28],[147,39,177,37],[147,41,177,39],[148,10,178,8],[149,10,179,8,"handleUpdate"],[149,22,179,20],[149,23,179,21],[149,24,179,22],[150,8,180,6],[151,6,181,4],[151,7,181,5],[151,8,181,6],[152,4,182,2],[152,5,182,3],[152,11,182,9],[152,15,182,13,"newLog"],[152,21,182,19],[152,22,182,20,"level"],[152,27,182,25],[152,32,182,30],[152,40,182,38],[152,42,182,40],[153,6,183,4,"logs"],[153,10,183,8],[153,11,183,9,"add"],[153,14,183,12],[153,15,183,13,"newLog"],[153,21,183,19],[153,22,183,20],[154,6,184,4,"setSelectedLog"],[154,20,184,18],[154,21,184,19,"logs"],[154,25,184,23],[154,26,184,24,"size"],[154,30,184,28],[154,33,184,31],[154,34,184,32],[154,35,184,33],[155,4,185,2],[155,5,185,3],[155,11,185,9],[156,6,186,4,"logs"],[156,10,186,8],[156,11,186,9,"add"],[156,14,186,12],[156,15,186,13,"newLog"],[156,21,186,19],[156,22,186,20],[157,6,187,4,"handleUpdate"],[157,18,187,16],[157,19,187,17],[157,20,187,18],[158,4,188,2],[159,2,189,0],[160,2,191,7],[160,11,191,16,"addLog"],[160,17,191,22,"addLog"],[160,18,191,23,"log"],[160,21,191,35],[160,23,191,43],[161,4,192,2],[161,8,192,8,"errorForStackTrace"],[161,26,192,26],[161,29,192,29],[161,33,192,33,"Error"],[161,38,192,38],[161,39,192,39],[161,40,192,40],[163,4,194,2],[164,4,195,2],[165,4,196,2,"setImmediate"],[165,16,196,14],[165,17,196,15],[165,23,196,21],[166,6,197,4],[166,10,197,8],[167,8,198,6],[167,12,198,12,"stack"],[167,17,198,17],[167,20,198,20],[167,24,198,20,"parseErrorStack"],[167,48,198,35],[167,50,198,36,"errorForStackTrace"],[167,68,198,54],[167,70,198,56,"stack"],[167,75,198,61],[167,76,198,62],[168,8,200,6,"appendNewLog"],[168,20,200,18],[168,21,201,8],[168,26,201,12,"LogBoxLog"],[168,53,201,12],[168,54,201,12,"LogBoxLog"],[168,78,201,21],[168,80,201,22],[169,10,202,10,"level"],[169,15,202,15],[169,17,202,17,"log"],[169,20,202,20],[169,21,202,21,"level"],[169,26,202,26],[170,10,203,10,"message"],[170,17,203,17],[170,19,203,19,"log"],[170,22,203,22],[170,23,203,23,"message"],[170,30,203,30],[171,10,204,10,"isComponentError"],[171,26,204,26],[171,28,204,28],[171,33,204,33],[172,10,205,10,"stack"],[172,15,205,15],[173,10,206,10,"category"],[173,18,206,18],[173,20,206,20,"log"],[173,23,206,23],[173,24,206,24,"category"],[173,32,206,32],[174,10,207,10,"componentStack"],[174,24,207,24],[174,26,207,26,"log"],[174,29,207,29],[174,30,207,30,"componentStack"],[175,8,208,8],[175,9,208,9],[175,10,209,6],[175,11,209,7],[176,6,210,4],[176,7,210,5],[176,8,210,6],[176,15,210,13,"error"],[176,20,210,18],[176,22,210,20],[177,8,211,6,"reportUnexpectedLogBoxError"],[177,35,211,33],[177,36,211,34,"error"],[177,41,211,39],[177,42,211,40],[178,6,212,4],[179,4,213,2],[179,5,213,3],[179,6,213,4],[180,2,214,0],[181,2,216,7],[181,11,216,16,"addException"],[181,23,216,28,"addException"],[181,24,216,29,"error"],[181,29,216,57],[181,31,216,65],[182,4,217,2],[183,4,218,2],[184,4,219,2,"setImmediate"],[184,16,219,14],[184,17,219,15],[184,23,219,21],[185,6,220,4],[185,10,220,8],[186,8,221,6,"appendNewLog"],[186,20,221,18],[186,21,221,19],[186,26,221,23,"LogBoxLog"],[186,53,221,23],[186,54,221,23,"LogBoxLog"],[186,78,221,32],[186,80,221,33],[186,84,221,33,"parseLogBoxException"],[186,111,221,33],[186,112,221,33,"parseLogBoxException"],[186,152,221,53],[186,154,221,54,"error"],[186,159,221,59],[186,160,221,60],[186,161,221,61],[186,162,221,62],[187,6,222,4],[187,7,222,5],[187,8,222,6],[187,15,222,13,"loggingError"],[187,27,222,25],[187,29,222,27],[188,8,223,6,"reportUnexpectedLogBoxError"],[188,35,223,33],[188,36,223,34,"loggingError"],[188,48,223,46],[188,49,223,47],[189,6,224,4],[190,4,225,2],[190,5,225,3],[190,6,225,4],[191,2,226,0],[192,2,228,7],[192,11,228,16,"symbolicateLogNow"],[192,28,228,33,"symbolicateLogNow"],[192,29,228,34,"type"],[192,33,228,49],[192,35,228,51,"log"],[192,38,228,65],[192,40,228,67],[193,4,229,2,"log"],[193,7,229,5],[193,8,229,6,"symbolicate"],[193,19,229,17],[193,20,229,18,"type"],[193,24,229,22],[193,26,229,24],[193,32,229,30],[194,6,230,4,"handleUpdate"],[194,18,230,16],[194,19,230,17],[194,20,230,18],[195,4,231,2],[195,5,231,3],[195,6,231,4],[196,2,232,0],[197,2,234,7],[197,11,234,16,"retrySymbolicateLogNow"],[197,33,234,38,"retrySymbolicateLogNow"],[197,34,234,39,"type"],[197,38,234,54],[197,40,234,56,"log"],[197,43,234,70],[197,45,234,72],[198,4,235,2,"log"],[198,7,235,5],[198,8,235,6,"retrySymbolicate"],[198,24,235,22],[198,25,235,23,"type"],[198,29,235,27],[198,31,235,29],[198,37,235,35],[199,6,236,4,"handleUpdate"],[199,18,236,16],[199,19,236,17],[199,20,236,18],[200,4,237,2],[200,5,237,3],[200,6,237,4],[201,2,238,0],[202,2,240,7],[202,11,240,16,"symbolicateLogLazy"],[202,29,240,34,"symbolicateLogLazy"],[202,30,240,35,"type"],[202,34,240,50],[202,36,240,52,"log"],[202,39,240,66],[202,41,240,68],[203,4,241,2,"log"],[203,7,241,5],[203,8,241,6,"symbolicate"],[203,19,241,17],[203,20,241,18,"type"],[203,24,241,22],[203,25,241,23],[204,2,242,0],[205,2,244,7],[205,11,244,16,"clear"],[205,16,244,21,"clear"],[205,17,244,21],[205,19,244,30],[206,4,245,2],[206,8,245,6,"logs"],[206,12,245,10],[206,13,245,11,"size"],[206,17,245,15],[206,20,245,18],[206,21,245,19],[206,23,245,21],[207,6,246,4,"logs"],[207,10,246,8],[207,13,246,11],[207,17,246,15,"Set"],[207,20,246,18],[207,21,246,19],[207,22,246,20],[208,6,247,4,"setSelectedLog"],[208,20,247,18],[208,21,247,19],[208,22,247,20],[208,23,247,21],[208,24,247,22],[209,4,248,2],[210,2,249,0],[211,2,251,7],[211,11,251,16,"setSelectedLog"],[211,25,251,30,"setSelectedLog"],[211,26,251,31,"proposedNewIndex"],[211,42,251,55],[211,44,251,63],[212,4,252,2],[212,8,252,8,"oldIndex"],[212,16,252,16],[212,19,252,19,"_selectedIndex"],[212,33,252,33],[213,4,253,2],[213,8,253,6,"newIndex"],[213,16,253,14],[213,19,253,17,"proposedNewIndex"],[213,35,253,33],[214,4,255,2],[214,8,255,8,"logArray"],[214,16,255,16],[214,19,255,19,"Array"],[214,24,255,24],[214,25,255,25,"from"],[214,29,255,29],[214,30,255,30,"logs"],[214,34,255,34],[214,35,255,35],[215,4,256,2],[215,8,256,6,"index"],[215,13,256,11],[215,16,256,14,"logArray"],[215,24,256,22],[215,25,256,23,"length"],[215,31,256,29],[215,34,256,32],[215,35,256,33],[216,4,257,2],[216,11,257,9,"index"],[216,16,257,14],[216,20,257,18],[216,21,257,19],[216,23,257,21],[217,6,258,4],[218,6,259,4],[218,10,259,8,"logArray"],[218,18,259,16],[218,19,259,17,"index"],[218,24,259,22],[218,25,259,23],[218,26,259,24,"level"],[218,31,259,29],[218,36,259,34],[218,44,259,42],[218,46,259,44],[219,8,260,6,"newIndex"],[219,16,260,14],[219,19,260,17,"index"],[219,24,260,22],[220,8,261,6],[221,6,262,4],[222,6,263,4,"index"],[222,11,263,9],[222,15,263,13],[222,16,263,14],[223,4,264,2],[224,4,265,2,"_selectedIndex"],[224,18,265,16],[224,21,265,19,"newIndex"],[224,29,265,27],[225,4,266,2,"handleUpdate"],[225,16,266,14],[225,17,266,15],[225,18,266,16],[226,4,267,2],[226,8,267,6,"NativeLogBox"],[226,29,267,18],[226,31,267,20],[227,6,268,4,"setTimeout"],[227,16,268,14],[227,17,268,15],[227,23,268,21],[228,8,269,6],[228,12,269,10,"oldIndex"],[228,20,269,18],[228,23,269,21],[228,24,269,22],[228,28,269,26,"newIndex"],[228,36,269,34],[228,40,269,38],[228,41,269,39],[228,43,269,41],[229,10,270,8,"NativeLogBox"],[229,31,270,20],[229,32,270,21,"show"],[229,36,270,25],[229,37,270,26],[229,38,270,27],[230,8,271,6],[230,9,271,7],[230,15,271,13],[230,19,271,17,"oldIndex"],[230,27,271,25],[230,31,271,29],[230,32,271,30],[230,36,271,34,"newIndex"],[230,44,271,42],[230,47,271,45],[230,48,271,46],[230,50,271,48],[231,10,272,8,"NativeLogBox"],[231,31,272,20],[231,32,272,21,"hide"],[231,36,272,25],[231,37,272,26],[231,38,272,27],[232,8,273,6],[233,6,274,4],[233,7,274,5],[233,9,274,7],[233,10,274,8],[233,11,274,9],[234,4,275,2],[235,2,276,0],[236,2,278,7],[236,11,278,16,"clearWarnings"],[236,24,278,29,"clearWarnings"],[236,25,278,29],[236,27,278,38],[237,4,279,2],[237,8,279,8,"newLogs"],[237,15,279,15],[237,18,279,18,"Array"],[237,23,279,23],[237,24,279,24,"from"],[237,28,279,28],[237,29,279,29,"logs"],[237,33,279,33],[237,34,279,34],[237,35,279,35,"filter"],[237,41,279,41],[237,42,279,43,"log"],[237,45,279,46],[237,49,279,51,"log"],[237,52,279,54],[237,53,279,55,"level"],[237,58,279,60],[237,63,279,65],[237,69,279,71],[237,70,279,72],[238,4,280,2],[238,8,280,6,"newLogs"],[238,15,280,13],[238,16,280,14,"length"],[238,22,280,20],[238,27,280,25,"logs"],[238,31,280,29],[238,32,280,30,"size"],[238,36,280,34],[238,38,280,36],[239,6,281,4,"logs"],[239,10,281,8],[239,13,281,11],[239,17,281,15,"Set"],[239,20,281,18],[239,21,281,19,"newLogs"],[239,28,281,26],[239,29,281,27],[240,6,282,4,"setSelectedLog"],[240,20,282,18],[240,21,282,19],[240,22,282,20],[240,23,282,21],[240,24,282,22],[241,6,283,4,"handleUpdate"],[241,18,283,16],[241,19,283,17],[241,20,283,18],[242,4,284,2],[243,2,285,0],[244,2,287,7],[244,11,287,16,"clearErrors"],[244,22,287,27,"clearErrors"],[244,23,287,27],[244,25,287,36],[245,4,288,2],[245,8,288,8,"newLogs"],[245,15,288,15],[245,18,288,18,"Array"],[245,23,288,23],[245,24,288,24,"from"],[245,28,288,28],[245,29,288,29,"logs"],[245,33,288,33],[245,34,288,34],[245,35,288,35,"filter"],[245,41,288,41],[245,42,288,43,"log"],[245,45,288,46],[245,49,288,51,"log"],[245,52,288,54],[245,53,288,55,"level"],[245,58,288,60],[245,63,288,65],[245,70,288,72],[245,74,288,76,"log"],[245,77,288,79],[245,78,288,80,"level"],[245,83,288,85],[245,88,288,90],[245,95,288,97],[245,96,288,98],[246,4,289,2],[246,8,289,6,"newLogs"],[246,15,289,13],[246,16,289,14,"length"],[246,22,289,20],[246,27,289,25,"logs"],[246,31,289,29],[246,32,289,30,"size"],[246,36,289,34],[246,38,289,36],[247,6,290,4,"logs"],[247,10,290,8],[247,13,290,11],[247,17,290,15,"Set"],[247,20,290,18],[247,21,290,19,"newLogs"],[247,28,290,26],[247,29,290,27],[248,6,291,4,"setSelectedLog"],[248,20,291,18],[248,21,291,19],[248,22,291,20],[248,23,291,21],[248,24,291,22],[249,4,292,2],[250,2,293,0],[251,2,295,7],[251,11,295,16,"dismiss"],[251,18,295,23,"dismiss"],[251,19,295,24,"log"],[251,22,295,38],[251,24,295,46],[252,4,296,2],[252,8,296,6,"logs"],[252,12,296,10],[252,13,296,11,"has"],[252,16,296,14],[252,17,296,15,"log"],[252,20,296,18],[252,21,296,19],[252,23,296,21],[253,6,297,4,"logs"],[253,10,297,8],[253,11,297,9,"delete"],[253,17,297,15],[253,18,297,16,"log"],[253,21,297,19],[253,22,297,20],[254,6,298,4,"handleUpdate"],[254,18,298,16],[254,19,298,17],[254,20,298,18],[255,4,299,2],[256,2,300,0],[257,2,302,7],[257,11,302,16,"getIgnorePatterns"],[257,28,302,33,"getIgnorePatterns"],[257,29,302,33],[257,31,302,53],[258,4,303,2],[258,11,303,9,"Array"],[258,16,303,14],[258,17,303,15,"from"],[258,21,303,19],[258,22,303,20,"ignorePatterns"],[258,36,303,34],[258,37,303,35],[259,2,304,0],[260,2,306,7],[260,11,306,16,"addIgnorePatterns"],[260,28,306,33,"addIgnorePatterns"],[260,29,306,34,"patterns"],[260,37,306,59],[260,39,306,67],[261,4,307,2],[261,8,307,8,"existingSize"],[261,20,307,20],[261,23,307,23,"ignorePatterns"],[261,37,307,37],[261,38,307,38,"size"],[261,42,307,42],[262,4,308,2],[263,4,309,2],[264,4,310,2,"patterns"],[264,12,310,10],[264,13,310,11,"forEach"],[264,20,310,18],[264,21,310,20,"pattern"],[264,28,310,42],[264,32,310,47],[265,6,311,4],[265,10,311,8,"pattern"],[265,17,311,15],[265,29,311,27,"RegExp"],[265,35,311,33],[265,37,311,35],[266,8,312,6],[266,13,312,11],[266,17,312,17,"existingPattern"],[266,32,312,32],[266,36,312,36,"ignorePatterns"],[266,50,312,50],[266,52,312,52],[267,10,313,8],[267,14,314,10,"existingPattern"],[267,29,314,25],[267,41,314,37,"RegExp"],[267,47,314,43],[267,51,315,10,"existingPattern"],[267,66,315,25],[267,67,315,26,"toString"],[267,75,315,34],[267,76,315,35],[267,77,315,36],[267,82,315,41,"pattern"],[267,89,315,48],[267,90,315,49,"toString"],[267,98,315,57],[267,99,315,58],[267,100,315,59],[267,102,316,10],[268,12,317,10],[269,10,318,8],[270,8,319,6],[271,8,320,6,"ignorePatterns"],[271,22,320,20],[271,23,320,21,"add"],[271,26,320,24],[271,27,320,25,"pattern"],[271,34,320,32],[271,35,320,33],[272,6,321,4],[273,6,322,4,"ignorePatterns"],[273,20,322,18],[273,21,322,19,"add"],[273,24,322,22],[273,25,322,23,"pattern"],[273,32,322,30],[273,33,322,31],[274,4,323,2],[274,5,323,3],[274,6,323,4],[275,4,324,2],[275,8,324,6,"ignorePatterns"],[275,22,324,20],[275,23,324,21,"size"],[275,27,324,25],[275,32,324,30,"existingSize"],[275,44,324,42],[275,46,324,44],[276,6,325,4],[277,4,326,2],[278,4,327,2],[279,4,328,2],[280,4,329,2],[281,4,330,2],[282,4,331,2,"logs"],[282,8,331,6],[282,11,331,9],[282,15,331,13,"Set"],[282,18,331,16],[282,19,331,17,"Array"],[282,24,331,22],[282,25,331,23,"from"],[282,29,331,27],[282,30,331,28,"logs"],[282,34,331,32],[282,35,331,33],[282,36,331,34,"filter"],[282,42,331,40],[282,43,331,42,"log"],[282,46,331,45],[282,50,331,50],[282,51,331,51,"isMessageIgnored"],[282,67,331,67],[282,68,331,68,"log"],[282,71,331,71],[282,72,331,72,"message"],[282,79,331,79],[282,80,331,80,"content"],[282,87,331,87],[282,88,331,88],[282,89,331,89],[282,90,331,90],[283,4,332,2,"handleUpdate"],[283,16,332,14],[283,17,332,15],[283,18,332,16],[284,2,333,0],[285,2,335,7],[285,11,335,16,"setDisabled"],[285,22,335,27,"setDisabled"],[285,23,335,28,"value"],[285,28,335,42],[285,30,335,50],[286,4,336,2],[286,8,336,6,"value"],[286,13,336,11],[286,18,336,16,"_isDisabled"],[286,29,336,27],[286,31,336,29],[287,6,337,4],[288,4,338,2],[289,4,339,2,"_isDisabled"],[289,15,339,13],[289,18,339,16,"value"],[289,23,339,21],[290,4,340,2,"handleUpdate"],[290,16,340,14],[290,17,340,15],[290,18,340,16],[291,2,341,0],[292,2,343,7],[292,11,343,16,"isDisabled"],[292,21,343,26,"isDisabled"],[292,22,343,26],[292,24,343,38],[293,4,344,2],[293,11,344,9,"_isDisabled"],[293,22,344,20],[294,2,345,0],[295,2,347,7],[295,11,347,16,"observe"],[295,18,347,23,"observe"],[295,19,347,24,"observer"],[295,27,347,42],[295,29,347,58],[296,4,348,2],[296,8,348,8,"subscription"],[296,20,348,20],[296,23,348,23],[297,6,348,25,"observer"],[298,4,348,34],[298,5,348,35],[299,4,349,2,"observers"],[299,13,349,11],[299,14,349,12,"add"],[299,17,349,15],[299,18,349,16,"subscription"],[299,30,349,28],[299,31,349,29],[300,4,351,2,"observer"],[300,12,351,10],[300,13,351,11,"getNextState"],[300,25,351,23],[300,26,351,24],[300,27,351,25],[300,28,351,26],[301,4,353,2],[301,11,353,9],[302,6,354,4,"unsubscribe"],[302,17,354,15,"unsubscribe"],[302,18,354,15],[302,20,354,24],[303,8,355,6,"observers"],[303,17,355,15],[303,18,355,16,"delete"],[303,24,355,22],[303,25,355,23,"subscription"],[303,37,355,35],[303,38,355,36],[304,6,356,4],[305,4,357,2],[305,5,357,3],[306,2,358,0],[307,2,360,0],[307,6,360,6,"emitter"],[307,13,360,13],[307,16,360,16],[307,20,360,20,"NativeEventEmitter"],[307,51,360,38],[307,52,360,39],[308,4,361,2,"addListener"],[308,15,361,13,"addListener"],[308,16,361,13],[308,18,361,16],[308,19,361,17],[308,20,361,18],[309,4,362,2,"removeListeners"],[309,19,362,17,"removeListeners"],[309,20,362,17],[309,22,362,20],[309,23,362,21],[310,2,363,0],[310,3,363,1],[310,4,363,2],[311,2,365,7],[311,11,365,16,"withSubscription"],[311,27,365,32,"withSubscription"],[311,28,365,33,"WrappedComponent"],[311,44,365,67],[311,46,365,94],[312,4,365,94],[312,8,366,8,"LogBoxStateSubscription"],[312,31,366,31],[312,57,366,31,"_React$Component"],[312,73,366,31],[313,6,371,4],[313,15,371,4,"LogBoxStateSubscription"],[313,39,371,16,"props"],[313,44,371,21],[313,46,371,23],[314,8,371,23],[314,12,371,23,"_this"],[314,17,371,23],[315,8,371,23],[315,12,371,23,"_classCallCheck2"],[315,28,371,23],[315,29,371,23,"default"],[315,36,371,23],[315,44,371,23,"LogBoxStateSubscription"],[315,67,371,23],[316,8,372,6,"_this"],[316,13,372,6],[316,16,372,6,"_callSuper"],[316,26,372,6],[316,33,372,6,"LogBoxStateSubscription"],[316,56,372,6],[316,59,372,12,"props"],[316,64,372,17],[317,8,372,19,"_this"],[317,13,372,19],[317,14,391,4,"state"],[317,19,391,9],[317,22,391,12],[318,10,392,6,"logs"],[318,14,392,10],[318,16,392,12],[318,20,392,16,"Set"],[318,23,392,19],[318,24,392,31],[318,25,392,32],[319,10,393,6,"isDisabled"],[319,20,393,16],[319,22,393,18],[319,27,393,23],[320,10,394,6,"hasError"],[320,18,394,14],[320,20,394,16],[320,25,394,21],[321,10,395,6,"selectedLogIndex"],[321,26,395,22],[321,28,395,24],[321,29,395,25],[322,8,396,4],[322,9,396,5],[323,8,396,5,"_this"],[323,13,396,5],[323,14,398,4,"retry"],[323,19,398,9],[323,22,398,12],[323,28,398,18],[324,10,399,6],[324,17,399,13],[324,21,399,17,"Promise"],[324,28,399,24],[324,29,399,32,"resolve"],[324,36,399,39],[324,40,399,44],[325,12,400,8,"_this"],[325,17,400,8],[325,18,400,13,"setState"],[325,26,400,21],[325,27,400,22],[326,14,400,24,"hasError"],[326,22,400,32],[326,24,400,34],[327,12,400,40],[327,13,400,41],[327,15,400,43],[327,21,400,49],[328,14,401,10,"resolve"],[328,21,401,17],[328,22,401,18],[328,23,401,19],[329,12,402,8],[329,13,402,9],[329,14,402,10],[330,10,403,6],[330,11,403,7],[330,12,403,8],[331,8,404,4],[331,9,404,5],[332,8,404,5,"_this"],[332,13,404,5],[332,14,436,4,"_handleDismiss"],[332,28,436,18],[332,31,436,21],[332,37,436,33],[333,10,437,6],[334,10,438,6],[335,10,439,6],[336,10,440,6],[336,14,440,6,"_this$state"],[336,25,440,6],[336,28,440,52,"_this"],[336,33,440,52],[336,34,440,57,"state"],[336,39,440,62],[337,12,440,14,"selectedLogIndex"],[337,28,440,30],[337,31,440,30,"_this$state"],[337,42,440,30],[337,43,440,14,"selectedLogIndex"],[337,59,440,30],[338,12,440,38,"stateLogs"],[338,21,440,47],[338,24,440,47,"_this$state"],[338,35,440,47],[338,36,440,32,"logs"],[338,40,440,36],[339,10,441,6],[339,14,441,12,"logsArray"],[339,23,441,21],[339,26,441,24,"Array"],[339,31,441,29],[339,32,441,30,"from"],[339,36,441,34],[339,37,441,35,"stateLogs"],[339,46,441,44],[339,47,441,45],[340,10,442,6],[340,14,442,10,"selectedLogIndex"],[340,30,442,26],[340,34,442,30],[340,38,442,34],[340,40,442,36],[341,12,443,8],[341,16,443,12,"logsArray"],[341,25,443,21],[341,26,443,22,"length"],[341,32,443,28],[341,35,443,31],[341,36,443,32],[341,40,443,36],[341,41,443,37],[341,43,443,39],[342,14,444,10,"setSelectedLog"],[342,28,444,24],[342,29,444,25],[342,30,444,26],[342,31,444,27],[342,32,444,28],[343,12,445,8],[343,13,445,9],[343,19,445,15],[343,23,445,19,"selectedLogIndex"],[343,39,445,35],[343,43,445,39,"logsArray"],[343,52,445,48],[343,53,445,49,"length"],[343,59,445,55],[343,62,445,58],[343,63,445,59],[343,65,445,61],[344,14,446,10,"setSelectedLog"],[344,28,446,24],[344,29,446,25,"selectedLogIndex"],[344,45,446,41],[344,48,446,44],[344,49,446,45],[344,50,446,46],[345,12,447,8],[346,12,449,8,"dismiss"],[346,19,449,15],[346,20,449,16,"logsArray"],[346,29,449,25],[346,30,449,26,"selectedLogIndex"],[346,46,449,42],[346,47,449,43],[346,48,449,44],[347,10,450,6],[348,8,451,4],[348,9,451,5],[349,8,451,5,"_this"],[349,13,451,5],[349,14,453,4,"_handleMinimize"],[349,29,453,19],[349,32,453,22],[349,38,453,34],[350,10,454,6,"setSelectedLog"],[350,24,454,20],[350,25,454,21],[350,26,454,22],[350,27,454,23],[350,28,454,24],[351,8,455,4],[351,9,455,5],[352,8,455,5,"_this"],[352,13,455,5],[352,14,457,4,"_handleSetSelectedLog"],[352,35,457,25],[352,38,457,29,"index"],[352,43,457,42],[352,47,457,53],[353,10,458,6,"setSelectedLog"],[353,24,458,20],[353,25,458,21,"index"],[353,30,458,26],[353,31,458,27],[354,8,459,4],[354,9,459,5],[355,8,374,6],[355,12,374,10,"process"],[355,19,374,17],[355,20,374,18,"env"],[355,23,374,21],[355,24,374,22,"NODE_ENV"],[355,32,374,30],[355,37,374,35],[355,50,374,48],[355,52,374,50],[356,10,375,8,"emitter"],[356,17,375,15],[356,18,375,16,"addListener"],[356,29,375,27],[356,30,375,28],[356,51,375,49],[356,53,375,51],[356,59,375,57],[357,12,376,10],[357,16,376,14,"_this"],[357,21,376,14],[357,22,376,19,"state"],[357,27,376,24],[357,28,376,25,"hasError"],[357,36,376,33],[357,38,376,35],[358,14,377,12,"_this"],[358,19,377,12],[358,20,377,17,"retry"],[358,25,377,22],[358,26,377,23],[358,27,377,24],[359,12,378,10],[360,10,379,8],[360,11,379,9],[360,12,379,10],[361,8,380,6],[362,8,380,7],[362,15,380,7,"_this"],[362,20,380,7],[363,6,381,4],[364,6,381,5],[364,10,381,5,"_inherits2"],[364,20,381,5],[364,21,381,5,"default"],[364,28,381,5],[364,30,381,5,"LogBoxStateSubscription"],[364,53,381,5],[364,55,381,5,"_React$Component"],[364,71,381,5],[365,6,381,5],[365,17,381,5,"_createClass2"],[365,30,381,5],[365,31,381,5,"default"],[365,38,381,5],[365,40,381,5,"LogBoxStateSubscription"],[365,63,381,5],[366,8,381,5,"key"],[366,11,381,5],[367,8,381,5,"value"],[367,13,381,5],[367,15,383,4],[367,24,383,4,"componentDidCatch"],[367,41,383,21,"componentDidCatch"],[367,42,383,22,"err"],[367,45,383,32],[367,47,383,34,"errorInfo"],[367,56,383,77],[367,58,383,79],[368,10,384,6],[369,0,385,0],[370,10,386,6,"reportLogBoxError"],[370,27,386,23],[370,28,386,24,"err"],[370,31,386,27],[370,33,386,29,"errorInfo"],[370,42,386,38],[370,43,386,39,"componentStack"],[370,57,386,53],[370,58,386,54],[371,8,387,4],[372,6,387,5],[373,8,387,5,"key"],[373,11,387,5],[374,8,387,5,"value"],[374,13,387,5],[374,15,406,4],[374,24,406,4,"render"],[374,30,406,10,"render"],[374,31,406,10],[374,33,406,13],[375,10,407,6],[375,30,408,8],[375,34,408,8,"_jsxDevRuntime"],[375,48,408,8],[375,49,408,8,"jsxDEV"],[375,55,408,8],[375,57,408,9,"require"],[375,64,408,9],[375,65,408,9,"_dependencyMap"],[375,79,408,9],[375,101,408,9,"LogContext"],[375,111,408,19],[375,112,408,20,"Provider"],[375,120,408,28],[376,12,409,10,"value"],[376,17,409,15],[376,19,409,17],[377,14,410,12,"selectedLogIndex"],[377,30,410,28],[377,32,410,30],[377,36,410,34],[377,37,410,35,"state"],[377,42,410,40],[377,43,410,41,"selectedLogIndex"],[377,59,410,57],[378,14,411,12,"isDisabled"],[378,24,411,22],[378,26,411,24],[378,30,411,28],[378,31,411,29,"state"],[378,36,411,34],[378,37,411,35,"isDisabled"],[378,47,411,45],[379,14,412,12,"logs"],[379,18,412,16],[379,20,412,18,"Array"],[379,25,412,23],[379,26,412,24,"from"],[379,30,412,28],[379,31,412,29],[379,35,412,33],[379,36,412,34,"state"],[379,41,412,39],[379,42,412,40,"logs"],[379,46,412,44],[380,12,413,10],[380,13,413,12],[381,12,413,12,"children"],[381,20,413,12],[381,23,414,11],[381,27,414,15],[381,28,414,16,"state"],[381,33,414,21],[381,34,414,22,"hasError"],[381,42,414,30],[381,45,414,33],[381,49,414,37],[381,52,414,40],[381,56,414,44],[381,57,414,45,"props"],[381,62,414,50],[381,63,414,51,"children"],[381,71,414,59],[381,86,415,10],[381,90,415,10,"_jsxDevRuntime"],[381,104,415,10],[381,105,415,10,"jsxDEV"],[381,111,415,10],[381,113,415,11,"WrappedComponent"],[381,129,415,27],[382,14,415,27,"fileName"],[382,22,415,27],[382,24,415,27,"_jsxFileName"],[382,36,415,27],[383,14,415,27,"lineNumber"],[383,24,415,27],[384,14,415,27,"columnNumber"],[384,26,415,27],[385,12,415,27],[385,19,415,29],[385,20,415,30],[386,10,415,30],[387,12,415,30,"fileName"],[387,20,415,30],[387,22,415,30,"_jsxFileName"],[387,34,415,30],[388,12,415,30,"lineNumber"],[388,22,415,30],[389,12,415,30,"columnNumber"],[389,24,415,30],[390,10,415,30],[390,17,416,29],[390,18,416,30],[391,8,418,4],[392,6,418,5],[393,8,418,5,"key"],[393,11,418,5],[394,8,418,5,"value"],[394,13,418,5],[394,15,420,4],[394,24,420,4,"componentDidMount"],[394,41,420,21,"componentDidMount"],[394,42,420,21],[394,44,420,30],[395,10,421,6],[395,14,421,10],[395,15,421,11,"_subscription"],[395,28,421,24],[395,31,421,27,"observe"],[395,38,421,34],[395,39,421,36,"data"],[395,43,421,40],[395,47,421,45],[396,12,422,8],[397,12,423,8],[397,16,423,12,"data"],[397,20,423,16],[397,21,423,17,"selectedLogIndex"],[397,37,423,33],[397,42,423,38],[397,43,423,39],[397,44,423,40],[397,46,423,42],[398,12,424,8,"React"],[398,17,424,13],[398,18,424,14,"startTransition"],[398,33,424,29],[398,34,424,30],[398,40,424,36],[399,14,425,10],[399,18,425,14],[399,19,425,15,"setState"],[399,27,425,23],[399,28,425,24,"data"],[399,32,425,28],[399,33,425,29],[400,12,426,8],[400,13,426,9],[400,14,426,10],[401,10,427,6],[401,11,427,7],[401,12,427,8],[402,8,428,4],[403,6,428,5],[404,8,428,5,"key"],[404,11,428,5],[405,8,428,5,"value"],[405,13,428,5],[405,15,430,4],[405,24,430,4,"componentWillUnmount"],[405,44,430,24,"componentWillUnmount"],[405,45,430,24],[405,47,430,33],[406,10,431,6],[406,14,431,10],[406,18,431,14],[406,19,431,15,"_subscription"],[406,32,431,28],[406,36,431,32],[406,40,431,36],[406,42,431,38],[407,12,432,8],[407,16,432,12],[407,17,432,13,"_subscription"],[407,30,432,26],[407,31,432,27,"unsubscribe"],[407,42,432,38],[407,43,432,39],[407,44,432,40],[408,10,433,6],[409,8,434,4],[410,6,434,5],[411,8,434,5,"key"],[411,11,434,5],[412,8,434,5,"value"],[412,13,434,5],[412,15,367,4],[412,24,367,11,"getDerivedStateFromError"],[412,48,367,35,"getDerivedStateFromError"],[412,49,367,35],[412,51,367,38],[413,10,368,6],[413,17,368,13],[414,12,368,15,"hasError"],[414,20,368,23],[414,22,368,25],[415,10,368,30],[415,11,368,31],[416,8,369,4],[417,6,369,5],[418,4,369,5],[418,6,366,40,"React"],[418,11,366,45],[418,12,366,46,"Component"],[418,21,366,55],[418,24,462,2],[419,4,463,2],[419,11,463,9,"LogBoxStateSubscription"],[419,34,463,32],[420,2,464,0],[421,0,464,1],[421,3]],"functionMap":{"names":["<global>","getNextState","reportLogBoxError","reportUnexpectedLogBoxError","isLogBoxErrorMessage","isMessageIgnored","setImmediateShim","handleUpdate","setImmediateShim$argument_0","observers.forEach$argument_0","appendNewLog","addPendingLog","setTimeout$argument_0","newLog.symbolicate$argument_1","addLog","setImmediate$argument_0","addException","symbolicateLogNow","log.symbolicate$argument_1","retrySymbolicateLogNow","log.retrySymbolicate$argument_1","symbolicateLogLazy","clear","setSelectedLog","clearWarnings","Array.from.filter$argument_0","clearErrors","dismiss","getIgnorePatterns","addIgnorePatterns","patterns.forEach$argument_0","setDisabled","isDisabled","observe","unsubscribe","NativeEventEmitter$argument_0.addListener","NativeEventEmitter$argument_0.removeListeners","withSubscription","LogBoxStateSubscription","LogBoxStateSubscription.getDerivedStateFromError","LogBoxStateSubscription#constructor","emitter.addListener$argument_1","LogBoxStateSubscription#componentDidCatch","LogBoxStateSubscription#retry","Promise$argument_0","setState$argument_1","LogBoxStateSubscription#render","LogBoxStateSubscription#componentDidMount","observe$argument_0","React.startTransition$argument_0","LogBoxStateSubscription#componentWillUnmount","LogBoxStateSubscription#_handleDismiss","LogBoxStateSubscription#_handleMinimize","LogBoxStateSubscription#_handleSetSelectedLog"],"mappings":"AAA;AC2E;CDM;OEE;CFO;OGE;CHG;OIE;CJE;OKE;CLU;AME;CNK;AOE;qCCE;wBCG,qCD;KDC;CPE;AUE;6CCuB;KDQ;yCEE;KFI;gCGK;KHQ;CVQ;OcE;eCK;GDiB;CdC;OgBE;eDG;GCM;ChBC;OiBE;wBCC;GDE;CjBC;OmBE;6BCC;GDE;CnBC;OqBE;CrBE;OsBE;CtBK;OuBE;eXiB;KWM;CvBE;OwBE;0CCC,6BD;CxBM;O0BE;0CDC,uDC;C1BK;O2BE;C3BK;O4BE;C5BE;O6BE;mBCI;GDa;yCJQ,+CI;C7BE;O+BE;C/BM;OgCE;ChCE;OiCE;ICO;KDE;CjCE;EmCG,gBnC;EoCC,oBpC;OqCG;ECC;ICC;KDE;IEE;mDCI;SDI;KFE;IIE;KJI;YKW;+BCC;2CCC;SDE;ODC;KLC;IQE;KRY;ISE;mCCC;8BCG;SDE;ODC;KTC;IYE;KZI;qBaE;Kbe;sBcE;KdE;4BeE;KfE;GDC;CrCI"}},"type":"js/module"}]}