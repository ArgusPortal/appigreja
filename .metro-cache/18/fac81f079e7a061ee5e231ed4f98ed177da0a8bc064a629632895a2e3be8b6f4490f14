{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":17,"index":305},"end":{"line":8,"column":52,"index":340}}],"key":"+CMsq8mGitISxINZGSTIjwwHCvE="}},{"name":"../../react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":32,"index":374},"end":{"line":9,"column":48,"index":390}}],"key":"ETYq8A0flmMuj+eQAJsw/w4/bTc="}},{"name":"./Route","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":16,"index":409},"end":{"line":10,"column":34,"index":427}}],"key":"AVkUTSqddR0jXoenUi8+TzELhyk="}},{"name":"./matchers","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":11,"column":19,"index":448},"end":{"line":11,"column":40,"index":469}}],"key":"r7IFX4/qJzuJVkO9YohL0nqjKek="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use client';\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.resolveParentId = exports.useNavigation = void 0;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const react_1 = __importDefault(require(_dependencyMap[1], \"../../react\"));\n  const Route_1 = require(_dependencyMap[2], \"./Route\");\n  const matchers_1 = require(_dependencyMap[3], \"./matchers\");\n  /**\n   * Returns the underlying React Navigation [`navigation` prop](https://reactnavigation.org/docs/navigation-prop)\n   * to imperatively access layout-specific functionality like `navigation.openDrawer()` in a\n   * [Drawer](/router/advanced/drawer/) layout.\n   *\n   * @example\n   * ```tsx app/index.tsx\n   * import { useNavigation } from 'expo-router';\n   *\n   * export default function Route() {\n   *   // Access the current navigation object for the current route.\n   *   const navigation = useNavigation();\n   *\n   *   return (\n   *     <View>\n   *       <Text onPress={() => {\n   *         // Open the drawer view.\n   *         navigation.openDrawer();\n   *       }}>\n   *         Open Drawer\n   *       </Text>\n   *     </View>\n   *   );\n   * }\n   * ```\n   *\n   * When using nested layouts, you can access higher-order layouts by passing a secondary argument denoting the layout route.\n   * For example, `/menu/_layout.tsx` is nested inside `/app/orders/`, you can use `useNavigation('/orders/menu/')`.\n   *\n   * @example\n   * ```tsx app/orders/menu/index.tsx\n   * import { useNavigation } from 'expo-router';\n   *\n   * export default function MenuRoute() {\n   *   const rootLayout = useNavigation('/');\n   *   const ordersLayout = useNavigation('/orders');\n   *\n   *   // Same as the default results of `useNavigation()` when invoked in this route.\n   *   const parentLayout = useNavigation('/orders/menu');\n   * }\n   * ```\n   *\n   * If you attempt to access a layout that doesn't exist, an error such as\n   * `Could not find parent navigation with route \"/non-existent\"` is thrown.\n   *\n   *\n   * @param parent Provide an absolute path such as `/(root)` to the parent route or a relative path like `../../` to the parent route.\n   * @returns The navigation object for the current route.\n   *\n   * @see React Navigation documentation on [navigation dependent functions](https://reactnavigation.org/docs/navigation-prop/#navigator-dependent-functions)\n   * for more information.\n   */\n  function useNavigation(parent) {\n    const navigation = (0, native_1.useNavigation)();\n    const contextKey = (0, Route_1.useContextKey)();\n    const normalizedParent = react_1.default.useMemo(() => {\n      if (!parent) {\n        return null;\n      }\n      const normalized = (0, matchers_1.getNameFromFilePath)(parent);\n      if (parent.startsWith('.')) {\n        return relativePaths(contextKey, parent);\n      }\n      return normalized;\n    }, [contextKey, parent]);\n    if (normalizedParent != null) {\n      const parentNavigation = navigation.getParent(normalizedParent);\n      // TODO: Maybe print a list of parents...\n      if (!parentNavigation) {\n        throw new Error(`Could not find parent navigation with route \"${parent}\".` + (normalizedParent !== parent ? ` (normalized: ${normalizedParent})` : ''));\n      }\n      return parentNavigation;\n    }\n    return navigation;\n  }\n  exports.useNavigation = useNavigation;\n  function resolveParentId(contextKey, parentId) {\n    if (!parentId) {\n      return null;\n    }\n    if (parentId.startsWith('.')) {\n      return (0, matchers_1.getNameFromFilePath)(relativePaths(contextKey, parentId));\n    }\n    return (0, matchers_1.getNameFromFilePath)(parentId);\n  }\n  exports.resolveParentId = resolveParentId;\n  // Resolve a path like `../` relative to a path like `/foo/bar`\n  function relativePaths(from, to) {\n    const fromParts = from.split('/').filter(Boolean);\n    const toParts = to.split('/').filter(Boolean);\n    for (const part of toParts) {\n      if (part === '..') {\n        if (fromParts.length === 0) {\n          throw new Error(`Cannot resolve path \"${to}\" relative to \"${from}\"`);\n        }\n        fromParts.pop();\n      } else if (part === '.') {\n        // Ignore\n      } else {\n        fromParts.push(part);\n      }\n    }\n    return '/' + fromParts.join('/');\n  }\n});","lineCount":122,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,3,0],[5,6,3,4,"__importDefault"],[5,21,3,19],[5,24,3,23],[5,28,3,27],[5,32,3,31],[5,36,3,35],[5,37,3,36,"__importDefault"],[5,52,3,51],[5,56,3,56],[5,66,3,66,"mod"],[5,69,3,69],[5,71,3,71],[6,4,4,4],[6,11,4,12,"mod"],[6,14,4,15],[6,18,4,19,"mod"],[6,21,4,22],[6,22,4,23,"__esModule"],[6,32,4,33],[6,35,4,37,"mod"],[6,38,4,40],[6,41,4,43],[7,6,4,45],[7,15,4,54],[7,17,4,56,"mod"],[8,4,4,60],[8,5,4,61],[9,2,5,0],[9,3,5,1],[10,2,6,0,"Object"],[10,8,6,6],[10,9,6,7,"defineProperty"],[10,23,6,21],[10,24,6,22,"exports"],[10,31,6,29],[10,33,6,31],[10,45,6,43],[10,47,6,45],[11,4,6,47,"value"],[11,9,6,52],[11,11,6,54],[12,2,6,59],[12,3,6,60],[12,4,6,61],[13,2,7,0,"exports"],[13,9,7,7],[13,10,7,8,"resolveParentId"],[13,25,7,23],[13,28,7,26,"exports"],[13,35,7,33],[13,36,7,34,"useNavigation"],[13,49,7,47],[13,52,7,50],[13,57,7,55],[13,58,7,56],[14,2,8,0],[14,8,8,6,"native_1"],[14,16,8,14],[14,19,8,17,"require"],[14,26,8,24],[14,27,8,24,"_dependencyMap"],[14,41,8,24],[14,72,8,51],[14,73,8,52],[15,2,9,0],[15,8,9,6,"react_1"],[15,15,9,13],[15,18,9,16,"__importDefault"],[15,33,9,31],[15,34,9,32,"require"],[15,41,9,39],[15,42,9,39,"_dependencyMap"],[15,56,9,39],[15,74,9,47],[15,75,9,48],[15,76,9,49],[16,2,10,0],[16,8,10,6,"Route_1"],[16,15,10,13],[16,18,10,16,"require"],[16,25,10,23],[16,26,10,23,"_dependencyMap"],[16,40,10,23],[16,54,10,33],[16,55,10,34],[17,2,11,0],[17,8,11,6,"matchers_1"],[17,18,11,16],[17,21,11,19,"require"],[17,28,11,26],[17,29,11,26,"_dependencyMap"],[17,43,11,26],[17,60,11,39],[17,61,11,40],[18,2,12,0],[19,0,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,0,21,0],[28,0,22,0],[29,0,23,0],[30,0,24,0],[31,0,25,0],[32,0,26,0],[33,0,27,0],[34,0,28,0],[35,0,29,0],[36,0,30,0],[37,0,31,0],[38,0,32,0],[39,0,33,0],[40,0,34,0],[41,0,35,0],[42,0,36,0],[43,0,37,0],[44,0,38,0],[45,0,39,0],[46,0,40,0],[47,0,41,0],[48,0,42,0],[49,0,43,0],[50,0,44,0],[51,0,45,0],[52,0,46,0],[53,0,47,0],[54,0,48,0],[55,0,49,0],[56,0,50,0],[57,0,51,0],[58,0,52,0],[59,0,53,0],[60,0,54,0],[61,0,55,0],[62,0,56,0],[63,0,57,0],[64,0,58,0],[65,0,59,0],[66,0,60,0],[67,0,61,0],[68,0,62,0],[69,0,63,0],[70,2,64,0],[70,11,64,9,"useNavigation"],[70,24,64,22,"useNavigation"],[70,25,64,23,"parent"],[70,31,64,29],[70,33,64,31],[71,4,65,4],[71,10,65,10,"navigation"],[71,20,65,20],[71,23,65,23],[71,24,65,24],[71,25,65,25],[71,27,65,27,"native_1"],[71,35,65,35],[71,36,65,36,"useNavigation"],[71,49,65,49],[71,51,65,51],[71,52,65,52],[72,4,66,4],[72,10,66,10,"contextKey"],[72,20,66,20],[72,23,66,23],[72,24,66,24],[72,25,66,25],[72,27,66,27,"Route_1"],[72,34,66,34],[72,35,66,35,"useContextKey"],[72,48,66,48],[72,50,66,50],[72,51,66,51],[73,4,67,4],[73,10,67,10,"normalizedParent"],[73,26,67,26],[73,29,67,29,"react_1"],[73,36,67,36],[73,37,67,37,"default"],[73,44,67,44],[73,45,67,45,"useMemo"],[73,52,67,52],[73,53,67,53],[73,59,67,59],[74,6,68,8],[74,10,68,12],[74,11,68,13,"parent"],[74,17,68,19],[74,19,68,21],[75,8,69,12],[75,15,69,19],[75,19,69,23],[76,6,70,8],[77,6,71,8],[77,12,71,14,"normalized"],[77,22,71,24],[77,25,71,27],[77,26,71,28],[77,27,71,29],[77,29,71,31,"matchers_1"],[77,39,71,41],[77,40,71,42,"getNameFromFilePath"],[77,59,71,61],[77,61,71,63,"parent"],[77,67,71,69],[77,68,71,70],[78,6,72,8],[78,10,72,12,"parent"],[78,16,72,18],[78,17,72,19,"startsWith"],[78,27,72,29],[78,28,72,30],[78,31,72,33],[78,32,72,34],[78,34,72,36],[79,8,73,12],[79,15,73,19,"relativePaths"],[79,28,73,32],[79,29,73,33,"contextKey"],[79,39,73,43],[79,41,73,45,"parent"],[79,47,73,51],[79,48,73,52],[80,6,74,8],[81,6,75,8],[81,13,75,15,"normalized"],[81,23,75,25],[82,4,76,4],[82,5,76,5],[82,7,76,7],[82,8,76,8,"contextKey"],[82,18,76,18],[82,20,76,20,"parent"],[82,26,76,26],[82,27,76,27],[82,28,76,28],[83,4,77,4],[83,8,77,8,"normalizedParent"],[83,24,77,24],[83,28,77,28],[83,32,77,32],[83,34,77,34],[84,6,78,8],[84,12,78,14,"parentNavigation"],[84,28,78,30],[84,31,78,33,"navigation"],[84,41,78,43],[84,42,78,44,"getParent"],[84,51,78,53],[84,52,78,54,"normalizedParent"],[84,68,78,70],[84,69,78,71],[85,6,79,8],[86,6,80,8],[86,10,80,12],[86,11,80,13,"parentNavigation"],[86,27,80,29],[86,29,80,31],[87,8,81,12],[87,14,81,18],[87,18,81,22,"Error"],[87,23,81,27],[87,24,81,28],[87,72,81,76,"parent"],[87,78,81,82],[87,82,81,86],[87,86,82,17,"normalizedParent"],[87,102,82,33],[87,107,82,38,"parent"],[87,113,82,44],[87,116,82,47],[87,133,82,64,"normalizedParent"],[87,149,82,80],[87,152,82,83],[87,155,82,86],[87,157,82,88],[87,158,82,89],[87,159,82,90],[88,6,83,8],[89,6,84,8],[89,13,84,15,"parentNavigation"],[89,29,84,31],[90,4,85,4],[91,4,86,4],[91,11,86,11,"navigation"],[91,21,86,21],[92,2,87,0],[93,2,88,0,"exports"],[93,9,88,7],[93,10,88,8,"useNavigation"],[93,23,88,21],[93,26,88,24,"useNavigation"],[93,39,88,37],[94,2,89,0],[94,11,89,9,"resolveParentId"],[94,26,89,24,"resolveParentId"],[94,27,89,25,"contextKey"],[94,37,89,35],[94,39,89,37,"parentId"],[94,47,89,45],[94,49,89,47],[95,4,90,4],[95,8,90,8],[95,9,90,9,"parentId"],[95,17,90,17],[95,19,90,19],[96,6,91,8],[96,13,91,15],[96,17,91,19],[97,4,92,4],[98,4,93,4],[98,8,93,8,"parentId"],[98,16,93,16],[98,17,93,17,"startsWith"],[98,27,93,27],[98,28,93,28],[98,31,93,31],[98,32,93,32],[98,34,93,34],[99,6,94,8],[99,13,94,15],[99,14,94,16],[99,15,94,17],[99,17,94,19,"matchers_1"],[99,27,94,29],[99,28,94,30,"getNameFromFilePath"],[99,47,94,49],[99,49,94,51,"relativePaths"],[99,62,94,64],[99,63,94,65,"contextKey"],[99,73,94,75],[99,75,94,77,"parentId"],[99,83,94,85],[99,84,94,86],[99,85,94,87],[100,4,95,4],[101,4,96,4],[101,11,96,11],[101,12,96,12],[101,13,96,13],[101,15,96,15,"matchers_1"],[101,25,96,25],[101,26,96,26,"getNameFromFilePath"],[101,45,96,45],[101,47,96,47,"parentId"],[101,55,96,55],[101,56,96,56],[102,2,97,0],[103,2,98,0,"exports"],[103,9,98,7],[103,10,98,8,"resolveParentId"],[103,25,98,23],[103,28,98,26,"resolveParentId"],[103,43,98,41],[104,2,99,0],[105,2,100,0],[105,11,100,9,"relativePaths"],[105,24,100,22,"relativePaths"],[105,25,100,23,"from"],[105,29,100,27],[105,31,100,29,"to"],[105,33,100,31],[105,35,100,33],[106,4,101,4],[106,10,101,10,"fromParts"],[106,19,101,19],[106,22,101,22,"from"],[106,26,101,26],[106,27,101,27,"split"],[106,32,101,32],[106,33,101,33],[106,36,101,36],[106,37,101,37],[106,38,101,38,"filter"],[106,44,101,44],[106,45,101,45,"Boolean"],[106,52,101,52],[106,53,101,53],[107,4,102,4],[107,10,102,10,"toParts"],[107,17,102,17],[107,20,102,20,"to"],[107,22,102,22],[107,23,102,23,"split"],[107,28,102,28],[107,29,102,29],[107,32,102,32],[107,33,102,33],[107,34,102,34,"filter"],[107,40,102,40],[107,41,102,41,"Boolean"],[107,48,102,48],[107,49,102,49],[108,4,103,4],[108,9,103,9],[108,15,103,15,"part"],[108,19,103,19],[108,23,103,23,"toParts"],[108,30,103,30],[108,32,103,32],[109,6,104,8],[109,10,104,12,"part"],[109,14,104,16],[109,19,104,21],[109,23,104,25],[109,25,104,27],[110,8,105,12],[110,12,105,16,"fromParts"],[110,21,105,25],[110,22,105,26,"length"],[110,28,105,32],[110,33,105,37],[110,34,105,38],[110,36,105,40],[111,10,106,16],[111,16,106,22],[111,20,106,26,"Error"],[111,25,106,31],[111,26,106,32],[111,50,106,56,"to"],[111,52,106,58],[111,70,106,76,"from"],[111,74,106,80],[111,77,106,83],[111,78,106,84],[112,8,107,12],[113,8,108,12,"fromParts"],[113,17,108,21],[113,18,108,22,"pop"],[113,21,108,25],[113,22,108,26],[113,23,108,27],[114,6,109,8],[114,7,109,9],[114,13,110,13],[114,17,110,17,"part"],[114,21,110,21],[114,26,110,26],[114,29,110,29],[114,31,110,31],[115,8,111,12],[116,6,111,12],[116,7,112,9],[116,13,113,13],[117,8,114,12,"fromParts"],[117,17,114,21],[117,18,114,22,"push"],[117,22,114,26],[117,23,114,27,"part"],[117,27,114,31],[117,28,114,32],[118,6,115,8],[119,4,116,4],[120,4,117,4],[120,11,117,11],[120,14,117,14],[120,17,117,17,"fromParts"],[120,26,117,26],[120,27,117,27,"join"],[120,31,117,31],[120,32,117,32],[120,35,117,35],[120,36,117,36],[121,2,118,0],[122,0,118,1],[122,3]],"functionMap":{"names":["<global>","<anonymous>","useNavigation","react_1._default.useMemo$argument_0","resolveParentId","relativePaths"],"mappings":"AAA;wDCE;CDE;AE2D;qDCG;KDS;CFW;AIE;CJQ;AKG;CLkB"}},"type":"js/module"}]}