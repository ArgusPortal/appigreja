{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":32,"index":348},"end":{"line":9,"column":48,"index":364}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY="}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":279},"end":{"line":8,"column":52,"index":314}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s="}},{"name":"./hooks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":446},"end":{"line":11,"column":34,"index":464}}],"key":"ZspogPyBazkANooj3jdfuIqLhXQ="}},{"name":"./link/href","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":15,"index":481},"end":{"line":12,"column":37,"index":503}}],"key":"bbOjCna2na3KLYIiMI/X7Z9HiTo="}},{"name":"./global-state/router-store","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":23,"index":390},"end":{"line":10,"column":61,"index":428}}],"key":"/fn1FFiVRQQPn/6VRpZDx4OwSks="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use client';\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useNavigation = void 0;\n  var react_1 = __importDefault(require(_dependencyMap[0], \"react\"));\n  /**\n   * Returns the underlying React Navigation [`navigation` prop](https://reactnavigation.org/docs/navigation-prop)\n   * to imperatively access layout-specific functionality like `navigation.openDrawer()` in a\n   * [Drawer](/router/advanced/drawer/) layout.\n   *\n   * @example\n   * ```tsx app/index.tsx\n   * import { useNavigation } from 'expo-router';\n   *\n   * export default function Route() {\n   *   // Access the current navigation object for the current route.\n   *   const navigation = useNavigation();\n   *\n   *   return (\n   *     <View>\n   *       <Text onPress={() => {\n   *         // Open the drawer view.\n   *         navigation.openDrawer();\n   *       }}>\n   *         Open Drawer\n   *       </Text>\n   *     </View>\n   *   );\n   * }\n   * ```\n   *\n   * When using nested layouts, you can access higher-order layouts by passing a secondary argument denoting the layout route.\n   * For example, `/menu/_layout.tsx` is nested inside `/app/orders/`, you can use `useNavigation('/orders/menu/')`.\n   *\n   * @example\n   * ```tsx app/orders/menu/index.tsx\n   * import { useNavigation } from 'expo-router';\n   *\n   * export default function MenuRoute() {\n   *   const rootLayout = useNavigation('/');\n   *   const ordersLayout = useNavigation('/orders');\n   *\n   *   // Same as the default results of `useNavigation()` when invoked in this route.\n   *   const parentLayout = useNavigation('/orders/menu');\n   * }\n   * ```\n   *\n   * If you attempt to access a layout that doesn't exist, an error such as\n   * `Could not find parent navigation with route \"/non-existent\"` is thrown.\n   *\n   *\n   * @param parent Provide an absolute path such as `/(root)` to the parent route or a relative path like `../../` to the parent route.\n   * @returns The navigation object for the current route.\n   *\n   * @see React Navigation documentation on [navigation dependent functions](https://reactnavigation.org/docs/navigation-prop/#navigator-dependent-functions)\n   * for more information.\n   */\n  function useNavigation(parent) {\n    var navigation = (0, require(_dependencyMap[1], \"@react-navigation/native\").useNavigation)();\n    var initialNavigation = navigation;\n    var segments = (0, require(_dependencyMap[2], \"./hooks\").useSegments)();\n    var targetNavigatorContextKey = react_1.default.useMemo(() => {\n      if (!parent) {\n        return;\n      }\n      if (typeof parent === 'object') {\n        parent = (0, require(_dependencyMap[3], \"./link/href\").resolveHref)(parent);\n      }\n      if (parent === '/') {\n        return '';\n      }\n      var state = require(_dependencyMap[4], \"./global-state/router-store\").store.getStateFromPath(parent.startsWith('../') ? segments.join('/') : parent);\n      // Reconstruct the context key from the state\n      var contextKey = '';\n      var names = [];\n      while (state) {\n        var routes = state.routes;\n        var route = routes[state.index ?? routes.length - 1];\n        if (route.state) {\n          contextKey = `${contextKey}/${route.name}`;\n          names.push(route.name);\n          if (parent === contextKey) {\n            break;\n          }\n          state = route.state;\n        } else {\n          break;\n        }\n      }\n      if (parent.startsWith('../')) {\n        var parentSegments = parent.split('/').filter(Boolean);\n        for (var segment of parentSegments) {\n          if (segment === '..') {\n            names.pop();\n          } else {\n            throw new Error(\"Relative parent paths may only contain '..' and cannot contain other segments\");\n          }\n        }\n        contextKey = names.length > 0 ? `/${names.join('/')}` : '';\n      }\n      return contextKey;\n    }, [segments, parent]);\n    if (targetNavigatorContextKey !== undefined) {\n      navigation = navigation.getParent(targetNavigatorContextKey);\n    }\n    if (!navigation) {\n      var ids = [];\n      navigation = initialNavigation;\n      while (navigation) {\n        ids.push(navigation.getId() || '/');\n        navigation = navigation.getParent();\n      }\n      throw new Error(`Could not find parent navigation with route \"${parent}\". Available routes are: '${ids.join(\"', '\")}'`);\n    }\n    return navigation;\n  }\n  exports.useNavigation = useNavigation;\n});","lineCount":127,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,3,0],[5,6,3,4,"__importDefault"],[5,21,3,19],[5,24,3,23],[5,28,3,27],[5,32,3,31],[5,36,3,35],[5,37,3,36,"__importDefault"],[5,52,3,51],[5,56,3,56],[5,66,3,66,"mod"],[5,69,3,69],[5,71,3,71],[6,4,4,4],[6,11,4,12,"mod"],[6,14,4,15],[6,18,4,19,"mod"],[6,21,4,22],[6,22,4,23,"__esModule"],[6,32,4,33],[6,35,4,37,"mod"],[6,38,4,40],[6,41,4,43],[7,6,4,45],[7,15,4,54],[7,17,4,56,"mod"],[8,4,4,60],[8,5,4,61],[9,2,5,0],[9,3,5,1],[10,2,6,0,"Object"],[10,8,6,6],[10,9,6,7,"defineProperty"],[10,23,6,21],[10,24,6,22,"exports"],[10,31,6,29],[10,33,6,31],[10,45,6,43],[10,47,6,45],[11,4,6,47,"value"],[11,9,6,52],[11,11,6,54],[12,2,6,59],[12,3,6,60],[12,4,6,61],[13,2,7,0,"exports"],[13,9,7,7],[13,10,7,8,"useNavigation"],[13,23,7,21],[13,26,7,24],[13,31,7,29],[13,32,7,30],[14,2,9,0],[14,6,9,6,"react_1"],[14,13,9,13],[14,16,9,16,"__importDefault"],[14,31,9,31],[14,32,9,32,"require"],[14,39,9,39],[14,40,9,39,"_dependencyMap"],[14,54,9,39],[14,66,9,47],[14,67,9,48],[14,68,9,49],[15,2,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,0,20,0],[23,0,21,0],[24,0,22,0],[25,0,23,0],[26,0,24,0],[27,0,25,0],[28,0,26,0],[29,0,27,0],[30,0,28,0],[31,0,29,0],[32,0,30,0],[33,0,31,0],[34,0,32,0],[35,0,33,0],[36,0,34,0],[37,0,35,0],[38,0,36,0],[39,0,37,0],[40,0,38,0],[41,0,39,0],[42,0,40,0],[43,0,41,0],[44,0,42,0],[45,0,43,0],[46,0,44,0],[47,0,45,0],[48,0,46,0],[49,0,47,0],[50,0,48,0],[51,0,49,0],[52,0,50,0],[53,0,51,0],[54,0,52,0],[55,0,53,0],[56,0,54,0],[57,0,55,0],[58,0,56,0],[59,0,57,0],[60,0,58,0],[61,0,59,0],[62,0,60,0],[63,0,61,0],[64,0,62,0],[65,0,63,0],[66,0,64,0],[67,2,65,0],[67,11,65,9,"useNavigation"],[67,24,65,22,"useNavigation"],[67,25,65,23,"parent"],[67,31,65,29],[67,33,65,31],[68,4,66,4],[68,8,66,8,"navigation"],[68,18,66,18],[68,21,66,21],[68,22,66,22],[68,23,66,23],[68,25,66,25,"require"],[68,32,66,25],[68,33,66,25,"_dependencyMap"],[68,47,66,25],[68,80,66,34,"useNavigation"],[68,93,66,47],[68,95,66,49],[68,96,66,50],[69,4,67,4],[69,8,67,10,"initialNavigation"],[69,25,67,27],[69,28,67,30,"navigation"],[69,38,67,40],[70,4,68,4],[70,8,68,10,"segments"],[70,16,68,18],[70,19,68,21],[70,20,68,22],[70,21,68,23],[70,23,68,25,"require"],[70,30,68,25],[70,31,68,25,"_dependencyMap"],[70,45,68,25],[70,61,68,33,"useSegments"],[70,72,68,44],[70,74,68,46],[70,75,68,47],[71,4,69,4],[71,8,69,10,"targetNavigatorContextKey"],[71,33,69,35],[71,36,69,38,"react_1"],[71,43,69,45],[71,44,69,46,"default"],[71,51,69,53],[71,52,69,54,"useMemo"],[71,59,69,61],[71,60,69,62],[71,66,69,68],[72,6,70,8],[72,10,70,12],[72,11,70,13,"parent"],[72,17,70,19],[72,19,70,21],[73,8,71,12],[74,6,72,8],[75,6,73,8],[75,10,73,12],[75,17,73,19,"parent"],[75,23,73,25],[75,28,73,30],[75,36,73,38],[75,38,73,40],[76,8,74,12,"parent"],[76,14,74,18],[76,17,74,21],[76,18,74,22],[76,19,74,23],[76,21,74,25,"require"],[76,28,74,25],[76,29,74,25,"_dependencyMap"],[76,43,74,25],[76,63,74,32,"resolveHref"],[76,74,74,43],[76,76,74,45,"parent"],[76,82,74,51],[76,83,74,52],[77,6,75,8],[78,6,76,8],[78,10,76,12,"parent"],[78,16,76,18],[78,21,76,23],[78,24,76,26],[78,26,76,28],[79,8,77,12],[79,15,77,19],[79,17,77,21],[80,6,78,8],[81,6,79,8],[81,10,79,12,"state"],[81,15,79,17],[81,18,79,20,"require"],[81,25,79,20],[81,26,79,20,"_dependencyMap"],[81,40,79,20],[81,76,79,35,"store"],[81,81,79,40],[81,82,79,41,"getStateFromPath"],[81,98,79,57],[81,99,79,58,"parent"],[81,105,79,64],[81,106,79,65,"startsWith"],[81,116,79,75],[81,117,79,76],[81,122,79,81],[81,123,79,82],[81,126,79,85,"segments"],[81,134,79,93],[81,135,79,94,"join"],[81,139,79,98],[81,140,79,99],[81,143,79,102],[81,144,79,103],[81,147,79,106,"parent"],[81,153,79,112],[81,154,79,113],[82,6,80,8],[83,6,81,8],[83,10,81,12,"contextKey"],[83,20,81,22],[83,23,81,25],[83,25,81,27],[84,6,82,8],[84,10,82,14,"names"],[84,15,82,19],[84,18,82,22],[84,20,82,24],[85,6,83,8],[85,13,83,15,"state"],[85,18,83,20],[85,20,83,22],[86,8,84,12],[86,12,84,18,"routes"],[86,18,84,24],[86,21,84,27,"state"],[86,26,84,32],[86,27,84,33,"routes"],[86,33,84,39],[87,8,85,12],[87,12,85,18,"route"],[87,17,85,23],[87,20,85,26,"routes"],[87,26,85,32],[87,27,85,33,"state"],[87,32,85,38],[87,33,85,39,"index"],[87,38,85,44],[87,42,85,48,"routes"],[87,48,85,54],[87,49,85,55,"length"],[87,55,85,61],[87,58,85,64],[87,59,85,65],[87,60,85,66],[88,8,86,12],[88,12,86,16,"route"],[88,17,86,21],[88,18,86,22,"state"],[88,23,86,27],[88,25,86,29],[89,10,87,16,"contextKey"],[89,20,87,26],[89,23,87,29],[89,26,87,32,"contextKey"],[89,36,87,42],[89,40,87,46,"route"],[89,45,87,51],[89,46,87,52,"name"],[89,50,87,56],[89,52,87,58],[90,10,88,16,"names"],[90,15,88,21],[90,16,88,22,"push"],[90,20,88,26],[90,21,88,27,"route"],[90,26,88,32],[90,27,88,33,"name"],[90,31,88,37],[90,32,88,38],[91,10,89,16],[91,14,89,20,"parent"],[91,20,89,26],[91,25,89,31,"contextKey"],[91,35,89,41],[91,37,89,43],[92,12,90,20],[93,10,91,16],[94,10,92,16,"state"],[94,15,92,21],[94,18,92,24,"route"],[94,23,92,29],[94,24,92,30,"state"],[94,29,92,35],[95,8,93,12],[95,9,93,13],[95,15,94,17],[96,10,95,16],[97,8,96,12],[98,6,97,8],[99,6,98,8],[99,10,98,12,"parent"],[99,16,98,18],[99,17,98,19,"startsWith"],[99,27,98,29],[99,28,98,30],[99,33,98,35],[99,34,98,36],[99,36,98,38],[100,8,99,12],[100,12,99,18,"parentSegments"],[100,26,99,32],[100,29,99,35,"parent"],[100,35,99,41],[100,36,99,42,"split"],[100,41,99,47],[100,42,99,48],[100,45,99,51],[100,46,99,52],[100,47,99,53,"filter"],[100,53,99,59],[100,54,99,60,"Boolean"],[100,61,99,67],[100,62,99,68],[101,8,100,12],[101,13,100,17],[101,17,100,23,"segment"],[101,24,100,30],[101,28,100,34,"parentSegments"],[101,42,100,48],[101,44,100,50],[102,10,101,16],[102,14,101,20,"segment"],[102,21,101,27],[102,26,101,32],[102,30,101,36],[102,32,101,38],[103,12,102,20,"names"],[103,17,102,25],[103,18,102,26,"pop"],[103,21,102,29],[103,22,102,30],[103,23,102,31],[104,10,103,16],[104,11,103,17],[104,17,104,21],[105,12,105,20],[105,18,105,26],[105,22,105,30,"Error"],[105,27,105,35],[105,28,105,36],[105,107,105,115],[105,108,105,116],[106,10,106,16],[107,8,107,12],[108,8,108,12,"contextKey"],[108,18,108,22],[108,21,108,25,"names"],[108,26,108,30],[108,27,108,31,"length"],[108,33,108,37],[108,36,108,40],[108,37,108,41],[108,40,108,44],[108,44,108,48,"names"],[108,49,108,53],[108,50,108,54,"join"],[108,54,108,58],[108,55,108,59],[108,58,108,62],[108,59,108,63],[108,61,108,65],[108,64,108,68],[108,66,108,70],[109,6,109,8],[110,6,110,8],[110,13,110,15,"contextKey"],[110,23,110,25],[111,4,111,4],[111,5,111,5],[111,7,111,7],[111,8,111,8,"segments"],[111,16,111,16],[111,18,111,18,"parent"],[111,24,111,24],[111,25,111,25],[111,26,111,26],[112,4,112,4],[112,8,112,8,"targetNavigatorContextKey"],[112,33,112,33],[112,38,112,38,"undefined"],[112,47,112,47],[112,49,112,49],[113,6,113,8,"navigation"],[113,16,113,18],[113,19,113,21,"navigation"],[113,29,113,31],[113,30,113,32,"getParent"],[113,39,113,41],[113,40,113,42,"targetNavigatorContextKey"],[113,65,113,67],[113,66,113,68],[114,4,114,4],[115,4,115,4],[115,8,115,8],[115,9,115,9,"navigation"],[115,19,115,19],[115,21,115,21],[116,6,116,8],[116,10,116,14,"ids"],[116,13,116,17],[116,16,116,20],[116,18,116,22],[117,6,117,8,"navigation"],[117,16,117,18],[117,19,117,21,"initialNavigation"],[117,36,117,38],[118,6,118,8],[118,13,118,15,"navigation"],[118,23,118,25],[118,25,118,27],[119,8,119,12,"ids"],[119,11,119,15],[119,12,119,16,"push"],[119,16,119,20],[119,17,119,21,"navigation"],[119,27,119,31],[119,28,119,32,"getId"],[119,33,119,37],[119,34,119,38],[119,35,119,39],[119,39,119,43],[119,42,119,46],[119,43,119,47],[120,8,120,12,"navigation"],[120,18,120,22],[120,21,120,25,"navigation"],[120,31,120,35],[120,32,120,36,"getParent"],[120,41,120,45],[120,42,120,46],[120,43,120,47],[121,6,121,8],[122,6,122,8],[122,12,122,14],[122,16,122,18,"Error"],[122,21,122,23],[122,22,122,24],[122,70,122,72,"parent"],[122,76,122,78],[122,105,122,107,"ids"],[122,108,122,110],[122,109,122,111,"join"],[122,113,122,115],[122,114,122,116],[122,120,122,122],[122,121,122,123],[122,124,122,126],[122,125,122,127],[123,4,123,4],[124,4,124,4],[124,11,124,11,"navigation"],[124,21,124,21],[125,2,125,0],[126,2,126,0,"exports"],[126,9,126,7],[126,10,126,8,"useNavigation"],[126,23,126,21],[126,26,126,24,"useNavigation"],[126,39,126,37],[127,0,126,38],[127,3]],"functionMap":{"names":["<global>","<anonymous>","useNavigation","react_1._default.useMemo$argument_0"],"mappings":"AAA;wDCE;CDE;AE4D;8DCI;KD0C;CFc"}},"type":"js/module"}]}