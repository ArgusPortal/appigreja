{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":183,"column":27}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":183,"column":27}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"../Utilities/infoLog","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":16},"end":{"line":13,"column":47}},{"start":{"line":13,"column":16},"end":{"line":13,"column":47}},{"start":{"line":13,"column":16},"end":{"line":13,"column":47}},{"start":{"line":13,"column":16},"end":{"line":13,"column":47}},{"start":{"line":13,"column":16},"end":{"line":13,"column":47}},{"start":{"line":13,"column":16},"end":{"line":13,"column":47}},{"start":{"line":13,"column":16},"end":{"line":13,"column":47}}],"key":"JOQiliPDxvxpS4qCtoh0JoUHvB4="}},{"name":"invariant","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":18},"end":{"line":14,"column":38}}],"key":"oQpL0Es3H146KnQH9ygFeHrzVP4="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = require(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = require(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var DEBUG = false;\n  var TaskQueue = /*#__PURE__*/function () {\n    function TaskQueue(_ref) {\n      var onMoreTasks = _ref.onMoreTasks;\n      _classCallCheck(this, TaskQueue);\n      this._onMoreTasks = onMoreTasks;\n      this._queueStack = [{\n        tasks: [],\n        popable: false\n      }];\n    }\n    return _createClass(TaskQueue, [{\n      key: \"enqueue\",\n      value: function enqueue(task) {\n        this._getCurrentQueue().push(task);\n      }\n    }, {\n      key: \"enqueueTasks\",\n      value: function enqueueTasks(tasks) {\n        tasks.forEach(task => this.enqueue(task));\n      }\n    }, {\n      key: \"cancelTasks\",\n      value: function cancelTasks(tasksToCancel) {\n        this._queueStack = this._queueStack.map(queue => ({\n          ...queue,\n          tasks: queue.tasks.filter(task => tasksToCancel.indexOf(task) === -1)\n        })).filter((queue, idx) => queue.tasks.length > 0 || idx === 0);\n      }\n    }, {\n      key: \"hasTasksToProcess\",\n      value: function hasTasksToProcess() {\n        return this._getCurrentQueue().length > 0;\n      }\n    }, {\n      key: \"processNext\",\n      value: function processNext() {\n        var queue = this._getCurrentQueue();\n        if (queue.length) {\n          var task = queue.shift();\n          try {\n            if (typeof task === 'object' && task.gen) {\n              DEBUG && require(_dependencyMap[2], \"../Utilities/infoLog\")('TaskQueue: genPromise for task ' + task.name);\n              this._genPromise(task);\n            } else if (typeof task === 'object' && task.run) {\n              DEBUG && require(_dependencyMap[2], \"../Utilities/infoLog\")('TaskQueue: run task ' + task.name);\n              task.run();\n            } else {\n              require(_dependencyMap[3], \"invariant\")(typeof task === 'function', 'Expected Function, SimpleTask, or PromiseTask, but got:\\n' + JSON.stringify(task, null, 2));\n              DEBUG && require(_dependencyMap[2], \"../Utilities/infoLog\")('TaskQueue: run anonymous task');\n              task();\n            }\n          } catch (e) {\n            e.message = 'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n            throw e;\n          }\n        }\n      }\n    }, {\n      key: \"_getCurrentQueue\",\n      value: function _getCurrentQueue() {\n        var stackIdx = this._queueStack.length - 1;\n        var queue = this._queueStack[stackIdx];\n        if (queue.popable && queue.tasks.length === 0 && this._queueStack.length > 1) {\n          this._queueStack.pop();\n          DEBUG && require(_dependencyMap[2], \"../Utilities/infoLog\")('TaskQueue: popped queue: ', {\n            stackIdx,\n            queueStackSize: this._queueStack.length\n          });\n          return this._getCurrentQueue();\n        } else {\n          return queue.tasks;\n        }\n      }\n    }, {\n      key: \"_genPromise\",\n      value: function _genPromise(task) {\n        this._queueStack.push({\n          tasks: [],\n          popable: false\n        });\n        var stackIdx = this._queueStack.length - 1;\n        var stackItem = this._queueStack[stackIdx];\n        DEBUG && require(_dependencyMap[2], \"../Utilities/infoLog\")('TaskQueue: push new queue: ', {\n          stackIdx\n        });\n        DEBUG && require(_dependencyMap[2], \"../Utilities/infoLog\")('TaskQueue: exec gen task ' + task.name);\n        task.gen().then(() => {\n          DEBUG && require(_dependencyMap[2], \"../Utilities/infoLog\")('TaskQueue: onThen for gen task ' + task.name, {\n            stackIdx,\n            queueStackSize: this._queueStack.length\n          });\n          stackItem.popable = true;\n          this.hasTasksToProcess() && this._onMoreTasks();\n        }).catch(ex => {\n          setTimeout(() => {\n            ex.message = `TaskQueue: Error resolving Promise in task ${task.name}: ${ex.message}`;\n            throw ex;\n          }, 0);\n        });\n      }\n    }]);\n  }();\n  module.exports = TaskQueue;\n});","lineCount":110,"map":[[2,2,11,0],[2,14,11,12],[4,2,11,13],[4,6,11,13,"_classCallCheck"],[4,21,11,13],[4,24,11,13,"require"],[4,31,11,13],[4,32,11,13,"_dependencyMap"],[4,46,11,13],[5,2,11,13],[5,6,11,13,"_createClass"],[5,18,11,13],[5,21,11,13,"require"],[5,28,11,13],[5,29,11,13,"_dependencyMap"],[5,43,11,13],[6,2,26,0],[6,6,26,6,"DEBUG"],[6,11,26,18],[6,14,26,21],[6,19,26,26],[7,2,26,27],[7,6,44,6,"TaskQueue"],[7,15,44,15],[8,4,52,2],[8,13,52,2,"TaskQueue"],[8,23,52,2,"_ref"],[8,27,52,2],[8,29,52,61],[9,6,52,61],[9,10,52,15,"onMoreTasks"],[9,21,52,26],[9,24,52,26,"_ref"],[9,28,52,26],[9,29,52,15,"onMoreTasks"],[9,40,52,26],[10,6,52,26,"_classCallCheck"],[10,21,52,26],[10,28,52,26,"TaskQueue"],[10,37,52,26],[11,6,53,4],[11,10,53,8],[11,11,53,9,"_onMoreTasks"],[11,23,53,21],[11,26,53,24,"onMoreTasks"],[11,37,53,35],[12,6,54,4],[12,10,54,8],[12,11,54,9,"_queueStack"],[12,22,54,20],[12,25,54,23],[12,26,54,24],[13,8,54,25,"tasks"],[13,13,54,30],[13,15,54,32],[13,17,54,34],[14,8,54,36,"popable"],[14,15,54,43],[14,17,54,45],[15,6,54,50],[15,7,54,51],[15,8,54,52],[16,4,55,2],[17,4,55,3],[17,11,55,3,"_createClass"],[17,23,55,3],[17,24,55,3,"TaskQueue"],[17,33,55,3],[18,6,55,3,"key"],[18,9,55,3],[19,6,55,3,"value"],[19,11,55,3],[19,13,62,2],[19,22,62,2,"enqueue"],[19,29,62,9,"enqueue"],[19,30,62,10,"task"],[19,34,62,20],[19,36,62,28],[20,8,63,4],[20,12,63,8],[20,13,63,9,"_getCurrentQueue"],[20,29,63,25],[20,30,63,26],[20,31,63,27],[20,32,63,28,"push"],[20,36,63,32],[20,37,63,33,"task"],[20,41,63,37],[20,42,63,38],[21,6,64,2],[22,4,64,3],[23,6,64,3,"key"],[23,9,64,3],[24,6,64,3,"value"],[24,11,64,3],[24,13,66,2],[24,22,66,2,"enqueueTasks"],[24,34,66,14,"enqueueTasks"],[24,35,66,15,"tasks"],[24,40,66,33],[24,42,66,41],[25,8,67,4,"tasks"],[25,13,67,9],[25,14,67,10,"forEach"],[25,21,67,17],[25,22,67,18,"task"],[25,26,67,22],[25,30,67,26],[25,34,67,30],[25,35,67,31,"enqueue"],[25,42,67,38],[25,43,67,39,"task"],[25,47,67,43],[25,48,67,44],[25,49,67,45],[26,6,68,2],[27,4,68,3],[28,6,68,3,"key"],[28,9,68,3],[29,6,68,3,"value"],[29,11,68,3],[29,13,70,2],[29,22,70,2,"cancelTasks"],[29,33,70,13,"cancelTasks"],[29,34,70,14,"tasksToCancel"],[29,47,70,40],[29,49,70,48],[30,8,72,4],[30,12,72,8],[30,13,72,9,"_queueStack"],[30,24,72,20],[30,27,72,23],[30,31,72,27],[30,32,72,28,"_queueStack"],[30,43,72,39],[30,44,73,7,"map"],[30,47,73,10],[30,48,73,11,"queue"],[30,53,73,16],[30,58,73,21],[31,10,74,8],[31,13,74,11,"queue"],[31,18,74,16],[32,10,75,8,"tasks"],[32,15,75,13],[32,17,75,15,"queue"],[32,22,75,20],[32,23,75,21,"tasks"],[32,28,75,26],[32,29,75,27,"filter"],[32,35,75,33],[32,36,75,34,"task"],[32,40,75,38],[32,44,75,42,"tasksToCancel"],[32,57,75,55],[32,58,75,56,"indexOf"],[32,65,75,63],[32,66,75,64,"task"],[32,70,75,68],[32,71,75,69],[32,76,75,74],[32,77,75,75],[32,78,75,76],[33,8,76,6],[33,9,76,7],[33,10,76,8],[33,11,76,9],[33,12,77,7,"filter"],[33,18,77,13],[33,19,77,14],[33,20,77,15,"queue"],[33,25,77,20],[33,27,77,22,"idx"],[33,30,77,25],[33,35,77,30,"queue"],[33,40,77,35],[33,41,77,36,"tasks"],[33,46,77,41],[33,47,77,42,"length"],[33,53,77,48],[33,56,77,51],[33,57,77,52],[33,61,77,56,"idx"],[33,64,77,59],[33,69,77,64],[33,70,77,65],[33,71,77,66],[34,6,78,2],[35,4,78,3],[36,6,78,3,"key"],[36,9,78,3],[37,6,78,3,"value"],[37,11,78,3],[37,13,90,2],[37,22,90,2,"hasTasksToProcess"],[37,39,90,19,"hasTasksToProcess"],[37,40,90,19],[37,42,90,31],[38,8,91,4],[38,15,91,11],[38,19,91,15],[38,20,91,16,"_getCurrentQueue"],[38,36,91,32],[38,37,91,33],[38,38,91,34],[38,39,91,35,"length"],[38,45,91,41],[38,48,91,44],[38,49,91,45],[39,6,92,2],[40,4,92,3],[41,6,92,3,"key"],[41,9,92,3],[42,6,92,3,"value"],[42,11,92,3],[42,13,97,2],[42,22,97,2,"processNext"],[42,33,97,13,"processNext"],[42,34,97,13],[42,36,97,22],[43,8,98,4],[43,12,98,10,"queue"],[43,17,98,15],[43,20,98,18],[43,24,98,22],[43,25,98,23,"_getCurrentQueue"],[43,41,98,39],[43,42,98,40],[43,43,98,41],[44,8,99,4],[44,12,99,8,"queue"],[44,17,99,13],[44,18,99,14,"length"],[44,24,99,20],[44,26,99,22],[45,10,100,6],[45,14,100,12,"task"],[45,18,100,16],[45,21,100,19,"queue"],[45,26,100,24],[45,27,100,25,"shift"],[45,32,100,30],[45,33,100,31],[45,34,100,32],[46,10,101,6],[46,14,101,10],[47,12,102,8],[47,16,102,12],[47,23,102,19,"task"],[47,27,102,23],[47,32,102,28],[47,40,102,36],[47,44,102,40,"task"],[47,48,102,44],[47,49,102,45,"gen"],[47,52,102,48],[47,54,102,50],[48,14,103,10,"DEBUG"],[48,19,103,15],[48,23,103,19,"require"],[48,30,103,19],[48,31,103,19,"_dependencyMap"],[48,45,103,19],[48,74,103,27],[48,107,103,60],[48,110,103,63,"task"],[48,114,103,67],[48,115,103,68,"name"],[48,119,103,72],[48,120,103,73],[49,14,104,10],[49,18,104,14],[49,19,104,15,"_genPromise"],[49,30,104,26],[49,31,104,27,"task"],[49,35,104,31],[49,36,104,32],[50,12,105,8],[50,13,105,9],[50,19,105,15],[50,23,105,19],[50,30,105,26,"task"],[50,34,105,30],[50,39,105,35],[50,47,105,43],[50,51,105,47,"task"],[50,55,105,51],[50,56,105,52,"run"],[50,59,105,55],[50,61,105,57],[51,14,106,10,"DEBUG"],[51,19,106,15],[51,23,106,19,"require"],[51,30,106,19],[51,31,106,19,"_dependencyMap"],[51,45,106,19],[51,74,106,27],[51,96,106,49],[51,99,106,52,"task"],[51,103,106,56],[51,104,106,57,"name"],[51,108,106,61],[51,109,106,62],[52,14,107,10,"task"],[52,18,107,14],[52,19,107,15,"run"],[52,22,107,18],[52,23,107,19],[52,24,107,20],[53,12,108,8],[53,13,108,9],[53,19,108,15],[54,14,109,10,"require"],[54,21,109,10],[54,22,109,10,"_dependencyMap"],[54,36,109,10],[54,54,110,12],[54,61,110,19,"task"],[54,65,110,23],[54,70,110,28],[54,80,110,38],[54,82,111,12],[54,141,111,71],[54,144,112,14,"JSON"],[54,148,112,18],[54,149,112,19,"stringify"],[54,158,112,28],[54,159,112,29,"task"],[54,163,112,33],[54,165,112,35],[54,169,112,39],[54,171,112,41],[54,172,112,42],[54,173,113,10],[54,174,113,11],[55,14,114,10,"DEBUG"],[55,19,114,15],[55,23,114,19,"require"],[55,30,114,19],[55,31,114,19,"_dependencyMap"],[55,45,114,19],[55,74,114,27],[55,105,114,58],[55,106,114,59],[56,14,115,10,"task"],[56,18,115,14],[56,19,115,15],[56,20,115,16],[57,12,116,8],[58,10,117,6],[58,11,117,7],[58,12,117,8],[58,19,117,15,"e"],[58,20,117,16],[58,22,117,18],[59,12,118,8,"e"],[59,13,118,9],[59,14,118,10,"message"],[59,21,118,17],[59,24,120,10],[59,53,120,39],[59,57,120,43,"task"],[59,61,120,47],[59,62,120,48,"name"],[59,66,120,52],[59,70,120,56],[59,72,120,58],[59,73,120,59],[59,76,120,62],[59,80,120,66],[59,83,120,69,"e"],[59,84,120,70],[59,85,120,71,"message"],[59,92,120,78],[60,12,121,8],[60,18,121,14,"e"],[60,19,121,15],[61,10,122,6],[62,8,123,4],[63,6,124,2],[64,4,124,3],[65,6,124,3,"key"],[65,9,124,3],[66,6,124,3,"value"],[66,11,124,3],[66,13,133,2],[66,22,133,2,"_getCurrentQueue"],[66,38,133,18,"_getCurrentQueue"],[66,39,133,18],[66,41,133,34],[67,8,134,4],[67,12,134,10,"stackIdx"],[67,20,134,18],[67,23,134,21],[67,27,134,25],[67,28,134,26,"_queueStack"],[67,39,134,37],[67,40,134,38,"length"],[67,46,134,44],[67,49,134,47],[67,50,134,48],[68,8,135,4],[68,12,135,10,"queue"],[68,17,135,15],[68,20,135,18],[68,24,135,22],[68,25,135,23,"_queueStack"],[68,36,135,34],[68,37,135,35,"stackIdx"],[68,45,135,43],[68,46,135,44],[69,8,136,4],[69,12,137,6,"queue"],[69,17,137,11],[69,18,137,12,"popable"],[69,25,137,19],[69,29,138,6,"queue"],[69,34,138,11],[69,35,138,12,"tasks"],[69,40,138,17],[69,41,138,18,"length"],[69,47,138,24],[69,52,138,29],[69,53,138,30],[69,57,139,6],[69,61,139,10],[69,62,139,11,"_queueStack"],[69,73,139,22],[69,74,139,23,"length"],[69,80,139,29],[69,83,139,32],[69,84,139,33],[69,86,140,6],[70,10,141,6],[70,14,141,10],[70,15,141,11,"_queueStack"],[70,26,141,22],[70,27,141,23,"pop"],[70,30,141,26],[70,31,141,27],[70,32,141,28],[71,10,142,6,"DEBUG"],[71,15,142,11],[71,19,143,8,"require"],[71,26,143,8],[71,27,143,8,"_dependencyMap"],[71,41,143,8],[71,70,143,16],[71,97,143,43],[71,99,143,45],[72,12,144,10,"stackIdx"],[72,20,144,18],[73,12,145,10,"queueStackSize"],[73,26,145,24],[73,28,145,26],[73,32,145,30],[73,33,145,31,"_queueStack"],[73,44,145,42],[73,45,145,43,"length"],[74,10,146,8],[74,11,146,9],[74,12,146,10],[75,10,147,6],[75,17,147,13],[75,21,147,17],[75,22,147,18,"_getCurrentQueue"],[75,38,147,34],[75,39,147,35],[75,40,147,36],[76,8,148,4],[76,9,148,5],[76,15,148,11],[77,10,149,6],[77,17,149,13,"queue"],[77,22,149,18],[77,23,149,19,"tasks"],[77,28,149,24],[78,8,150,4],[79,6,151,2],[80,4,151,3],[81,6,151,3,"key"],[81,9,151,3],[82,6,151,3,"value"],[82,11,151,3],[82,13,153,2],[82,22,153,2,"_genPromise"],[82,33,153,13,"_genPromise"],[82,34,153,14,"task"],[82,38,153,31],[82,40,153,33],[83,8,158,4],[83,12,158,8],[83,13,158,9,"_queueStack"],[83,24,158,20],[83,25,158,21,"push"],[83,29,158,25],[83,30,158,26],[84,10,158,27,"tasks"],[84,15,158,32],[84,17,158,34],[84,19,158,36],[85,10,158,38,"popable"],[85,17,158,45],[85,19,158,47],[86,8,158,52],[86,9,158,53],[86,10,158,54],[87,8,159,4],[87,12,159,10,"stackIdx"],[87,20,159,18],[87,23,159,21],[87,27,159,25],[87,28,159,26,"_queueStack"],[87,39,159,37],[87,40,159,38,"length"],[87,46,159,44],[87,49,159,47],[87,50,159,48],[88,8,160,4],[88,12,160,10,"stackItem"],[88,21,160,19],[88,24,160,22],[88,28,160,26],[88,29,160,27,"_queueStack"],[88,40,160,38],[88,41,160,39,"stackIdx"],[88,49,160,47],[88,50,160,48],[89,8,161,4,"DEBUG"],[89,13,161,9],[89,17,161,13,"require"],[89,24,161,13],[89,25,161,13,"_dependencyMap"],[89,39,161,13],[89,68,161,21],[89,97,161,50],[89,99,161,52],[90,10,161,53,"stackIdx"],[91,8,161,61],[91,9,161,62],[91,10,161,63],[92,8,162,4,"DEBUG"],[92,13,162,9],[92,17,162,13,"require"],[92,24,162,13],[92,25,162,13,"_dependencyMap"],[92,39,162,13],[92,68,162,21],[92,95,162,48],[92,98,162,51,"task"],[92,102,162,55],[92,103,162,56,"name"],[92,107,162,60],[92,108,162,61],[93,8,163,4,"task"],[93,12,163,8],[93,13,164,7,"gen"],[93,16,164,10],[93,17,164,11],[93,18,164,12],[93,19,165,7,"then"],[93,23,165,11],[93,24,165,12],[93,30,165,18],[94,10,166,8,"DEBUG"],[94,15,166,13],[94,19,167,10,"require"],[94,26,167,10],[94,27,167,10,"_dependencyMap"],[94,41,167,10],[94,70,167,18],[94,103,167,51],[94,106,167,54,"task"],[94,110,167,58],[94,111,167,59,"name"],[94,115,167,63],[94,117,167,65],[95,12,168,12,"stackIdx"],[95,20,168,20],[96,12,169,12,"queueStackSize"],[96,26,169,26],[96,28,169,28],[96,32,169,32],[96,33,169,33,"_queueStack"],[96,44,169,44],[96,45,169,45,"length"],[97,10,170,10],[97,11,170,11],[97,12,170,12],[98,10,171,8,"stackItem"],[98,19,171,17],[98,20,171,18,"popable"],[98,27,171,25],[98,30,171,28],[98,34,171,32],[99,10,172,8],[99,14,172,12],[99,15,172,13,"hasTasksToProcess"],[99,32,172,30],[99,33,172,31],[99,34,172,32],[99,38,172,36],[99,42,172,40],[99,43,172,41,"_onMoreTasks"],[99,55,172,53],[99,56,172,54],[99,57,172,55],[100,8,173,6],[100,9,173,7],[100,10,173,8],[100,11,174,7,"catch"],[100,16,174,12],[100,17,174,13,"ex"],[100,19,174,15],[100,23,174,19],[101,10,175,8,"setTimeout"],[101,20,175,18],[101,21,175,19],[101,27,175,25],[102,12,176,10,"ex"],[102,14,176,12],[102,15,176,13,"message"],[102,22,176,20],[102,25,176,23],[102,71,176,69,"task"],[102,75,176,73],[102,76,176,74,"name"],[102,80,176,78],[102,85,176,83,"ex"],[102,87,176,85],[102,88,176,86,"message"],[102,95,176,93],[102,97,176,95],[103,12,177,10],[103,18,177,16,"ex"],[103,20,177,18],[104,10,178,8],[104,11,178,9],[104,13,178,11],[104,14,178,12],[104,15,178,13],[105,8,179,6],[105,9,179,7],[105,10,179,8],[106,6,180,2],[107,4,180,3],[108,2,180,3],[109,2,183,0,"module"],[109,8,183,6],[109,9,183,7,"exports"],[109,16,183,14],[109,19,183,17,"TaskQueue"],[109,28,183,26],[110,0,183,27],[110,3]],"functionMap":{"names":["<global>","TaskQueue","constructor","enqueue","enqueueTasks","tasks.forEach$argument_0","cancelTasks","_queueStack.map$argument_0","queue.tasks.filter$argument_0","_queueStack.map.filter$argument_0","hasTasksToProcess","processNext","_getCurrentQueue","_genPromise","task.gen.then$argument_0","task.gen.then._catch$argument_0","setTimeout$argument_0"],"mappings":"AAA;AC2C;ECQ;GDG;EEO;GFE;EGE;kBCC,0BD;GHC;EKE;WCG;kCCE,0CD;QDC;cGC,mDH;GLC;ESY;GTE;EUK;GV2B;EWS;GXkB;EYE;YCY;ODQ;aEC;mBCC;SDG;OFC;GZC;CDC"}},"type":"js/module"}]}