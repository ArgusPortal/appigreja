{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":303,"column":1}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":303,"column":1}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0},"end":{"line":303,"column":1}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0},"end":{"line":15,"column":34}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM="}},{"name":"./VirtualizeUtils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0},"end":{"line":14,"column":70}}],"key":"WkNMKgqK4aOdBxtaLg+KYSUiZ0s="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _invariant = _interopRequireDefault(require(_dependencyMap[3], \"invariant\"));\n  var ListMetricsAggregator = exports.default = /*#__PURE__*/function () {\n    function ListMetricsAggregator() {\n      (0, _classCallCheck2.default)(this, ListMetricsAggregator);\n      this._averageCellLength = 0;\n      this._cellMetrics = new Map();\n      this._highestMeasuredCellIndex = 0;\n      this._measuredCellsLength = 0;\n      this._measuredCellsCount = 0;\n      this._orientation = {\n        horizontal: false,\n        rtl: false\n      };\n    }\n    return (0, _createClass2.default)(ListMetricsAggregator, [{\n      key: \"notifyCellLayout\",\n      value: function notifyCellLayout(_ref) {\n        var cellIndex = _ref.cellIndex,\n          cellKey = _ref.cellKey,\n          orientation = _ref.orientation,\n          layout = _ref.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        var next = {\n          index: cellIndex,\n          length: this._selectLength(layout),\n          isMounted: true,\n          offset: this.flowRelativeOffset(layout)\n        };\n        var curr = this._cellMetrics.get(cellKey);\n        if (!curr || next.offset !== curr.offset || next.length !== curr.length) {\n          if (curr) {\n            var dLength = next.length - curr.length;\n            this._measuredCellsLength += dLength;\n          } else {\n            this._measuredCellsLength += next.length;\n            this._measuredCellsCount += 1;\n          }\n          this._averageCellLength = this._measuredCellsLength / this._measuredCellsCount;\n          this._cellMetrics.set(cellKey, next);\n          this._highestMeasuredCellIndex = Math.max(this._highestMeasuredCellIndex, cellIndex);\n          return true;\n        } else {\n          curr.isMounted = true;\n          return false;\n        }\n      }\n    }, {\n      key: \"notifyCellUnmounted\",\n      value: function notifyCellUnmounted(cellKey) {\n        var curr = this._cellMetrics.get(cellKey);\n        if (curr) {\n          curr.isMounted = false;\n        }\n      }\n    }, {\n      key: \"notifyListContentLayout\",\n      value: function notifyListContentLayout(_ref2) {\n        var orientation = _ref2.orientation,\n          layout = _ref2.layout;\n        this._invalidateIfOrientationChanged(orientation);\n        this._contentLength = this._selectLength(layout);\n      }\n    }, {\n      key: \"getAverageCellLength\",\n      value: function getAverageCellLength() {\n        return this._averageCellLength;\n      }\n    }, {\n      key: \"getHighestMeasuredCellIndex\",\n      value: function getHighestMeasuredCellIndex() {\n        return this._highestMeasuredCellIndex;\n      }\n    }, {\n      key: \"getCellMetricsApprox\",\n      value: function getCellMetricsApprox(index, props) {\n        var frame = this.getCellMetrics(index, props);\n        if (frame && frame.index === index) {\n          return frame;\n        } else {\n          var data = props.data,\n            getItemCount = props.getItemCount;\n          (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get frame for out of range index ' + index);\n          return {\n            length: this._averageCellLength,\n            offset: this._averageCellLength * index,\n            index,\n            isMounted: false\n          };\n        }\n      }\n    }, {\n      key: \"getCellMetrics\",\n      value: function getCellMetrics(index, props) {\n        var data = props.data,\n          getItem = props.getItem,\n          getItemCount = props.getItemCount,\n          getItemLayout = props.getItemLayout;\n        (0, _invariant.default)(index >= 0 && index < getItemCount(data), 'Tried to get metrics for out of range cell index ' + index);\n        var keyExtractor = props.keyExtractor ?? require(_dependencyMap[4], \"./VirtualizeUtils\").keyExtractor;\n        var frame = this._cellMetrics.get(keyExtractor(getItem(data, index), index));\n        if (frame && frame.index === index) {\n          return frame;\n        }\n        if (getItemLayout) {\n          var _getItemLayout = getItemLayout(data, index),\n            length = _getItemLayout.length,\n            offset = _getItemLayout.offset;\n          return {\n            index,\n            length,\n            offset,\n            isMounted: true\n          };\n        }\n        return null;\n      }\n    }, {\n      key: \"getCellOffsetApprox\",\n      value: function getCellOffsetApprox(index, props) {\n        if (Number.isInteger(index)) {\n          return this.getCellMetricsApprox(index, props).offset;\n        } else {\n          var frameMetrics = this.getCellMetricsApprox(Math.floor(index), props);\n          var remainder = index - Math.floor(index);\n          return frameMetrics.offset + remainder * frameMetrics.length;\n        }\n      }\n    }, {\n      key: \"getContentLength\",\n      value: function getContentLength() {\n        return this._contentLength ?? 0;\n      }\n    }, {\n      key: \"hasContentLength\",\n      value: function hasContentLength() {\n        return this._contentLength != null;\n      }\n    }, {\n      key: \"flowRelativeOffset\",\n      value: function flowRelativeOffset(layout, referenceContentLength) {\n        var _this$_orientation = this._orientation,\n          horizontal = _this$_orientation.horizontal,\n          rtl = _this$_orientation.rtl;\n        if (horizontal && rtl) {\n          var contentLength = referenceContentLength ?? this._contentLength;\n          (0, _invariant.default)(contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return contentLength - (this._selectOffset(layout) + this._selectLength(layout));\n        } else {\n          return this._selectOffset(layout);\n        }\n      }\n    }, {\n      key: \"cartesianOffset\",\n      value: function cartesianOffset(flowRelativeOffset) {\n        var _this$_orientation2 = this._orientation,\n          horizontal = _this$_orientation2.horizontal,\n          rtl = _this$_orientation2.rtl;\n        if (horizontal && rtl) {\n          (0, _invariant.default)(this._contentLength != null, 'ListMetricsAggregator must be notified of list content layout before resolving offsets');\n          return this._contentLength - flowRelativeOffset;\n        } else {\n          return flowRelativeOffset;\n        }\n      }\n    }, {\n      key: \"_invalidateIfOrientationChanged\",\n      value: function _invalidateIfOrientationChanged(orientation) {\n        if (orientation.rtl !== this._orientation.rtl) {\n          this._cellMetrics.clear();\n        }\n        if (orientation.horizontal !== this._orientation.horizontal) {\n          this._averageCellLength = 0;\n          this._highestMeasuredCellIndex = 0;\n          this._measuredCellsLength = 0;\n          this._measuredCellsCount = 0;\n        }\n        this._orientation = orientation;\n      }\n    }, {\n      key: \"_selectLength\",\n      value: function _selectLength(_ref3) {\n        var width = _ref3.width,\n          height = _ref3.height;\n        return this._orientation.horizontal ? width : height;\n      }\n    }, {\n      key: \"_selectOffset\",\n      value: function _selectOffset(_ref4) {\n        var x = _ref4.x,\n          y = _ref4.y;\n        return this._orientation.horizontal ? x : y;\n      }\n    }]);\n  }();\n});","lineCount":203,"map":[[9,2,15,0],[9,6,15,0,"_invariant"],[9,16,15,0],[9,19,15,0,"_interopRequireDefault"],[9,41,15,0],[9,42,15,0,"require"],[9,49,15,0],[9,50,15,0,"_dependencyMap"],[9,64,15,0],[10,2,15,34],[10,6,59,21,"ListMetricsAggregator"],[10,27,59,42],[10,30,59,42,"exports"],[10,37,59,42],[10,38,59,42,"default"],[10,45,59,42],[11,4,59,42],[11,13,59,42,"ListMetricsAggregator"],[11,35,59,42],[12,6,59,42],[12,10,59,42,"_classCallCheck2"],[12,26,59,42],[12,27,59,42,"default"],[12,34,59,42],[12,42,59,42,"ListMetricsAggregator"],[12,63,59,42],[13,6,59,42],[13,11,60,2,"_averageCellLength"],[13,29,60,20],[13,32,60,23],[13,33,60,24],[14,6,60,24],[14,11,61,2,"_cellMetrics"],[14,23,61,14],[14,26,61,43],[14,30,61,47,"Map"],[14,33,61,50],[14,34,61,51],[14,35,61,52],[15,6,61,52],[15,11,63,2,"_highestMeasuredCellIndex"],[15,36,63,27],[15,39,63,30],[15,40,63,31],[16,6,63,31],[16,11,64,2,"_measuredCellsLength"],[16,31,64,22],[16,34,64,25],[16,35,64,26],[17,6,64,26],[17,11,65,2,"_measuredCellsCount"],[17,30,65,21],[17,33,65,24],[17,34,65,25],[18,6,65,25],[18,11,66,2,"_orientation"],[18,23,66,14],[18,26,66,34],[19,8,67,4,"horizontal"],[19,18,67,14],[19,20,67,16],[19,25,67,21],[20,8,68,4,"rtl"],[20,11,68,7],[20,13,68,9],[21,6,69,2],[21,7,69,3],[22,4,69,3],[23,4,69,3],[23,15,69,3,"_createClass2"],[23,28,69,3],[23,29,69,3,"default"],[23,36,69,3],[23,38,69,3,"ListMetricsAggregator"],[23,59,69,3],[24,6,69,3,"key"],[24,9,69,3],[25,6,69,3,"value"],[25,11,69,3],[25,13,76,2],[25,22,76,2,"notifyCellLayout"],[25,38,76,18,"notifyCellLayout"],[25,39,76,18,"_ref"],[25,43,76,18],[25,45,86,14],[26,8,86,14],[26,12,77,4,"cellIndex"],[26,21,77,13],[26,24,77,13,"_ref"],[26,28,77,13],[26,29,77,4,"cellIndex"],[26,38,77,13],[27,10,78,4,"cellKey"],[27,17,78,11],[27,20,78,11,"_ref"],[27,24,78,11],[27,25,78,4,"cellKey"],[27,32,78,11],[28,10,79,4,"orientation"],[28,21,79,15],[28,24,79,15,"_ref"],[28,28,79,15],[28,29,79,4,"orientation"],[28,40,79,15],[29,10,80,4,"layout"],[29,16,80,10],[29,19,80,10,"_ref"],[29,23,80,10],[29,24,80,4,"layout"],[29,30,80,10],[30,8,87,4],[30,12,87,8],[30,13,87,9,"_invalidateIfOrientationChanged"],[30,44,87,40],[30,45,87,41,"orientation"],[30,56,87,52],[30,57,87,53],[31,8,89,4],[31,12,89,10,"next"],[31,16,89,27],[31,19,89,30],[32,10,90,6,"index"],[32,15,90,11],[32,17,90,13,"cellIndex"],[32,26,90,22],[33,10,91,6,"length"],[33,16,91,12],[33,18,91,14],[33,22,91,18],[33,23,91,19,"_selectLength"],[33,36,91,32],[33,37,91,33,"layout"],[33,43,91,39],[33,44,91,40],[34,10,92,6,"isMounted"],[34,19,92,15],[34,21,92,17],[34,25,92,21],[35,10,93,6,"offset"],[35,16,93,12],[35,18,93,14],[35,22,93,18],[35,23,93,19,"flowRelativeOffset"],[35,41,93,37],[35,42,93,38,"layout"],[35,48,93,44],[36,8,94,4],[36,9,94,5],[37,8,95,4],[37,12,95,10,"curr"],[37,16,95,14],[37,19,95,17],[37,23,95,21],[37,24,95,22,"_cellMetrics"],[37,36,95,34],[37,37,95,35,"get"],[37,40,95,38],[37,41,95,39,"cellKey"],[37,48,95,46],[37,49,95,47],[38,8,97,4],[38,12,97,8],[38,13,97,9,"curr"],[38,17,97,13],[38,21,97,17,"next"],[38,25,97,21],[38,26,97,22,"offset"],[38,32,97,28],[38,37,97,33,"curr"],[38,41,97,37],[38,42,97,38,"offset"],[38,48,97,44],[38,52,97,48,"next"],[38,56,97,52],[38,57,97,53,"length"],[38,63,97,59],[38,68,97,64,"curr"],[38,72,97,68],[38,73,97,69,"length"],[38,79,97,75],[38,81,97,77],[39,10,98,6],[39,14,98,10,"curr"],[39,18,98,14],[39,20,98,16],[40,12,99,8],[40,16,99,14,"dLength"],[40,23,99,21],[40,26,99,24,"next"],[40,30,99,28],[40,31,99,29,"length"],[40,37,99,35],[40,40,99,38,"curr"],[40,44,99,42],[40,45,99,43,"length"],[40,51,99,49],[41,12,100,8],[41,16,100,12],[41,17,100,13,"_measuredCellsLength"],[41,37,100,33],[41,41,100,37,"dLength"],[41,48,100,44],[42,10,101,6],[42,11,101,7],[42,17,101,13],[43,12,102,8],[43,16,102,12],[43,17,102,13,"_measuredCellsLength"],[43,37,102,33],[43,41,102,37,"next"],[43,45,102,41],[43,46,102,42,"length"],[43,52,102,48],[44,12,103,8],[44,16,103,12],[44,17,103,13,"_measuredCellsCount"],[44,36,103,32],[44,40,103,36],[44,41,103,37],[45,10,104,6],[46,10,106,6],[46,14,106,10],[46,15,106,11,"_averageCellLength"],[46,33,106,29],[46,36,107,8],[46,40,107,12],[46,41,107,13,"_measuredCellsLength"],[46,61,107,33],[46,64,107,36],[46,68,107,40],[46,69,107,41,"_measuredCellsCount"],[46,88,107,60],[47,10,108,6],[47,14,108,10],[47,15,108,11,"_cellMetrics"],[47,27,108,23],[47,28,108,24,"set"],[47,31,108,27],[47,32,108,28,"cellKey"],[47,39,108,35],[47,41,108,37,"next"],[47,45,108,41],[47,46,108,42],[48,10,109,6],[48,14,109,10],[48,15,109,11,"_highestMeasuredCellIndex"],[48,40,109,36],[48,43,109,39,"Math"],[48,47,109,43],[48,48,109,44,"max"],[48,51,109,47],[48,52,110,8],[48,56,110,12],[48,57,110,13,"_highestMeasuredCellIndex"],[48,82,110,38],[48,84,111,8,"cellIndex"],[48,93,112,6],[48,94,112,7],[49,10,113,6],[49,17,113,13],[49,21,113,17],[50,8,114,4],[50,9,114,5],[50,15,114,11],[51,10,115,6,"curr"],[51,14,115,10],[51,15,115,11,"isMounted"],[51,24,115,20],[51,27,115,23],[51,31,115,27],[52,10,116,6],[52,17,116,13],[52,22,116,18],[53,8,117,4],[54,6,118,2],[55,4,118,3],[56,6,118,3,"key"],[56,9,118,3],[57,6,118,3,"value"],[57,11,118,3],[57,13,123,2],[57,22,123,2,"notifyCellUnmounted"],[57,41,123,21,"notifyCellUnmounted"],[57,42,123,22,"cellKey"],[57,49,123,37],[57,51,123,45],[58,8,124,4],[58,12,124,10,"curr"],[58,16,124,14],[58,19,124,17],[58,23,124,21],[58,24,124,22,"_cellMetrics"],[58,36,124,34],[58,37,124,35,"get"],[58,40,124,38],[58,41,124,39,"cellKey"],[58,48,124,46],[58,49,124,47],[59,8,125,4],[59,12,125,8,"curr"],[59,16,125,12],[59,18,125,14],[60,10,126,6,"curr"],[60,14,126,10],[60,15,126,11,"isMounted"],[60,24,126,20],[60,27,126,23],[60,32,126,28],[61,8,127,4],[62,6,128,2],[63,4,128,3],[64,6,128,3,"key"],[64,9,128,3],[65,6,128,3,"value"],[65,11,128,3],[65,13,133,2],[65,22,133,2,"notifyListContentLayout"],[65,45,133,25,"notifyListContentLayout"],[65,46,133,25,"_ref2"],[65,51,133,25],[65,53,139,11],[66,8,139,11],[66,12,134,4,"orientation"],[66,23,134,15],[66,26,134,15,"_ref2"],[66,31,134,15],[66,32,134,4,"orientation"],[66,43,134,15],[67,10,135,4,"layout"],[67,16,135,10],[67,19,135,10,"_ref2"],[67,24,135,10],[67,25,135,4,"layout"],[67,31,135,10],[68,8,140,4],[68,12,140,8],[68,13,140,9,"_invalidateIfOrientationChanged"],[68,44,140,40],[68,45,140,41,"orientation"],[68,56,140,52],[68,57,140,53],[69,8,141,4],[69,12,141,8],[69,13,141,9,"_contentLength"],[69,27,141,23],[69,30,141,26],[69,34,141,30],[69,35,141,31,"_selectLength"],[69,48,141,44],[69,49,141,45,"layout"],[69,55,141,51],[69,56,141,52],[70,6,142,2],[71,4,142,3],[72,6,142,3,"key"],[72,9,142,3],[73,6,142,3,"value"],[73,11,142,3],[73,13,147,2],[73,22,147,2,"getAverageCellLength"],[73,42,147,22,"getAverageCellLength"],[73,43,147,22],[73,45,147,33],[74,8,148,4],[74,15,148,11],[74,19,148,15],[74,20,148,16,"_averageCellLength"],[74,38,148,34],[75,6,149,2],[76,4,149,3],[77,6,149,3,"key"],[77,9,149,3],[78,6,149,3,"value"],[78,11,149,3],[78,13,155,2],[78,22,155,2,"getHighestMeasuredCellIndex"],[78,49,155,29,"getHighestMeasuredCellIndex"],[78,50,155,29],[78,52,155,40],[79,8,156,4],[79,15,156,11],[79,19,156,15],[79,20,156,16,"_highestMeasuredCellIndex"],[79,45,156,41],[80,6,157,2],[81,4,157,3],[82,6,157,3,"key"],[82,9,157,3],[83,6,157,3,"value"],[83,11,157,3],[83,13,164,2],[83,22,164,2,"getCellMetricsApprox"],[83,42,164,22,"getCellMetricsApprox"],[83,43,164,23,"index"],[83,48,164,36],[83,50,164,38,"props"],[83,55,164,60],[83,57,164,75],[84,8,165,4],[84,12,165,10,"frame"],[84,17,165,15],[84,20,165,18],[84,24,165,22],[84,25,165,23,"getCellMetrics"],[84,39,165,37],[84,40,165,38,"index"],[84,45,165,43],[84,47,165,45,"props"],[84,52,165,50],[84,53,165,51],[85,8,166,4],[85,12,166,8,"frame"],[85,17,166,13],[85,21,166,17,"frame"],[85,26,166,22],[85,27,166,23,"index"],[85,32,166,28],[85,37,166,33,"index"],[85,42,166,38],[85,44,166,40],[86,10,168,6],[86,17,168,13,"frame"],[86,22,168,18],[87,8,169,4],[87,9,169,5],[87,15,169,11],[88,10,170,6],[88,14,170,13,"data"],[88,18,170,17],[88,21,170,35,"props"],[88,26,170,40],[88,27,170,13,"data"],[88,31,170,17],[89,12,170,19,"getItemCount"],[89,24,170,31],[89,27,170,35,"props"],[89,32,170,40],[89,33,170,19,"getItemCount"],[89,45,170,31],[90,10,171,6],[90,14,171,6,"invariant"],[90,32,171,15],[90,34,172,8,"index"],[90,39,172,13],[90,43,172,17],[90,44,172,18],[90,48,172,22,"index"],[90,53,172,27],[90,56,172,30,"getItemCount"],[90,68,172,42],[90,69,172,43,"data"],[90,73,172,47],[90,74,172,48],[90,76,173,8],[90,120,173,52],[90,123,173,55,"index"],[90,128,174,6],[90,129,174,7],[91,10,175,6],[91,17,175,13],[92,12,176,8,"length"],[92,18,176,14],[92,20,176,16],[92,24,176,20],[92,25,176,21,"_averageCellLength"],[92,43,176,39],[93,12,177,8,"offset"],[93,18,177,14],[93,20,177,16],[93,24,177,20],[93,25,177,21,"_averageCellLength"],[93,43,177,39],[93,46,177,42,"index"],[93,51,177,47],[94,12,178,8,"index"],[94,17,178,13],[95,12,179,8,"isMounted"],[95,21,179,17],[95,23,179,19],[96,10,180,6],[96,11,180,7],[97,8,181,4],[98,6,182,2],[99,4,182,3],[100,6,182,3,"key"],[100,9,182,3],[101,6,182,3,"value"],[101,11,182,3],[101,13,187,2],[101,22,187,2,"getCellMetrics"],[101,36,187,16,"getCellMetrics"],[101,37,187,17,"index"],[101,42,187,30],[101,44,187,32,"props"],[101,49,187,54],[101,51,187,70],[102,8,188,4],[102,12,188,11,"data"],[102,16,188,15],[102,19,188,57,"props"],[102,24,188,62],[102,25,188,11,"data"],[102,29,188,15],[103,10,188,17,"getItem"],[103,17,188,24],[103,20,188,57,"props"],[103,25,188,62],[103,26,188,17,"getItem"],[103,33,188,24],[104,10,188,26,"getItemCount"],[104,22,188,38],[104,25,188,57,"props"],[104,30,188,62],[104,31,188,26,"getItemCount"],[104,43,188,38],[105,10,188,40,"getItemLayout"],[105,23,188,53],[105,26,188,57,"props"],[105,31,188,62],[105,32,188,40,"getItemLayout"],[105,45,188,53],[106,8,189,4],[106,12,189,4,"invariant"],[106,30,189,13],[106,32,190,6,"index"],[106,37,190,11],[106,41,190,15],[106,42,190,16],[106,46,190,20,"index"],[106,51,190,25],[106,54,190,28,"getItemCount"],[106,66,190,40],[106,67,190,41,"data"],[106,71,190,45],[106,72,190,46],[106,74,191,6],[106,125,191,57],[106,128,191,60,"index"],[106,133,192,4],[106,134,192,5],[107,8,193,4],[107,12,193,10,"keyExtractor"],[107,24,193,22],[107,27,193,25,"props"],[107,32,193,30],[107,33,193,31,"keyExtractor"],[107,45,193,43],[107,49,193,47,"defaultKeyExtractor"],[107,75,193,47],[107,76,193,47,"defaultKeyExtractor"],[107,109,193,66],[108,8,194,4],[108,12,194,10,"frame"],[108,17,194,15],[108,20,194,18],[108,24,194,22],[108,25,194,23,"_cellMetrics"],[108,37,194,35],[108,38,194,36,"get"],[108,41,194,39],[108,42,195,6,"keyExtractor"],[108,54,195,18],[108,55,195,19,"getItem"],[108,62,195,26],[108,63,195,27,"data"],[108,67,195,31],[108,69,195,33,"index"],[108,74,195,38],[108,75,195,39],[108,77,195,41,"index"],[108,82,195,46],[108,83,196,4],[108,84,196,5],[109,8,197,4],[109,12,197,8,"frame"],[109,17,197,13],[109,21,197,17,"frame"],[109,26,197,22],[109,27,197,23,"index"],[109,32,197,28],[109,37,197,33,"index"],[109,42,197,38],[109,44,197,40],[110,10,198,6],[110,17,198,13,"frame"],[110,22,198,18],[111,8,199,4],[112,8,201,4],[112,12,201,8,"getItemLayout"],[112,25,201,21],[112,27,201,23],[113,10,202,6],[113,14,202,6,"_getItemLayout"],[113,28,202,6],[113,31,202,31,"getItemLayout"],[113,44,202,44],[113,45,202,45,"data"],[113,49,202,49],[113,51,202,51,"index"],[113,56,202,56],[113,57,202,57],[114,12,202,13,"length"],[114,18,202,19],[114,21,202,19,"_getItemLayout"],[114,35,202,19],[114,36,202,13,"length"],[114,42,202,19],[115,12,202,21,"offset"],[115,18,202,27],[115,21,202,27,"_getItemLayout"],[115,35,202,27],[115,36,202,21,"offset"],[115,42,202,27],[116,10,205,6],[116,17,205,13],[117,12,205,14,"index"],[117,17,205,19],[118,12,205,21,"length"],[118,18,205,27],[119,12,205,29,"offset"],[119,18,205,35],[120,12,205,37,"isMounted"],[120,21,205,46],[120,23,205,48],[121,10,205,52],[121,11,205,53],[122,8,206,4],[123,8,208,4],[123,15,208,11],[123,19,208,15],[124,6,209,2],[125,4,209,3],[126,6,209,3,"key"],[126,9,209,3],[127,6,209,3,"value"],[127,11,209,3],[127,13,215,2],[127,22,215,2,"getCellOffsetApprox"],[127,41,215,21,"getCellOffsetApprox"],[127,42,215,22,"index"],[127,47,215,35],[127,49,215,37,"props"],[127,54,215,59],[127,56,215,69],[128,8,216,4],[128,12,216,8,"Number"],[128,18,216,14],[128,19,216,15,"isInteger"],[128,28,216,24],[128,29,216,25,"index"],[128,34,216,30],[128,35,216,31],[128,37,216,33],[129,10,217,6],[129,17,217,13],[129,21,217,17],[129,22,217,18,"getCellMetricsApprox"],[129,42,217,38],[129,43,217,39,"index"],[129,48,217,44],[129,50,217,46,"props"],[129,55,217,51],[129,56,217,52],[129,57,217,53,"offset"],[129,63,217,59],[130,8,218,4],[130,9,218,5],[130,15,218,11],[131,10,219,6],[131,14,219,12,"frameMetrics"],[131,26,219,24],[131,29,219,27],[131,33,219,31],[131,34,219,32,"getCellMetricsApprox"],[131,54,219,52],[131,55,219,53,"Math"],[131,59,219,57],[131,60,219,58,"floor"],[131,65,219,63],[131,66,219,64,"index"],[131,71,219,69],[131,72,219,70],[131,74,219,72,"props"],[131,79,219,77],[131,80,219,78],[132,10,220,6],[132,14,220,12,"remainder"],[132,23,220,21],[132,26,220,24,"index"],[132,31,220,29],[132,34,220,32,"Math"],[132,38,220,36],[132,39,220,37,"floor"],[132,44,220,42],[132,45,220,43,"index"],[132,50,220,48],[132,51,220,49],[133,10,221,6],[133,17,221,13,"frameMetrics"],[133,29,221,25],[133,30,221,26,"offset"],[133,36,221,32],[133,39,221,35,"remainder"],[133,48,221,44],[133,51,221,47,"frameMetrics"],[133,63,221,59],[133,64,221,60,"length"],[133,70,221,66],[134,8,222,4],[135,6,223,2],[136,4,223,3],[137,6,223,3,"key"],[137,9,223,3],[138,6,223,3,"value"],[138,11,223,3],[138,13,228,2],[138,22,228,2,"getContentLength"],[138,38,228,18,"getContentLength"],[138,39,228,18],[138,41,228,29],[139,8,229,4],[139,15,229,11],[139,19,229,15],[139,20,229,16,"_contentLength"],[139,34,229,30],[139,38,229,34],[139,39,229,35],[140,6,230,2],[141,4,230,3],[142,6,230,3,"key"],[142,9,230,3],[143,6,230,3,"value"],[143,11,230,3],[143,13,235,2],[143,22,235,2,"hasContentLength"],[143,38,235,18,"hasContentLength"],[143,39,235,18],[143,41,235,30],[144,8,236,4],[144,15,236,11],[144,19,236,15],[144,20,236,16,"_contentLength"],[144,34,236,30],[144,38,236,34],[144,42,236,38],[145,6,237,2],[146,4,237,3],[147,6,237,3,"key"],[147,9,237,3],[148,6,237,3,"value"],[148,11,237,3],[148,13,243,2],[148,22,243,2,"flowRelativeOffset"],[148,40,243,20,"flowRelativeOffset"],[148,41,243,21,"layout"],[148,47,243,35],[148,49,243,37,"referenceContentLength"],[148,71,243,69],[148,73,243,79],[149,8,244,4],[149,12,244,4,"_this$_orientation"],[149,30,244,4],[149,33,244,30],[149,37,244,34],[149,38,244,35,"_orientation"],[149,50,244,47],[150,10,244,11,"horizontal"],[150,20,244,21],[150,23,244,21,"_this$_orientation"],[150,41,244,21],[150,42,244,11,"horizontal"],[150,52,244,21],[151,10,244,23,"rtl"],[151,13,244,26],[151,16,244,26,"_this$_orientation"],[151,34,244,26],[151,35,244,23,"rtl"],[151,38,244,26],[152,8,246,4],[152,12,246,8,"horizontal"],[152,22,246,18],[152,26,246,22,"rtl"],[152,29,246,25],[152,31,246,27],[153,10,247,6],[153,14,247,12,"contentLength"],[153,27,247,25],[153,30,247,28,"referenceContentLength"],[153,52,247,50],[153,56,247,54],[153,60,247,58],[153,61,247,59,"_contentLength"],[153,75,247,73],[154,10,248,6],[154,14,248,6,"invariant"],[154,32,248,15],[154,34,249,8,"contentLength"],[154,47,249,21],[154,51,249,25],[154,55,249,29],[154,57,250,8],[154,145,251,6],[154,146,251,7],[155,10,252,6],[155,17,253,8,"contentLength"],[155,30,253,21],[155,34,254,9],[155,38,254,13],[155,39,254,14,"_selectOffset"],[155,52,254,27],[155,53,254,28,"layout"],[155,59,254,34],[155,60,254,35],[155,63,254,38],[155,67,254,42],[155,68,254,43,"_selectLength"],[155,81,254,56],[155,82,254,57,"layout"],[155,88,254,63],[155,89,254,64],[155,90,254,65],[156,8,256,4],[156,9,256,5],[156,15,256,11],[157,10,257,6],[157,17,257,13],[157,21,257,17],[157,22,257,18,"_selectOffset"],[157,35,257,31],[157,36,257,32,"layout"],[157,42,257,38],[157,43,257,39],[158,8,258,4],[159,6,259,2],[160,4,259,3],[161,6,259,3,"key"],[161,9,259,3],[162,6,259,3,"value"],[162,11,259,3],[162,13,264,2],[162,22,264,2,"cartesianOffset"],[162,37,264,17,"cartesianOffset"],[162,38,264,18,"flowRelativeOffset"],[162,56,264,44],[162,58,264,54],[163,8,265,4],[163,12,265,4,"_this$_orientation2"],[163,31,265,4],[163,34,265,30],[163,38,265,34],[163,39,265,35,"_orientation"],[163,51,265,47],[164,10,265,11,"horizontal"],[164,20,265,21],[164,23,265,21,"_this$_orientation2"],[164,42,265,21],[164,43,265,11,"horizontal"],[164,53,265,21],[165,10,265,23,"rtl"],[165,13,265,26],[165,16,265,26,"_this$_orientation2"],[165,35,265,26],[165,36,265,23,"rtl"],[165,39,265,26],[166,8,267,4],[166,12,267,8,"horizontal"],[166,22,267,18],[166,26,267,22,"rtl"],[166,29,267,25],[166,31,267,27],[167,10,268,6],[167,14,268,6,"invariant"],[167,32,268,15],[167,34,269,8],[167,38,269,12],[167,39,269,13,"_contentLength"],[167,53,269,27],[167,57,269,31],[167,61,269,35],[167,63,270,8],[167,151,271,6],[167,152,271,7],[168,10,272,6],[168,17,272,13],[168,21,272,17],[168,22,272,18,"_contentLength"],[168,36,272,32],[168,39,272,35,"flowRelativeOffset"],[168,57,272,53],[169,8,273,4],[169,9,273,5],[169,15,273,11],[170,10,274,6],[170,17,274,13,"flowRelativeOffset"],[170,35,274,31],[171,8,275,4],[172,6,276,2],[173,4,276,3],[174,6,276,3,"key"],[174,9,276,3],[175,6,276,3,"value"],[175,11,276,3],[175,13,278,2],[175,22,278,2,"_invalidateIfOrientationChanged"],[175,53,278,33,"_invalidateIfOrientationChanged"],[175,54,278,34,"orientation"],[175,65,278,62],[175,67,278,70],[176,8,279,4],[176,12,279,8,"orientation"],[176,23,279,19],[176,24,279,20,"rtl"],[176,27,279,23],[176,32,279,28],[176,36,279,32],[176,37,279,33,"_orientation"],[176,49,279,45],[176,50,279,46,"rtl"],[176,53,279,49],[176,55,279,51],[177,10,280,6],[177,14,280,10],[177,15,280,11,"_cellMetrics"],[177,27,280,23],[177,28,280,24,"clear"],[177,33,280,29],[177,34,280,30],[177,35,280,31],[178,8,281,4],[179,8,283,4],[179,12,283,8,"orientation"],[179,23,283,19],[179,24,283,20,"horizontal"],[179,34,283,30],[179,39,283,35],[179,43,283,39],[179,44,283,40,"_orientation"],[179,56,283,52],[179,57,283,53,"horizontal"],[179,67,283,63],[179,69,283,65],[180,10,284,6],[180,14,284,10],[180,15,284,11,"_averageCellLength"],[180,33,284,29],[180,36,284,32],[180,37,284,33],[181,10,285,6],[181,14,285,10],[181,15,285,11,"_highestMeasuredCellIndex"],[181,40,285,36],[181,43,285,39],[181,44,285,40],[182,10,286,6],[182,14,286,10],[182,15,286,11,"_measuredCellsLength"],[182,35,286,31],[182,38,286,34],[182,39,286,35],[183,10,287,6],[183,14,287,10],[183,15,287,11,"_measuredCellsCount"],[183,34,287,30],[183,37,287,33],[183,38,287,34],[184,8,288,4],[185,8,290,4],[185,12,290,8],[185,13,290,9,"_orientation"],[185,25,290,21],[185,28,290,24,"orientation"],[185,39,290,35],[186,6,291,2],[187,4,291,3],[188,6,291,3,"key"],[188,9,291,3],[189,6,291,3,"value"],[189,11,291,3],[189,13,293,2],[189,22,293,2,"_selectLength"],[189,35,293,15,"_selectLength"],[189,36,293,15,"_ref3"],[189,41,293,15],[189,43,296,62],[190,8,296,62],[190,12,294,4,"width"],[190,17,294,9],[190,20,294,9,"_ref3"],[190,25,294,9],[190,26,294,4,"width"],[190,31,294,9],[191,10,295,4,"height"],[191,16,295,10],[191,19,295,10,"_ref3"],[191,24,295,10],[191,25,295,4,"height"],[191,31,295,10],[192,8,297,4],[192,15,297,11],[192,19,297,15],[192,20,297,16,"_orientation"],[192,32,297,28],[192,33,297,29,"horizontal"],[192,43,297,39],[192,46,297,42,"width"],[192,51,297,47],[192,54,297,50,"height"],[192,60,297,56],[193,6,298,2],[194,4,298,3],[195,6,298,3,"key"],[195,9,298,3],[196,6,298,3,"value"],[196,11,298,3],[196,13,300,2],[196,22,300,2,"_selectOffset"],[196,35,300,15,"_selectOffset"],[196,36,300,15,"_ref4"],[196,41,300,15],[196,43,300,72],[197,8,300,72],[197,12,300,17,"x"],[197,13,300,18],[197,16,300,18,"_ref4"],[197,21,300,18],[197,22,300,17,"x"],[197,23,300,18],[198,10,300,20,"y"],[198,11,300,21],[198,14,300,21,"_ref4"],[198,19,300,21],[198,20,300,20,"y"],[198,21,300,21],[199,8,301,4],[199,15,301,11],[199,19,301,15],[199,20,301,16,"_orientation"],[199,32,301,28],[199,33,301,29,"horizontal"],[199,43,301,39],[199,46,301,42,"x"],[199,47,301,43],[199,50,301,46,"y"],[199,51,301,47],[200,6,302,2],[201,4,302,3],[202,2,302,3],[203,0,302,3],[203,3]],"functionMap":{"names":["<global>","ListMetricsAggregator","notifyCellLayout","notifyCellUnmounted","notifyListContentLayout","getAverageCellLength","getHighestMeasuredCellIndex","getCellMetricsApprox","getCellMetrics","getCellOffsetApprox","getContentLength","hasContentLength","flowRelativeOffset","cartesianOffset","_invalidateIfOrientationChanged","_selectLength","_selectOffset"],"mappings":"AAA;eC0D;ECiB;GD0C;EEK;GFK;EGK;GHS;EIK;GJE;EKM;GLE;EMO;GNkB;EOK;GPsB;EQM;GRQ;ESK;GTE;EUK;GVE;EWM;GXgB;EYK;GZY;EaE;Gba;EcE;GdK;EeE;GfE"}},"type":"js/module"}]}