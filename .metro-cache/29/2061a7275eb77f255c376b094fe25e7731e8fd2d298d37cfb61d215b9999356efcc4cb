{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":306,"column":0,"index":8166}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":306,"column":0,"index":8166}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"./PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":273},"end":{"line":10,"column":43,"index":316}}],"key":"O136KS8LvzB4pufOIvMCitL6KOc="}},{"name":"./errors","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":373},"end":{"line":12,"column":43,"index":416}}],"key":"rEld05quROH+iA6QLT6kkvqJ/qc="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /* eslint-disable @typescript-eslint/no-namespace */\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withReanimatedTimer = exports.setUpTests = exports.getAnimatedStyle = exports.advanceAnimationByTime = exports.advanceAnimationByFrame = void 0;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var defaultFramerateConfig = {\n    fps: 60\n  };\n  var isEmpty = obj => Object.keys(obj).length === 0;\n  var getStylesFromObject = obj => {\n    return obj === undefined ? {} : Object.fromEntries(Object.entries(obj).map(_ref => {\n      var _ref2 = (0, _slicedToArray2.default)(_ref, 2),\n        property = _ref2[0],\n        value = _ref2[1];\n      return [property, value._isReanimatedSharedValue ? value.value : value];\n    }));\n  };\n  var getCurrentStyle = component => {\n    var styleObject = component.props.style;\n    var currentStyle = {};\n    if (Array.isArray(styleObject)) {\n      // It is possible that style may contain nested arrays. Currently, neither `StyleSheet.flatten` nor `flattenArray` solve this issue.\n      // Hence, we're not handling nested arrays at the moment - this is a known limitation of the current implementation.\n      styleObject.forEach(style => {\n        currentStyle = {\n          ...currentStyle,\n          ...style\n        };\n      });\n      return currentStyle;\n    }\n    var jestInlineStyles = component.props.jestInlineStyle;\n    var jestAnimatedStyleValue = component.props.jestAnimatedStyle?.value;\n    if (Array.isArray(jestInlineStyles)) {\n      for (var obj of jestInlineStyles) {\n        if ('jestAnimatedStyle' in obj) {\n          continue;\n        }\n        var _inlineStyles = getStylesFromObject(obj);\n        currentStyle = {\n          ...currentStyle,\n          ..._inlineStyles\n        };\n      }\n      currentStyle = {\n        ...styleObject,\n        ...currentStyle,\n        ...jestAnimatedStyleValue\n      };\n      return currentStyle;\n    }\n    var inlineStyles = getStylesFromObject(jestInlineStyles);\n    currentStyle = isEmpty(jestAnimatedStyleValue) ? {\n      ...styleObject,\n      ...inlineStyles\n    } : {\n      ...styleObject,\n      ...jestAnimatedStyleValue\n    };\n    return currentStyle;\n  };\n  var checkEqual = (current, expected) => {\n    if (Array.isArray(expected)) {\n      if (!Array.isArray(current) || expected.length !== current.length) {\n        return false;\n      }\n      for (var i = 0; i < current.length; i++) {\n        if (!checkEqual(current[i], expected[i])) {\n          return false;\n        }\n      }\n    } else if (typeof current === 'object' && current) {\n      if (typeof expected !== 'object' || !expected) {\n        return false;\n      }\n      for (var property in expected) {\n        if (!checkEqual(current[property], expected[property])) {\n          return false;\n        }\n      }\n    } else {\n      return current === expected;\n    }\n    return true;\n  };\n  var findStyleDiff = (current, expected, shouldMatchAllProps) => {\n    var diffs = [];\n    var isEqual = true;\n    var property;\n    for (property in expected) {\n      if (!checkEqual(current[property], expected[property])) {\n        isEqual = false;\n        diffs.push({\n          property,\n          current: current[property],\n          expect: expected[property]\n        });\n      }\n    }\n    if (shouldMatchAllProps && Object.keys(current).length !== Object.keys(expected).length) {\n      isEqual = false;\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      var _property;\n      for (_property in current) {\n        if (expected[_property] === undefined) {\n          diffs.push({\n            property: _property,\n            current: current[_property],\n            expect: expected[_property]\n          });\n        }\n      }\n    }\n    return {\n      isEqual,\n      diffs\n    };\n  };\n  var compareStyle = (component, expectedStyle, config) => {\n    if (!component.props.style) {\n      return {\n        message: () => `Component doesn't have a style.`,\n        pass: false\n      };\n    }\n    var shouldMatchAllProps = config.shouldMatchAllProps;\n    var currentStyle = getCurrentStyle(component);\n    var _findStyleDiff = findStyleDiff(currentStyle, expectedStyle, shouldMatchAllProps),\n      isEqual = _findStyleDiff.isEqual,\n      diffs = _findStyleDiff.diffs;\n    if (isEqual) {\n      return {\n        message: () => 'ok',\n        pass: true\n      };\n    }\n    var currentStyleStr = JSON.stringify(currentStyle);\n    var expectedStyleStr = JSON.stringify(expectedStyle);\n    var differences = diffs.map(diff => `- '${diff.property}' should be ${JSON.stringify(diff.expect)}, but is ${JSON.stringify(diff.current)}`).join('\\n');\n    return {\n      message: () => `Expected: ${expectedStyleStr}\\nReceived: ${currentStyleStr}\\n\\nDifferences:\\n${differences}`,\n      pass: false\n    };\n  };\n  var frameTime = Math.round(1000 / defaultFramerateConfig.fps);\n  var beforeTest = () => {\n    jest.useFakeTimers();\n  };\n  var afterTest = () => {\n    jest.runOnlyPendingTimers();\n    jest.useRealTimers();\n  };\n  var withReanimatedTimer = animationTest => {\n    console.warn('This method is deprecated, you should define your own before and after test hooks to enable jest.useFakeTimers(). Check out the documentation for details on testing');\n    beforeTest();\n    animationTest();\n    afterTest();\n  };\n  exports.withReanimatedTimer = withReanimatedTimer;\n  var advanceAnimationByTime = function () {\n    var time = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : frameTime;\n    console.warn('This method is deprecated, use jest.advanceTimersByTime directly');\n    jest.advanceTimersByTime(time);\n    jest.runOnlyPendingTimers();\n  };\n  exports.advanceAnimationByTime = advanceAnimationByTime;\n  var advanceAnimationByFrame = count => {\n    console.warn('This method is deprecated, use jest.advanceTimersByTime directly');\n    jest.advanceTimersByTime(count * frameTime);\n    jest.runOnlyPendingTimers();\n  };\n  exports.advanceAnimationByFrame = advanceAnimationByFrame;\n  var requireFunction = (0, require(_dependencyMap[2], \"./PlatformChecker\").isJest)() ? require : () => {\n    throw new (require(_dependencyMap[3], \"./errors\").ReanimatedError)('`setUpTests` is available only in Jest environment.');\n  };\n  var setUpTests = function () {\n    var userFramerateConfig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var expect = global.expect;\n    if (expect === undefined) {\n      var expectModule = requireFunction('expect');\n      expect = expectModule;\n      // Starting from Jest 28, \"expect\" package uses named exports instead of default export.\n      // So, requiring \"expect\" package doesn't give direct access to \"expect\" function anymore.\n      // It gives access to the module object instead.\n      // We use this info to detect if the project uses Jest 28 or higher.\n      if (typeof expect === 'object') {\n        var jestGlobals = requireFunction('@jest/globals');\n        expect = jestGlobals.expect;\n      }\n      if (expect === undefined || expect.extend === undefined) {\n        expect = expectModule.default;\n      }\n    }\n    var framerateConfig = {\n      ...defaultFramerateConfig,\n      ...userFramerateConfig\n    };\n    frameTime = Math.round(1000 / framerateConfig.fps);\n    expect.extend({\n      toHaveAnimatedStyle(component, expectedStyle) {\n        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n        return compareStyle(component, expectedStyle, config);\n      }\n    });\n  };\n  exports.setUpTests = setUpTests;\n  var getAnimatedStyle = component => {\n    return getCurrentStyle(\n    // This type assertion is needed to get type checking in the following\n    // functions since `ReactTestInstance` has its `props` defined as `any`.\n    component);\n  };\n  exports.getAnimatedStyle = getAnimatedStyle;\n});","lineCount":219,"map":[[2,2,1,0],[3,2,2,0],[3,14,2,12],[5,2,2,13],[5,6,2,13,"_interopRequireDefault"],[5,28,2,13],[5,31,2,13,"require"],[5,38,2,13],[5,39,2,13,"_dependencyMap"],[5,53,2,13],[6,2,2,13,"Object"],[6,8,2,13],[6,9,2,13,"defineProperty"],[6,23,2,13],[6,24,2,13,"exports"],[6,31,2,13],[7,4,2,13,"value"],[7,9,2,13],[8,2,2,13],[9,2,2,13,"exports"],[9,9,2,13],[9,10,2,13,"withReanimatedTimer"],[9,29,2,13],[9,32,2,13,"exports"],[9,39,2,13],[9,40,2,13,"setUpTests"],[9,50,2,13],[9,53,2,13,"exports"],[9,60,2,13],[9,61,2,13,"getAnimatedStyle"],[9,77,2,13],[9,80,2,13,"exports"],[9,87,2,13],[9,88,2,13,"advanceAnimationByTime"],[9,110,2,13],[9,113,2,13,"exports"],[9,120,2,13],[9,121,2,13,"advanceAnimationByFrame"],[9,144,2,13],[10,2,2,13],[10,6,2,13,"_slicedToArray2"],[10,21,2,13],[10,24,2,13,"_interopRequireDefault"],[10,46,2,13],[10,47,2,13,"require"],[10,54,2,13],[10,55,2,13,"_dependencyMap"],[10,69,2,13],[11,2,27,0],[11,6,27,6,"defaultFramerateConfig"],[11,28,27,28],[11,31,27,31],[12,4,28,2,"fps"],[12,7,28,5],[12,9,28,7],[13,2,29,0],[13,3,29,1],[14,2,31,0],[14,6,31,6,"isEmpty"],[14,13,31,13],[14,16,31,17,"obj"],[14,19,31,28],[14,23,31,33,"Object"],[14,29,31,39],[14,30,31,40,"keys"],[14,34,31,44],[14,35,31,45,"obj"],[14,38,31,48],[14,39,31,49],[14,40,31,50,"length"],[14,46,31,56],[14,51,31,61],[14,52,31,62],[15,2,32,0],[15,6,32,6,"getStylesFromObject"],[15,25,32,25],[15,28,32,29,"obj"],[15,31,32,40],[15,35,32,45],[16,4,33,2],[16,11,33,9,"obj"],[16,14,33,12],[16,19,33,17,"undefined"],[16,28,33,26],[16,31,34,6],[16,32,34,7],[16,33,34,8],[16,36,35,6,"Object"],[16,42,35,12],[16,43,35,13,"fromEntries"],[16,54,35,24],[16,55,36,8,"Object"],[16,61,36,14],[16,62,36,15,"entries"],[16,69,36,22],[16,70,36,23,"obj"],[16,73,36,26],[16,74,36,27],[16,75,36,28,"map"],[16,78,36,31],[16,79,36,32,"_ref"],[16,83,36,32],[17,6,36,32],[17,10,36,32,"_ref2"],[17,15,36,32],[17,22,36,32,"_slicedToArray2"],[17,37,36,32],[17,38,36,32,"default"],[17,45,36,32],[17,47,36,32,"_ref"],[17,51,36,32],[18,8,36,34,"property"],[18,16,36,42],[18,19,36,42,"_ref2"],[18,24,36,42],[19,8,36,44,"value"],[19,13,36,49],[19,16,36,49,"_ref2"],[19,21,36,49],[20,6,36,49],[20,13,36,55],[20,14,37,10,"property"],[20,22,37,18],[20,24,38,10,"value"],[20,29,38,15],[20,30,38,16,"_isReanimatedSharedValue"],[20,54,38,40],[20,57,38,43,"value"],[20,62,38,48],[20,63,38,49,"value"],[20,68,38,54],[20,71,38,57,"value"],[20,76,38,62],[20,77,39,9],[21,4,39,9],[21,6,40,6],[21,7,40,7],[22,2,41,0],[22,3,41,1],[23,2,50,0],[23,6,50,6,"getCurrentStyle"],[23,21,50,21],[23,24,50,25,"component"],[23,33,50,49],[23,37,50,68],[24,4,51,2],[24,8,51,8,"styleObject"],[24,19,51,19],[24,22,51,22,"component"],[24,31,51,31],[24,32,51,32,"props"],[24,37,51,37],[24,38,51,38,"style"],[24,43,51,43],[25,4,53,2],[25,8,53,6,"currentStyle"],[25,20,53,18],[25,23,53,21],[25,24,53,22],[25,25,53,23],[26,4,55,2],[26,8,55,6,"Array"],[26,13,55,11],[26,14,55,12,"isArray"],[26,21,55,19],[26,22,55,20,"styleObject"],[26,33,55,31],[26,34,55,32],[26,36,55,34],[27,6,56,4],[28,6,57,4],[29,6,58,4,"styleObject"],[29,17,58,15],[29,18,58,16,"forEach"],[29,25,58,23],[29,26,58,25,"style"],[29,31,58,30],[29,35,58,35],[30,8,59,6,"currentStyle"],[30,20,59,18],[30,23,59,21],[31,10,60,8],[31,13,60,11,"currentStyle"],[31,25,60,23],[32,10,61,8],[32,13,61,11,"style"],[33,8,62,6],[33,9,62,7],[34,6,63,4],[34,7,63,5],[34,8,63,6],[35,6,65,4],[35,13,65,11,"currentStyle"],[35,25,65,23],[36,4,66,2],[37,4,68,2],[37,8,68,8,"jestInlineStyles"],[37,24,68,24],[37,27,68,27,"component"],[37,36,68,36],[37,37,68,37,"props"],[37,42,68,42],[37,43,68,43,"jestInlineStyle"],[37,58,68,77],[38,4,69,2],[38,8,69,8,"jestAnimatedStyleValue"],[38,30,69,30],[38,33,69,33,"component"],[38,42,69,42],[38,43,69,43,"props"],[38,48,69,48],[38,49,69,49,"jestAnimatedStyle"],[38,66,69,66],[38,68,69,68,"value"],[38,73,69,73],[39,4,71,2],[39,8,71,6,"Array"],[39,13,71,11],[39,14,71,12,"isArray"],[39,21,71,19],[39,22,71,20,"jestInlineStyles"],[39,38,71,36],[39,39,71,37],[39,41,71,39],[40,6,72,4],[40,11,72,9],[40,15,72,15,"obj"],[40,18,72,18],[40,22,72,22,"jestInlineStyles"],[40,38,72,38],[40,40,72,40],[41,8,73,6],[41,12,73,10],[41,31,73,29],[41,35,73,33,"obj"],[41,38,73,36],[41,40,73,38],[42,10,74,8],[43,8,75,6],[44,8,77,6],[44,12,77,12,"inlineStyles"],[44,25,77,24],[44,28,77,27,"getStylesFromObject"],[44,47,77,46],[44,48,77,47,"obj"],[44,51,77,50],[44,52,77,51],[45,8,79,6,"currentStyle"],[45,20,79,18],[45,23,79,21],[46,10,80,8],[46,13,80,11,"currentStyle"],[46,25,80,23],[47,10,81,8],[47,13,81,11,"inlineStyles"],[48,8,82,6],[48,9,82,7],[49,6,83,4],[50,6,85,4,"currentStyle"],[50,18,85,16],[50,21,85,19],[51,8,86,6],[51,11,86,9,"styleObject"],[51,22,86,20],[52,8,87,6],[52,11,87,9,"currentStyle"],[52,23,87,21],[53,8,88,6],[53,11,88,9,"jestAnimatedStyleValue"],[54,6,89,4],[54,7,89,5],[55,6,91,4],[55,13,91,11,"currentStyle"],[55,25,91,23],[56,4,92,2],[57,4,94,2],[57,8,94,8,"inlineStyles"],[57,20,94,20],[57,23,94,23,"getStylesFromObject"],[57,42,94,42],[57,43,94,43,"jestInlineStyles"],[57,59,94,59],[57,60,94,60],[58,4,96,2,"currentStyle"],[58,16,96,14],[58,19,96,17,"isEmpty"],[58,26,96,24],[58,27,96,25,"jestAnimatedStyleValue"],[58,49,96,57],[58,50,96,58],[58,53,97,6],[59,6,97,8],[59,9,97,11,"styleObject"],[59,20,97,22],[60,6,97,24],[60,9,97,27,"inlineStyles"],[61,4,97,40],[61,5,97,41],[61,8,98,6],[62,6,98,8],[62,9,98,11,"styleObject"],[62,20,98,22],[63,6,98,24],[63,9,98,27,"jestAnimatedStyleValue"],[64,4,98,50],[64,5,98,51],[65,4,100,2],[65,11,100,9,"currentStyle"],[65,23,100,21],[66,2,101,0],[66,3,101,1],[67,2,103,0],[67,6,103,6,"checkEqual"],[67,16,103,16],[67,19,103,19,"checkEqual"],[67,20,103,27,"current"],[67,27,103,41],[67,29,103,43,"expected"],[67,37,103,58],[67,42,103,63],[68,4,104,2],[68,8,104,6,"Array"],[68,13,104,11],[68,14,104,12,"isArray"],[68,21,104,19],[68,22,104,20,"expected"],[68,30,104,28],[68,31,104,29],[68,33,104,31],[69,6,105,4],[69,10,105,8],[69,11,105,9,"Array"],[69,16,105,14],[69,17,105,15,"isArray"],[69,24,105,22],[69,25,105,23,"current"],[69,32,105,30],[69,33,105,31],[69,37,105,35,"expected"],[69,45,105,43],[69,46,105,44,"length"],[69,52,105,50],[69,57,105,55,"current"],[69,64,105,62],[69,65,105,63,"length"],[69,71,105,69],[69,73,105,71],[70,8,106,6],[70,15,106,13],[70,20,106,18],[71,6,107,4],[72,6,108,4],[72,11,108,9],[72,15,108,13,"i"],[72,16,108,14],[72,19,108,17],[72,20,108,18],[72,22,108,20,"i"],[72,23,108,21],[72,26,108,24,"current"],[72,33,108,31],[72,34,108,32,"length"],[72,40,108,38],[72,42,108,40,"i"],[72,43,108,41],[72,45,108,43],[72,47,108,45],[73,8,109,6],[73,12,109,10],[73,13,109,11,"checkEqual"],[73,23,109,21],[73,24,109,22,"current"],[73,31,109,29],[73,32,109,30,"i"],[73,33,109,31],[73,34,109,32],[73,36,109,34,"expected"],[73,44,109,42],[73,45,109,43,"i"],[73,46,109,44],[73,47,109,45],[73,48,109,46],[73,50,109,48],[74,10,110,8],[74,17,110,15],[74,22,110,20],[75,8,111,6],[76,6,112,4],[77,4,113,2],[77,5,113,3],[77,11,113,9],[77,15,113,13],[77,22,113,20,"current"],[77,29,113,27],[77,34,113,32],[77,42,113,40],[77,46,113,44,"current"],[77,53,113,51],[77,55,113,53],[78,6,114,4],[78,10,114,8],[78,17,114,15,"expected"],[78,25,114,23],[78,30,114,28],[78,38,114,36],[78,42,114,40],[78,43,114,41,"expected"],[78,51,114,49],[78,53,114,51],[79,8,115,6],[79,15,115,13],[79,20,115,18],[80,6,116,4],[81,6,117,4],[81,11,117,9],[81,15,117,15,"property"],[81,23,117,23],[81,27,117,27,"expected"],[81,35,117,35],[81,37,117,37],[82,8,118,6],[82,12,118,10],[82,13,118,11,"checkEqual"],[82,23,118,21],[82,24,118,22,"current"],[82,31,118,29],[82,32,118,30,"property"],[82,40,118,38],[82,41,118,39],[82,43,118,41,"expected"],[82,51,118,49],[82,52,118,50,"property"],[82,60,118,58],[82,61,118,59],[82,62,118,60],[82,64,118,62],[83,10,119,8],[83,17,119,15],[83,22,119,20],[84,8,120,6],[85,6,121,4],[86,4,122,2],[86,5,122,3],[86,11,122,9],[87,6,123,4],[87,13,123,11,"current"],[87,20,123,18],[87,25,123,23,"expected"],[87,33,123,31],[88,4,124,2],[89,4,125,2],[89,11,125,9],[89,15,125,13],[90,2,126,0],[90,3,126,1],[91,2,128,0],[91,6,128,6,"findStyleDiff"],[91,19,128,19],[91,22,128,22,"findStyleDiff"],[91,23,129,2,"current"],[91,30,129,23],[91,32,130,2,"expected"],[91,40,130,24],[91,42,131,2,"shouldMatchAllProps"],[91,61,131,31],[91,66,132,5],[92,4,133,2],[92,8,133,8,"diffs"],[92,13,133,13],[92,16,133,16],[92,18,133,18],[93,4,134,2],[93,8,134,6,"isEqual"],[93,15,134,13],[93,18,134,16],[93,22,134,20],[94,4,135,2],[94,8,135,6,"property"],[94,16,135,34],[95,4,136,2],[95,9,136,7,"property"],[95,17,136,15],[95,21,136,19,"expected"],[95,29,136,27],[95,31,136,29],[96,6,137,4],[96,10,137,8],[96,11,137,9,"checkEqual"],[96,21,137,19],[96,22,137,20,"current"],[96,29,137,27],[96,30,137,28,"property"],[96,38,137,36],[96,39,137,37],[96,41,137,39,"expected"],[96,49,137,47],[96,50,137,48,"property"],[96,58,137,56],[96,59,137,57],[96,60,137,58],[96,62,137,60],[97,8,138,6,"isEqual"],[97,15,138,13],[97,18,138,16],[97,23,138,21],[98,8,139,6,"diffs"],[98,13,139,11],[98,14,139,12,"push"],[98,18,139,16],[98,19,139,17],[99,10,140,8,"property"],[99,18,140,16],[100,10,141,8,"current"],[100,17,141,15],[100,19,141,17,"current"],[100,26,141,24],[100,27,141,25,"property"],[100,35,141,33],[100,36,141,34],[101,10,142,8,"expect"],[101,16,142,14],[101,18,142,16,"expected"],[101,26,142,24],[101,27,142,25,"property"],[101,35,142,33],[102,8,143,6],[102,9,143,7],[102,10,143,8],[103,6,144,4],[104,4,145,2],[105,4,147,2],[105,8,148,4,"shouldMatchAllProps"],[105,27,148,23],[105,31,149,4,"Object"],[105,37,149,10],[105,38,149,11,"keys"],[105,42,149,15],[105,43,149,16,"current"],[105,50,149,23],[105,51,149,24],[105,52,149,25,"length"],[105,58,149,31],[105,63,149,36,"Object"],[105,69,149,42],[105,70,149,43,"keys"],[105,74,149,47],[105,75,149,48,"expected"],[105,83,149,56],[105,84,149,57],[105,85,149,58,"length"],[105,91,149,64],[105,93,150,4],[106,6,151,4,"isEqual"],[106,13,151,11],[106,16,151,14],[106,21,151,19],[107,6,152,4],[108,6,153,4],[108,10,153,8,"property"],[108,19,153,36],[109,6,154,4],[109,11,154,9,"property"],[109,20,154,17],[109,24,154,21,"current"],[109,31,154,28],[109,33,154,30],[110,8,155,6],[110,12,155,10,"expected"],[110,20,155,18],[110,21,155,19,"property"],[110,30,155,27],[110,31,155,28],[110,36,155,33,"undefined"],[110,45,155,42],[110,47,155,44],[111,10,156,8,"diffs"],[111,15,156,13],[111,16,156,14,"push"],[111,20,156,18],[111,21,156,19],[112,12,157,10,"property"],[112,20,157,18],[112,22,157,10,"property"],[112,31,157,18],[113,12,158,10,"current"],[113,19,158,17],[113,21,158,19,"current"],[113,28,158,26],[113,29,158,27,"property"],[113,38,158,35],[113,39,158,36],[114,12,159,10,"expect"],[114,18,159,16],[114,20,159,18,"expected"],[114,28,159,26],[114,29,159,27,"property"],[114,38,159,35],[115,10,160,8],[115,11,160,9],[115,12,160,10],[116,8,161,6],[117,6,162,4],[118,4,163,2],[119,4,165,2],[119,11,165,9],[120,6,165,11,"isEqual"],[120,13,165,18],[121,6,165,20,"diffs"],[122,4,165,26],[122,5,165,27],[123,2,166,0],[123,3,166,1],[124,2,168,0],[124,6,168,6,"compareStyle"],[124,18,168,18],[124,21,168,21,"compareStyle"],[124,22,169,2,"component"],[124,31,169,26],[124,33,170,2,"expectedStyle"],[124,46,170,29],[124,48,171,2,"config"],[124,54,171,35],[124,59,172,5],[125,4,173,2],[125,8,173,6],[125,9,173,7,"component"],[125,18,173,16],[125,19,173,17,"props"],[125,24,173,22],[125,25,173,23,"style"],[125,30,173,28],[125,32,173,30],[126,6,174,4],[126,13,174,11],[127,8,174,13,"message"],[127,15,174,20],[127,17,174,22,"message"],[127,18,174,22],[127,23,174,28],[127,56,174,61],[128,8,174,63,"pass"],[128,12,174,67],[128,14,174,69],[129,6,174,75],[129,7,174,76],[130,4,175,2],[131,4,176,2],[131,8,176,10,"shouldMatchAllProps"],[131,27,176,29],[131,30,176,34,"config"],[131,36,176,40],[131,37,176,10,"shouldMatchAllProps"],[131,56,176,29],[132,4,177,2],[132,8,177,8,"currentStyle"],[132,20,177,20],[132,23,177,23,"getCurrentStyle"],[132,38,177,38],[132,39,177,39,"component"],[132,48,177,48],[132,49,177,49],[133,4,178,2],[133,8,178,2,"_findStyleDiff"],[133,22,178,2],[133,25,178,29,"findStyleDiff"],[133,38,178,42],[133,39,179,4,"currentStyle"],[133,51,179,16],[133,53,180,4,"expectedStyle"],[133,66,180,17],[133,68,181,4,"shouldMatchAllProps"],[133,87,182,2],[133,88,182,3],[134,6,178,10,"isEqual"],[134,13,178,17],[134,16,178,17,"_findStyleDiff"],[134,30,178,17],[134,31,178,10,"isEqual"],[134,38,178,17],[135,6,178,19,"diffs"],[135,11,178,24],[135,14,178,24,"_findStyleDiff"],[135,28,178,24],[135,29,178,19,"diffs"],[135,34,178,24],[136,4,184,2],[136,8,184,6,"isEqual"],[136,15,184,13],[136,17,184,15],[137,6,185,4],[137,13,185,11],[138,8,185,13,"message"],[138,15,185,20],[138,17,185,22,"message"],[138,18,185,22],[138,23,185,28],[138,27,185,32],[139,8,185,34,"pass"],[139,12,185,38],[139,14,185,40],[140,6,185,45],[140,7,185,46],[141,4,186,2],[142,4,188,2],[142,8,188,8,"currentStyleStr"],[142,23,188,23],[142,26,188,26,"JSON"],[142,30,188,30],[142,31,188,31,"stringify"],[142,40,188,40],[142,41,188,41,"currentStyle"],[142,53,188,53],[142,54,188,54],[143,4,189,2],[143,8,189,8,"expectedStyleStr"],[143,24,189,24],[143,27,189,27,"JSON"],[143,31,189,31],[143,32,189,32,"stringify"],[143,41,189,41],[143,42,189,42,"expectedStyle"],[143,55,189,55],[143,56,189,56],[144,4,190,2],[144,8,190,8,"differences"],[144,19,190,19],[144,22,190,22,"diffs"],[144,27,190,27],[144,28,191,5,"map"],[144,31,191,8],[144,32,192,7,"diff"],[144,36,192,11],[144,40,193,8],[144,46,193,14,"diff"],[144,50,193,18],[144,51,193,19,"property"],[144,59,193,27],[144,74,193,42,"JSON"],[144,78,193,46],[144,79,193,47,"stringify"],[144,88,193,56],[144,89,194,10,"diff"],[144,93,194,14],[144,94,194,15,"expect"],[144,100,195,8],[144,101,195,9],[144,113,195,21,"JSON"],[144,117,195,25],[144,118,195,26,"stringify"],[144,127,195,35],[144,128,195,36,"diff"],[144,132,195,40],[144,133,195,41,"current"],[144,140,195,48],[144,141,195,49],[144,143,196,4],[144,144,196,5],[144,145,197,5,"join"],[144,149,197,9],[144,150,197,10],[144,154,197,14],[144,155,197,15],[145,4,199,2],[145,11,199,9],[146,6,200,4,"message"],[146,13,200,11],[146,15,200,13,"message"],[146,16,200,13],[146,21,201,6],[146,34,201,19,"expectedStyleStr"],[146,50,201,35],[146,65,201,50,"currentStyleStr"],[146,80,201,65],[146,101,201,86,"differences"],[146,112,201,97],[146,114,201,99],[147,6,202,4,"pass"],[147,10,202,8],[147,12,202,10],[148,4,203,2],[148,5,203,3],[149,2,204,0],[149,3,204,1],[150,2,206,0],[150,6,206,4,"frameTime"],[150,15,206,13],[150,18,206,16,"Math"],[150,22,206,20],[150,23,206,21,"round"],[150,28,206,26],[150,29,206,27],[150,33,206,31],[150,36,206,34,"defaultFramerateConfig"],[150,58,206,56],[150,59,206,57,"fps"],[150,62,206,60],[150,63,206,61],[151,2,208,0],[151,6,208,6,"beforeTest"],[151,16,208,16],[151,19,208,19,"beforeTest"],[151,20,208,19],[151,25,208,25],[152,4,209,2,"jest"],[152,8,209,6],[152,9,209,7,"useFakeTimers"],[152,22,209,20],[152,23,209,21],[152,24,209,22],[153,2,210,0],[153,3,210,1],[154,2,212,0],[154,6,212,6,"afterTest"],[154,15,212,15],[154,18,212,18,"afterTest"],[154,19,212,18],[154,24,212,24],[155,4,213,2,"jest"],[155,8,213,6],[155,9,213,7,"runOnlyPendingTimers"],[155,29,213,27],[155,30,213,28],[155,31,213,29],[156,4,214,2,"jest"],[156,8,214,6],[156,9,214,7,"useRealTimers"],[156,22,214,20],[156,23,214,21],[156,24,214,22],[157,2,215,0],[157,3,215,1],[158,2,217,7],[158,6,217,13,"withReanimatedTimer"],[158,25,217,32],[158,28,217,36,"animationTest"],[158,41,217,61],[158,45,217,66],[159,4,218,2,"console"],[159,11,218,9],[159,12,218,10,"warn"],[159,16,218,14],[159,17,219,4],[159,183,220,2],[159,184,220,3],[160,4,221,2,"beforeTest"],[160,14,221,12],[160,15,221,13],[160,16,221,14],[161,4,222,2,"animationTest"],[161,17,222,15],[161,18,222,16],[161,19,222,17],[162,4,223,2,"afterTest"],[162,13,223,11],[162,14,223,12],[162,15,223,13],[163,2,224,0],[163,3,224,1],[164,2,224,2,"exports"],[164,9,224,2],[164,10,224,2,"withReanimatedTimer"],[164,29,224,2],[164,32,224,2,"withReanimatedTimer"],[164,51,224,2],[165,2,226,7],[165,6,226,13,"advanceAnimationByTime"],[165,28,226,35],[165,31,226,38],[165,40,226,38,"advanceAnimationByTime"],[165,41,226,38],[165,43,226,60],[166,4,226,60],[166,8,226,39,"time"],[166,12,226,43],[166,15,226,43,"arguments"],[166,24,226,43],[166,25,226,43,"length"],[166,31,226,43],[166,39,226,43,"arguments"],[166,48,226,43],[166,56,226,43,"undefined"],[166,65,226,43],[166,68,226,43,"arguments"],[166,77,226,43],[166,83,226,46,"frameTime"],[166,92,226,55],[167,4,227,2,"console"],[167,11,227,9],[167,12,227,10,"warn"],[167,16,227,14],[167,17,228,4],[167,83,229,2],[167,84,229,3],[168,4,230,2,"jest"],[168,8,230,6],[168,9,230,7,"advanceTimersByTime"],[168,28,230,26],[168,29,230,27,"time"],[168,33,230,31],[168,34,230,32],[169,4,231,2,"jest"],[169,8,231,6],[169,9,231,7,"runOnlyPendingTimers"],[169,29,231,27],[169,30,231,28],[169,31,231,29],[170,2,232,0],[170,3,232,1],[171,2,232,2,"exports"],[171,9,232,2],[171,10,232,2,"advanceAnimationByTime"],[171,32,232,2],[171,35,232,2,"advanceAnimationByTime"],[171,57,232,2],[172,2,234,7],[172,6,234,13,"advanceAnimationByFrame"],[172,29,234,36],[172,32,234,40,"count"],[172,37,234,53],[172,41,234,58],[173,4,235,2,"console"],[173,11,235,9],[173,12,235,10,"warn"],[173,16,235,14],[173,17,236,4],[173,83,237,2],[173,84,237,3],[174,4,238,2,"jest"],[174,8,238,6],[174,9,238,7,"advanceTimersByTime"],[174,28,238,26],[174,29,238,27,"count"],[174,34,238,32],[174,37,238,35,"frameTime"],[174,46,238,44],[174,47,238,45],[175,4,239,2,"jest"],[175,8,239,6],[175,9,239,7,"runOnlyPendingTimers"],[175,29,239,27],[175,30,239,28],[175,31,239,29],[176,2,240,0],[176,3,240,1],[177,2,240,2,"exports"],[177,9,240,2],[177,10,240,2,"advanceAnimationByFrame"],[177,33,240,2],[177,36,240,2,"advanceAnimationByFrame"],[177,59,240,2],[178,2,242,0],[178,6,242,6,"requireFunction"],[178,21,242,21],[178,24,242,24],[178,28,242,24,"isJest"],[178,54,242,24],[178,55,242,24,"isJest"],[178,82,242,30],[178,84,242,31],[178,85,242,32],[178,88,243,4,"require"],[178,95,243,11],[178,98,244,4],[178,104,244,10],[179,4,245,6],[179,10,245,12],[179,15,245,16,"ReanimatedError"],[179,41,245,16],[179,42,245,16,"ReanimatedError"],[179,69,245,31],[179,71,246,8],[179,124,247,6],[179,125,247,7],[180,2,248,4],[180,3,248,5],[181,2,254,7],[181,6,254,13,"setUpTests"],[181,16,254,23],[181,19,254,26],[181,28,254,26,"setUpTests"],[181,29,254,26],[181,31,254,56],[182,4,254,56],[182,8,254,27,"userFramerateConfig"],[182,27,254,46],[182,30,254,46,"arguments"],[182,39,254,46],[182,40,254,46,"length"],[182,46,254,46],[182,54,254,46,"arguments"],[182,63,254,46],[182,71,254,46,"undefined"],[182,80,254,46],[182,83,254,46,"arguments"],[182,92,254,46],[182,98,254,49],[182,99,254,50],[182,100,254,51],[183,4,255,2],[183,8,255,6,"expect"],[183,14,255,25],[183,17,255,29,"global"],[183,23,255,35],[183,24,256,5,"expect"],[183,30,256,11],[184,4,257,2],[184,8,257,6,"expect"],[184,14,257,12],[184,19,257,17,"undefined"],[184,28,257,26],[184,30,257,28],[185,6,258,4],[185,10,258,10,"expectModule"],[185,22,258,22],[185,25,258,25,"requireFunction"],[185,40,258,40],[185,41,258,41],[185,49,258,49],[185,50,258,50],[186,6,259,4,"expect"],[186,12,259,10],[186,15,259,13,"expectModule"],[186,27,259,25],[187,6,260,4],[188,6,261,4],[189,6,262,4],[190,6,263,4],[191,6,264,4],[191,10,264,8],[191,17,264,15,"expect"],[191,23,264,21],[191,28,264,26],[191,36,264,34],[191,38,264,36],[192,8,265,6],[192,12,265,12,"jestGlobals"],[192,23,265,23],[192,26,265,26,"requireFunction"],[192,41,265,41],[192,42,265,42],[192,57,265,57],[192,58,265,58],[193,8,266,6,"expect"],[193,14,266,12],[193,17,266,15,"jestGlobals"],[193,28,266,26],[193,29,266,27,"expect"],[193,35,266,33],[194,6,267,4],[195,6,268,4],[195,10,268,8,"expect"],[195,16,268,14],[195,21,268,19,"undefined"],[195,30,268,28],[195,34,268,32,"expect"],[195,40,268,38],[195,41,268,39,"extend"],[195,47,268,45],[195,52,268,50,"undefined"],[195,61,268,59],[195,63,268,61],[196,8,269,6,"expect"],[196,14,269,12],[196,17,269,15,"expectModule"],[196,29,269,27],[196,30,269,28,"default"],[196,37,269,35],[197,6,270,4],[198,4,271,2],[199,4,273,2],[199,8,273,8,"framerateConfig"],[199,23,273,23],[199,26,273,26],[200,6,274,4],[200,9,274,7,"defaultFramerateConfig"],[200,31,274,29],[201,6,275,4],[201,9,275,7,"userFramerateConfig"],[202,4,276,2],[202,5,276,3],[203,4,277,2,"frameTime"],[203,13,277,11],[203,16,277,14,"Math"],[203,20,277,18],[203,21,277,19,"round"],[203,26,277,24],[203,27,277,25],[203,31,277,29],[203,34,277,32,"framerateConfig"],[203,49,277,47],[203,50,277,48,"fps"],[203,53,277,51],[203,54,277,52],[204,4,279,2,"expect"],[204,10,279,8],[204,11,279,9,"extend"],[204,17,279,15],[204,18,279,16],[205,6,280,4,"toHaveAnimatedStyle"],[205,25,280,23,"toHaveAnimatedStyle"],[205,26,281,6,"component"],[205,35,284,34],[205,37,285,6,"expectedStyle"],[205,50,285,33],[205,52,287,6],[206,8,287,6],[206,12,286,6,"config"],[206,18,286,39],[206,21,286,39,"arguments"],[206,30,286,39],[206,31,286,39,"length"],[206,37,286,39],[206,45,286,39,"arguments"],[206,54,286,39],[206,62,286,39,"undefined"],[206,71,286,39],[206,74,286,39,"arguments"],[206,83,286,39],[206,89,286,42],[206,90,286,43],[206,91,286,44],[207,8,288,6],[207,15,288,13,"compareStyle"],[207,27,288,25],[207,28,288,26,"component"],[207,37,288,35],[207,39,288,37,"expectedStyle"],[207,52,288,50],[207,54,288,52,"config"],[207,60,288,58],[207,61,288,59],[208,6,289,4],[209,4,290,2],[209,5,290,3],[209,6,290,4],[210,2,291,0],[210,3,291,1],[211,2,291,2,"exports"],[211,9,291,2],[211,10,291,2,"setUpTests"],[211,20,291,2],[211,23,291,2,"setUpTests"],[211,33,291,2],[212,2,299,7],[212,6,299,13,"getAnimatedStyle"],[212,22,299,29],[212,25,299,33,"component"],[212,34,299,61],[212,38,299,66],[213,4,300,2],[213,11,300,9,"getCurrentStyle"],[213,26,300,24],[214,4,301,4],[215,4,302,4],[216,4,303,4,"component"],[216,13,304,2],[216,14,304,3],[217,2,305,0],[217,3,305,1],[218,2,305,2,"exports"],[218,9,305,2],[218,10,305,2,"getAnimatedStyle"],[218,26,305,2],[218,29,305,2,"getAnimatedStyle"],[218,45,305,2],[219,0,305,2],[219,3]],"functionMap":{"names":["<global>","isEmpty","getStylesFromObject","Object.entries.map$argument_0","getCurrentStyle","styleObject.forEach$argument_0","checkEqual","findStyleDiff","compareStyle","message","diffs.map$argument_0","beforeTest","afterTest","withReanimatedTimer","advanceAnimationByTime","advanceAnimationByFrame","<anonymous>","setUpTests","expect.extend$argument_0.toHaveAnimatedStyle","getAnimatedStyle"],"mappings":"AAA;gBC8B,8CD;4BEC;gCCI;SDG;CFE;wBIS;wBCQ;KDK;CJsC;mBME;CNuB;sBOE;CPsC;qBQE;sBCM,uCD;sBCW,UD;MEO;mDFG;aCK;mGDC;CRG;mBWI;CXE;kBYE;CZG;mCaE;CbO;sCcE;CdM;uCeE;CfM;IgBI;KhBI;0BiBM;IC0B;KDS;CjBE;gCmBQ;CnBM"}},"type":"js/module"}]}