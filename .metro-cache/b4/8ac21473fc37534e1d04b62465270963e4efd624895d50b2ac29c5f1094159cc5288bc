{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":258,"column":44,"index":9695}}],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":258,"column":44,"index":9695}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":37,"index":281},"end":{"line":8,"column":53,"index":297}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":18,"index":416},"end":{"line":12,"column":46,"index":444}}],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE="}},{"name":"./useRoute.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":372},"end":{"line":11,"column":40,"index":396}}],"key":"MFm/RQZ0I+p8Bl7IYFE14NJy3p8="}},{"name":"react-is","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":15,"index":335},"end":{"line":10,"column":34,"index":354}},{"start":{"line":10,"column":15,"index":335},"end":{"line":10,"column":34,"index":354}}],"key":"hoZupclAije+HbYquo78nDVN6Z8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _objectWithoutProperties = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutProperties\");\n  var _slicedToArray = require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _excluded = [\"screen\", \"if\"],\n    _excluded2 = [\"screens\", \"groups\"],\n    _excluded3 = [\"if\"];\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createComponentForStaticNavigation = createComponentForStaticNavigation;\n  exports.createPathConfigForStaticNavigation = createPathConfigForStaticNavigation;\n  var _react = _interopRequireWildcard(require(_dependencyMap[2], \"react\"));\n  var React = _react;\n  var _jsxRuntime = require(_dependencyMap[3], \"react/jsx-runtime\");\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(),\n      t = new WeakMap();\n    return (_getRequireWildcardCache = function (e) {\n      return e ? t : r;\n    })(e);\n  }\n  function _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n      default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n      },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n      var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n      i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n  }\n  /**\n   * Flatten a type to remove all type alias names, unions etc.\n   * This will show a plain object when hovering over the type.\n   */\n\n  /**\n   * keyof T doesn't work for union types. We can use distributive conditional types instead.\n   * https://www.typescriptlang.org/docs/handbook/2/conditional-types.html#distributive-conditional-types\n   */\n\n  /**\n   * We get a union type when using keyof, but we want an intersection instead.\n   * https://stackoverflow.com/a/50375286/1665026\n   */\n\n  /**\n   * Props for a screen component which is rendered by a static navigator.\n   * Takes the route params as a generic argument.\n   */\n\n  /**\n   * Infer the param list from the static navigation config.\n   */\n\n  var MemoizedScreen = /*#__PURE__*/React.memo(_ref => {\n    var component = _ref.component;\n    var route = (0, require(_dependencyMap[4], \"./useRoute.js\").useRoute)();\n    var children = /*#__PURE__*/React.createElement(component, {\n      route\n    });\n    return children;\n  });\n  MemoizedScreen.displayName = 'Memo(Screen)';\n  var getItemsFromScreens = (Screen, screens) => {\n    return Object.entries(screens).map(_ref2 => {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        name = _ref3[0],\n        item = _ref3[1];\n      var component;\n      var props = {};\n      var useIf;\n      var isNavigator = false;\n      if ('screen' in item) {\n        var screen = item.screen,\n          _if = item.if,\n          rest = _objectWithoutProperties(item, _excluded);\n        useIf = _if;\n        props = rest;\n        if ((0, require(_dependencyMap[5], \"react-is\").isValidElementType)(screen)) {\n          component = screen;\n        } else if ('config' in screen) {\n          isNavigator = true;\n          component = createComponentForStaticNavigation(screen, `${name}Navigator`);\n        }\n      } else if ((0, require(_dependencyMap[5], \"react-is\").isValidElementType)(item)) {\n        component = item;\n      } else if ('config' in item) {\n        isNavigator = true;\n        component = createComponentForStaticNavigation(item, `${name}Navigator`);\n      }\n      if (component == null) {\n        throw new Error(`Couldn't find a 'screen' property for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`);\n      }\n      var element = isNavigator ? (/*#__PURE__*/React.createElement(component, {})) : /*#__PURE__*/(0, _jsxRuntime.jsx)(MemoizedScreen, {\n        component: component\n      });\n      return () => {\n        var shouldRender = useIf == null || useIf();\n        if (!shouldRender) {\n          return null;\n        }\n        return /*#__PURE__*/(0, _jsxRuntime.jsx)(Screen, {\n          name: name,\n          ...props,\n          children: () => element\n        }, name);\n      };\n    });\n  };\n\n  /**\n   * Create a component that renders a navigator based on the static configuration.\n   *\n   * @param tree Static navigation config.\n   * @param displayName Name of the component to be displayed in React DevTools.\n   * @returns A component which renders the navigator.\n   */\n  function createComponentForStaticNavigation(tree, displayName) {\n    var Navigator = tree.Navigator,\n      Group = tree.Group,\n      Screen = tree.Screen,\n      config = tree.config;\n    var screens = config.screens,\n      groups = config.groups,\n      rest = _objectWithoutProperties(config, _excluded2);\n    if (screens == null && groups == null) {\n      throw new Error(\"Couldn't find a 'screens' or 'groups' property. Make sure to define your screens under a 'screens' property in the configuration.\");\n    }\n    var items = [];\n\n    // Loop through the config to find screens and groups\n    // So we add the screens and groups in the same order as they are defined\n    for (var key in config) {\n      if (key === 'screens' && screens) {\n        items.push(...getItemsFromScreens(Screen, screens));\n      }\n      if (key === 'groups' && groups) {\n        items.push(...Object.entries(groups).map(_ref4 => {\n          var _ref5 = _slicedToArray(_ref4, 2),\n            key = _ref5[0],\n            _ref5$ = _ref5[1],\n            useIf = _ref5$.if,\n            group = _objectWithoutProperties(_ref5$, _excluded3);\n          var groupItems = getItemsFromScreens(Screen, group.screens);\n          return () => {\n            // Call unconditionally since screen configs may contain `useIf` hooks\n            var children = groupItems.map(item => item());\n            var shouldRender = useIf == null || useIf();\n            if (!shouldRender) {\n              return null;\n            }\n            return /*#__PURE__*/(0, _react.createElement)(Group, {\n              navigationKey: key,\n              ...group,\n              key: key\n            }, children);\n          };\n        }));\n      }\n    }\n    var NavigatorComponent = () => {\n      var children = items.map(item => item());\n      return /*#__PURE__*/(0, _jsxRuntime.jsx)(Navigator, {\n        ...rest,\n        children: children\n      });\n    };\n    NavigatorComponent.displayName = displayName;\n    return NavigatorComponent;\n  }\n  /**\n   * Create a path config object from a static navigation config for deep linking.\n   *\n   * @param tree Static navigation config.\n   * @param options Additional options from `linking.config`.\n   * @param auto Whether to automatically generate paths for leaf screens.\n   * @returns Path config object to use in linking config.\n   *\n   * @example\n   * ```js\n   * const config = {\n   *   screens: {\n   *     Home: {\n   *       screens: createPathConfigForStaticNavigation(HomeTabs),\n   *     },\n   *   },\n   * };\n   * ```\n   */\n  function createPathConfigForStaticNavigation(tree, options, auto) {\n    var initialScreenConfig;\n    var createPathConfigForTree = (t, o, skipInitialDetection) => {\n      var createPathConfigForScreens = (screens, initialRouteName) => {\n        return Object.fromEntries(Object.entries(screens)\n        // Re-order to move the initial route to the front\n        // This way we can detect the initial route correctly\n        .sort((_ref6, _ref7) => {\n          var _ref8 = _slicedToArray(_ref6, 1),\n            a = _ref8[0];\n          var _ref9 = _slicedToArray(_ref7, 1),\n            b = _ref9[0];\n          if (a === initialRouteName) {\n            return -1;\n          }\n          if (b === initialRouteName) {\n            return 1;\n          }\n          return 0;\n        }).map(_ref10 => {\n          var _ref11 = _slicedToArray(_ref10, 2),\n            key = _ref11[0],\n            item = _ref11[1];\n          var screenConfig = {};\n          if ('linking' in item) {\n            if (typeof item.linking === 'string') {\n              screenConfig.path = item.linking;\n            } else {\n              Object.assign(screenConfig, item.linking);\n            }\n            if (typeof screenConfig.path === 'string') {\n              screenConfig.path = screenConfig.path.replace(/^\\//, '') // Remove extra leading slash\n              .replace(/\\/$/, ''); // Remove extra trailing slash\n            }\n          }\n          var screens;\n          var skipInitialDetectionInChild = skipInitialDetection || screenConfig.path != null && screenConfig.path !== '';\n          if ('config' in item) {\n            screens = createPathConfigForTree(item, undefined, skipInitialDetectionInChild);\n          } else if ('screen' in item && 'config' in item.screen && (item.screen.config.screens || item.screen.config.groups)) {\n            screens = createPathConfigForTree(item.screen, undefined, skipInitialDetectionInChild);\n          }\n          if (screens) {\n            screenConfig.screens = screens;\n          }\n          if (auto && !screenConfig.screens &&\n          // Skip generating path for screens that specify linking config as `undefined` or `null` explicitly\n          !('linking' in item && item.linking == null)) {\n            if (screenConfig.path != null) {\n              if (!skipInitialDetection && screenConfig.path === '') {\n                // We encounter a leaf screen with empty path,\n                // Clear the initial screen config as it's not needed anymore\n                initialScreenConfig = undefined;\n              }\n            } else {\n              if (!skipInitialDetection && initialScreenConfig == null) {\n                initialScreenConfig = screenConfig;\n              }\n              screenConfig.path = key.replace(/([A-Z]+)/g, '-$1').replace(/^-/, '').toLowerCase();\n            }\n          }\n          return [key, screenConfig];\n        }).filter(_ref12 => {\n          var _ref13 = _slicedToArray(_ref12, 2),\n            screen = _ref13[1];\n          return Object.keys(screen).length > 0;\n        }));\n      };\n      var screens = {};\n\n      // Loop through the config to find screens and groups\n      // So we add the screens and groups in the same order as they are defined\n      for (var key in t.config) {\n        if (key === 'screens' && t.config.screens) {\n          Object.assign(screens, createPathConfigForScreens(t.config.screens, o?.initialRouteName ?? t.config.initialRouteName));\n        }\n        if (key === 'groups' && t.config.groups) {\n          Object.entries(t.config.groups).forEach(_ref14 => {\n            var _ref15 = _slicedToArray(_ref14, 2),\n              group = _ref15[1];\n            Object.assign(screens, createPathConfigForScreens(group.screens, o?.initialRouteName ?? t.config.initialRouteName));\n          });\n        }\n      }\n      if (Object.keys(screens).length === 0) {\n        return undefined;\n      }\n      return screens;\n    };\n    var screens = createPathConfigForTree(tree, options, false);\n    if (auto && initialScreenConfig) {\n      initialScreenConfig.path = '';\n    }\n    return screens;\n  }\n});","lineCount":296,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_objectWithoutProperties"],[4,30,1,13],[4,33,1,13,"require"],[4,40,1,13],[4,41,1,13,"_dependencyMap"],[4,55,1,13],[5,2,1,13],[5,6,1,13,"_slicedToArray"],[5,20,1,13],[5,23,1,13,"require"],[5,30,1,13],[5,31,1,13,"_dependencyMap"],[5,45,1,13],[6,2,1,13],[6,6,1,13,"_excluded"],[6,15,1,13],[7,4,1,13,"_excluded2"],[7,14,1,13],[8,4,1,13,"_excluded3"],[8,14,1,13],[9,2,3,0,"Object"],[9,8,3,6],[9,9,3,7,"defineProperty"],[9,23,3,21],[9,24,3,22,"exports"],[9,31,3,29],[9,33,3,31],[9,45,3,43],[9,47,3,45],[10,4,4,2,"value"],[10,9,4,7],[10,11,4,9],[11,2,5,0],[11,3,5,1],[11,4,5,2],[12,2,6,0,"exports"],[12,9,6,7],[12,10,6,8,"createComponentForStaticNavigation"],[12,44,6,42],[12,47,6,45,"createComponentForStaticNavigation"],[12,81,6,79],[13,2,7,0,"exports"],[13,9,7,7],[13,10,7,8,"createPathConfigForStaticNavigation"],[13,45,7,43],[13,48,7,46,"createPathConfigForStaticNavigation"],[13,83,7,81],[14,2,8,0],[14,6,8,4,"_react"],[14,12,8,10],[14,15,8,13,"_interopRequireWildcard"],[14,38,8,36],[14,39,8,37,"require"],[14,46,8,44],[14,47,8,44,"_dependencyMap"],[14,61,8,44],[14,73,8,52],[14,74,8,53],[14,75,8,54],[15,2,9,0],[15,6,9,4,"React"],[15,11,9,9],[15,14,9,12,"_react"],[15,20,9,18],[16,2,12,0],[16,6,12,4,"_jsxRuntime"],[16,17,12,15],[16,20,12,18,"require"],[16,27,12,25],[16,28,12,25,"_dependencyMap"],[16,42,12,25],[16,66,12,45],[16,67,12,46],[17,2,13,0],[17,11,13,9,"_getRequireWildcardCache"],[17,35,13,33,"_getRequireWildcardCache"],[17,36,13,34,"e"],[17,37,13,35],[17,39,13,37],[18,4,13,39],[18,8,13,43],[18,18,13,53],[18,22,13,57],[18,29,13,64,"WeakMap"],[18,36,13,71],[18,38,13,73],[18,45,13,80],[18,49,13,84],[19,4,13,86],[19,8,13,90,"r"],[19,9,13,91],[19,12,13,94],[19,16,13,98,"WeakMap"],[19,23,13,105],[19,24,13,106],[19,25,13,107],[20,6,13,109,"t"],[20,7,13,110],[20,10,13,113],[20,14,13,117,"WeakMap"],[20,21,13,124],[20,22,13,125],[20,23,13,126],[21,4,13,128],[21,11,13,135],[21,12,13,136,"_getRequireWildcardCache"],[21,36,13,160],[21,39,13,163],[21,48,13,163,"_getRequireWildcardCache"],[21,49,13,173,"e"],[21,50,13,174],[21,52,13,176],[22,6,13,178],[22,13,13,185,"e"],[22,14,13,186],[22,17,13,189,"t"],[22,18,13,190],[22,21,13,193,"r"],[22,22,13,194],[23,4,13,196],[23,5,13,197],[23,7,13,199,"e"],[23,8,13,200],[23,9,13,201],[24,2,13,203],[25,2,14,0],[25,11,14,9,"_interopRequireWildcard"],[25,34,14,32,"_interopRequireWildcard"],[25,35,14,33,"e"],[25,36,14,34],[25,38,14,36,"r"],[25,39,14,37],[25,41,14,39],[26,4,14,41],[26,8,14,45],[26,9,14,46,"r"],[26,10,14,47],[26,14,14,51,"e"],[26,15,14,52],[26,19,14,56,"e"],[26,20,14,57],[26,21,14,58,"__esModule"],[26,31,14,68],[26,33,14,70],[26,40,14,77,"e"],[26,41,14,78],[27,4,14,80],[27,8,14,84],[27,12,14,88],[27,17,14,93,"e"],[27,18,14,94],[27,22,14,98],[27,30,14,106],[27,34,14,110],[27,41,14,117,"e"],[27,42,14,118],[27,46,14,122],[27,56,14,132],[27,60,14,136],[27,67,14,143,"e"],[27,68,14,144],[27,70,14,146],[27,77,14,153],[28,6,14,155,"default"],[28,13,14,162],[28,15,14,164,"e"],[29,4,14,166],[29,5,14,167],[30,4,14,169],[30,8,14,173,"t"],[30,9,14,174],[30,12,14,177,"_getRequireWildcardCache"],[30,36,14,201],[30,37,14,202,"r"],[30,38,14,203],[30,39,14,204],[31,4,14,206],[31,8,14,210,"t"],[31,9,14,211],[31,13,14,215,"t"],[31,14,14,216],[31,15,14,217,"has"],[31,18,14,220],[31,19,14,221,"e"],[31,20,14,222],[31,21,14,223],[31,23,14,225],[31,30,14,232,"t"],[31,31,14,233],[31,32,14,234,"get"],[31,35,14,237],[31,36,14,238,"e"],[31,37,14,239],[31,38,14,240],[32,4,14,242],[32,8,14,246,"n"],[32,9,14,247],[32,12,14,250],[33,8,14,252,"__proto__"],[33,17,14,261],[33,19,14,263],[34,6,14,268],[34,7,14,269],[35,6,14,271,"a"],[35,7,14,272],[35,10,14,275,"Object"],[35,16,14,281],[35,17,14,282,"defineProperty"],[35,31,14,296],[35,35,14,300,"Object"],[35,41,14,306],[35,42,14,307,"getOwnPropertyDescriptor"],[35,66,14,331],[36,4,14,333],[36,9,14,338],[36,13,14,342,"u"],[36,14,14,343],[36,18,14,347,"e"],[36,19,14,348],[36,21,14,350],[36,25,14,354],[36,34,14,363],[36,39,14,368,"u"],[36,40,14,369],[36,44,14,373],[36,45,14,374],[36,46,14,375],[36,47,14,376,"hasOwnProperty"],[36,61,14,390],[36,62,14,391,"call"],[36,66,14,395],[36,67,14,396,"e"],[36,68,14,397],[36,70,14,399,"u"],[36,71,14,400],[36,72,14,401],[36,74,14,403],[37,6,14,405],[37,10,14,409,"i"],[37,11,14,410],[37,14,14,413,"a"],[37,15,14,414],[37,18,14,417,"Object"],[37,24,14,423],[37,25,14,424,"getOwnPropertyDescriptor"],[37,49,14,448],[37,50,14,449,"e"],[37,51,14,450],[37,53,14,452,"u"],[37,54,14,453],[37,55,14,454],[37,58,14,457],[37,62,14,461],[38,6,14,463,"i"],[38,7,14,464],[38,12,14,469,"i"],[38,13,14,470],[38,14,14,471,"get"],[38,17,14,474],[38,21,14,478,"i"],[38,22,14,479],[38,23,14,480,"set"],[38,26,14,483],[38,27,14,484],[38,30,14,487,"Object"],[38,36,14,493],[38,37,14,494,"defineProperty"],[38,51,14,508],[38,52,14,509,"n"],[38,53,14,510],[38,55,14,512,"u"],[38,56,14,513],[38,58,14,515,"i"],[38,59,14,516],[38,60,14,517],[38,63,14,520,"n"],[38,64,14,521],[38,65,14,522,"u"],[38,66,14,523],[38,67,14,524],[38,70,14,527,"e"],[38,71,14,528],[38,72,14,529,"u"],[38,73,14,530],[38,74,14,531],[39,4,14,533],[40,4,14,535],[40,11,14,542,"n"],[40,12,14,543],[40,13,14,544,"default"],[40,20,14,551],[40,23,14,554,"e"],[40,24,14,555],[40,26,14,557,"t"],[40,27,14,558],[40,31,14,562,"t"],[40,32,14,563],[40,33,14,564,"set"],[40,36,14,567],[40,37,14,568,"e"],[40,38,14,569],[40,40,14,571,"n"],[40,41,14,572],[40,42,14,573],[40,44,14,575,"n"],[40,45,14,576],[41,2,14,578],[42,2,15,0],[43,0,16,0],[44,0,17,0],[45,0,18,0],[47,2,20,0],[48,0,21,0],[49,0,22,0],[50,0,23,0],[52,2,25,0],[53,0,26,0],[54,0,27,0],[55,0,28,0],[57,2,30,0],[58,0,31,0],[59,0,32,0],[60,0,33,0],[62,2,35,0],[63,0,36,0],[64,0,37,0],[66,2,39,0],[66,6,39,6,"MemoizedScreen"],[66,20,39,20],[66,23,39,23],[66,36,39,36,"React"],[66,41,39,41],[66,42,39,42,"memo"],[66,46,39,46],[66,47,39,47,"_ref"],[66,51,39,47],[66,55,41,6],[67,4,41,6],[67,8,40,2,"component"],[67,17,40,11],[67,20,40,11,"_ref"],[67,24,40,11],[67,25,40,2,"component"],[67,34,40,11],[68,4,42,2],[68,8,42,8,"route"],[68,13,42,13],[68,16,42,16],[68,17,42,17],[68,18,42,18],[68,20,42,20,"require"],[68,27,42,20],[68,28,42,20,"_dependencyMap"],[68,42,42,20],[68,64,42,30,"useRoute"],[68,72,42,38],[68,74,42,40],[68,75,42,41],[69,4,43,2],[69,8,43,8,"children"],[69,16,43,16],[69,19,43,19],[69,32,43,32,"React"],[69,37,43,37],[69,38,43,38,"createElement"],[69,51,43,51],[69,52,43,52,"component"],[69,61,43,61],[69,63,43,63],[70,6,44,4,"route"],[71,4,45,2],[71,5,45,3],[71,6,45,4],[72,4,46,2],[72,11,46,9,"children"],[72,19,46,17],[73,2,47,0],[73,3,47,1],[73,4,47,2],[74,2,48,0,"MemoizedScreen"],[74,16,48,14],[74,17,48,15,"displayName"],[74,28,48,26],[74,31,48,29],[74,45,48,43],[75,2,49,0],[75,6,49,6,"getItemsFromScreens"],[75,25,49,25],[75,28,49,28,"getItemsFromScreens"],[75,29,49,29,"Screen"],[75,35,49,35],[75,37,49,37,"screens"],[75,44,49,44],[75,49,49,49],[76,4,50,2],[76,11,50,9,"Object"],[76,17,50,15],[76,18,50,16,"entries"],[76,25,50,23],[76,26,50,24,"screens"],[76,33,50,31],[76,34,50,32],[76,35,50,33,"map"],[76,38,50,36],[76,39,50,37,"_ref2"],[76,44,50,37],[76,48,50,55],[77,6,50,55],[77,10,50,55,"_ref3"],[77,15,50,55],[77,18,50,55,"_slicedToArray"],[77,32,50,55],[77,33,50,55,"_ref2"],[77,38,50,55],[78,8,50,39,"name"],[78,12,50,43],[78,15,50,43,"_ref3"],[78,20,50,43],[79,8,50,45,"item"],[79,12,50,49],[79,15,50,49,"_ref3"],[79,20,50,49],[80,6,51,4],[80,10,51,8,"component"],[80,19,51,17],[81,6,52,4],[81,10,52,8,"props"],[81,15,52,13],[81,18,52,16],[81,19,52,17],[81,20,52,18],[82,6,53,4],[82,10,53,8,"useIf"],[82,15,53,13],[83,6,54,4],[83,10,54,8,"isNavigator"],[83,21,54,19],[83,24,54,22],[83,29,54,27],[84,6,55,4],[84,10,55,8],[84,18,55,16],[84,22,55,20,"item"],[84,26,55,24],[84,28,55,26],[85,8,56,6],[85,12,57,8,"screen"],[85,18,57,14],[85,21,60,10,"item"],[85,25,60,14],[85,26,57,8,"screen"],[85,32,57,14],[86,10,58,12,"_if"],[86,13,58,15],[86,16,60,10,"item"],[86,20,60,14],[86,21,58,8,"if"],[86,23,58,10],[87,10,59,11,"rest"],[87,14,59,15],[87,17,59,15,"_objectWithoutProperties"],[87,41,59,15],[87,42,60,10,"item"],[87,46,60,14],[87,48,60,14,"_excluded"],[87,57,60,14],[88,8,61,6,"useIf"],[88,13,61,11],[88,16,61,14,"_if"],[88,19,61,17],[89,8,62,6,"props"],[89,13,62,11],[89,16,62,14,"rest"],[89,20,62,18],[90,8,63,6],[90,12,63,10],[90,13,63,11],[90,14,63,12],[90,16,63,14,"require"],[90,23,63,14],[90,24,63,14,"_dependencyMap"],[90,38,63,14],[90,55,63,23,"isValidElementType"],[90,73,63,41],[90,75,63,43,"screen"],[90,81,63,49],[90,82,63,50],[90,84,63,52],[91,10,64,8,"component"],[91,19,64,17],[91,22,64,20,"screen"],[91,28,64,26],[92,8,65,6],[92,9,65,7],[92,15,65,13],[92,19,65,17],[92,27,65,25],[92,31,65,29,"screen"],[92,37,65,35],[92,39,65,37],[93,10,66,8,"isNavigator"],[93,21,66,19],[93,24,66,22],[93,28,66,26],[94,10,67,8,"component"],[94,19,67,17],[94,22,67,20,"createComponentForStaticNavigation"],[94,56,67,54],[94,57,67,55,"screen"],[94,63,67,61],[94,65,67,63],[94,68,67,66,"name"],[94,72,67,70],[94,83,67,81],[94,84,67,82],[95,8,68,6],[96,6,69,4],[96,7,69,5],[96,13,69,11],[96,17,69,15],[96,18,69,16],[96,19,69,17],[96,21,69,19,"require"],[96,28,69,19],[96,29,69,19,"_dependencyMap"],[96,43,69,19],[96,60,69,28,"isValidElementType"],[96,78,69,46],[96,80,69,48,"item"],[96,84,69,52],[96,85,69,53],[96,87,69,55],[97,8,70,6,"component"],[97,17,70,15],[97,20,70,18,"item"],[97,24,70,22],[98,6,71,4],[98,7,71,5],[98,13,71,11],[98,17,71,15],[98,25,71,23],[98,29,71,27,"item"],[98,33,71,31],[98,35,71,33],[99,8,72,6,"isNavigator"],[99,19,72,17],[99,22,72,20],[99,26,72,24],[100,8,73,6,"component"],[100,17,73,15],[100,20,73,18,"createComponentForStaticNavigation"],[100,54,73,52],[100,55,73,53,"item"],[100,59,73,57],[100,61,73,59],[100,64,73,62,"name"],[100,68,73,66],[100,79,73,77],[100,80,73,78],[101,6,74,4],[102,6,75,4],[102,10,75,8,"component"],[102,19,75,17],[102,23,75,21],[102,27,75,25],[102,29,75,27],[103,8,76,6],[103,14,76,12],[103,18,76,16,"Error"],[103,23,76,21],[103,24,76,22],[103,77,76,75,"name"],[103,81,76,79],[103,262,76,260],[103,263,76,261],[104,6,77,4],[105,6,78,4],[105,10,78,10,"element"],[105,17,78,17],[105,20,78,20,"isNavigator"],[105,31,78,31],[105,35,78,35],[105,48,78,48,"React"],[105,53,78,53],[105,54,78,54,"createElement"],[105,67,78,67],[105,68,78,68,"component"],[105,77,78,77],[105,79,78,79],[105,80,78,80],[105,81,78,81],[105,82,78,82],[105,86,78,86],[105,99,78,99],[105,100,78,100],[105,101,78,101],[105,103,78,103,"_jsxRuntime"],[105,114,78,114],[105,115,78,115,"jsx"],[105,118,78,118],[105,120,78,120,"MemoizedScreen"],[105,134,78,134],[105,136,78,136],[106,8,79,6,"component"],[106,17,79,15],[106,19,79,17,"component"],[107,6,80,4],[107,7,80,5],[107,8,80,6],[108,6,81,4],[108,13,81,11],[108,19,81,17],[109,8,82,6],[109,12,82,12,"shouldRender"],[109,24,82,24],[109,27,82,27,"useIf"],[109,32,82,32],[109,36,82,36],[109,40,82,40],[109,44,82,44,"useIf"],[109,49,82,49],[109,50,82,50],[109,51,82,51],[110,8,83,6],[110,12,83,10],[110,13,83,11,"shouldRender"],[110,25,83,23],[110,27,83,25],[111,10,84,8],[111,17,84,15],[111,21,84,19],[112,8,85,6],[113,8,86,6],[113,15,86,13],[113,28,86,26],[113,29,86,27],[113,30,86,28],[113,32,86,30,"_jsxRuntime"],[113,43,86,41],[113,44,86,42,"jsx"],[113,47,86,45],[113,49,86,47,"Screen"],[113,55,86,53],[113,57,86,55],[114,10,87,8,"name"],[114,14,87,12],[114,16,87,14,"name"],[114,20,87,18],[115,10,88,8],[115,13,88,11,"props"],[115,18,88,16],[116,10,89,8,"children"],[116,18,89,16],[116,20,89,18,"children"],[116,21,89,18],[116,26,89,24,"element"],[117,8,90,6],[117,9,90,7],[117,11,90,9,"name"],[117,15,90,13],[117,16,90,14],[118,6,91,4],[118,7,91,5],[119,4,92,2],[119,5,92,3],[119,6,92,4],[120,2,93,0],[120,3,93,1],[122,2,95,0],[123,0,96,0],[124,0,97,0],[125,0,98,0],[126,0,99,0],[127,0,100,0],[128,0,101,0],[129,2,102,0],[129,11,102,9,"createComponentForStaticNavigation"],[129,45,102,43,"createComponentForStaticNavigation"],[129,46,102,44,"tree"],[129,50,102,48],[129,52,102,50,"displayName"],[129,63,102,61],[129,65,102,63],[130,4,103,2],[130,8,104,4,"Navigator"],[130,17,104,13],[130,20,108,6,"tree"],[130,24,108,10],[130,25,104,4,"Navigator"],[130,34,104,13],[131,6,105,4,"Group"],[131,11,105,9],[131,14,108,6,"tree"],[131,18,108,10],[131,19,105,4,"Group"],[131,24,105,9],[132,6,106,4,"Screen"],[132,12,106,10],[132,15,108,6,"tree"],[132,19,108,10],[132,20,106,4,"Screen"],[132,26,106,10],[133,6,107,4,"config"],[133,12,107,10],[133,15,108,6,"tree"],[133,19,108,10],[133,20,107,4,"config"],[133,26,107,10],[134,4,109,2],[134,8,110,4,"screens"],[134,15,110,11],[134,18,113,6,"config"],[134,24,113,12],[134,25,110,4,"screens"],[134,32,110,11],[135,6,111,4,"groups"],[135,12,111,10],[135,15,113,6,"config"],[135,21,113,12],[135,22,111,4,"groups"],[135,28,111,10],[136,6,112,7,"rest"],[136,10,112,11],[136,13,112,11,"_objectWithoutProperties"],[136,37,112,11],[136,38,113,6,"config"],[136,44,113,12],[136,46,113,12,"_excluded2"],[136,56,113,12],[137,4,114,2],[137,8,114,6,"screens"],[137,15,114,13],[137,19,114,17],[137,23,114,21],[137,27,114,25,"groups"],[137,33,114,31],[137,37,114,35],[137,41,114,39],[137,43,114,41],[138,6,115,4],[138,12,115,10],[138,16,115,14,"Error"],[138,21,115,19],[138,22,115,20],[138,153,115,151],[138,154,115,152],[139,4,116,2],[140,4,117,2],[140,8,117,8,"items"],[140,13,117,13],[140,16,117,16],[140,18,117,18],[142,4,119,2],[143,4,120,2],[144,4,121,2],[144,9,121,7],[144,13,121,13,"key"],[144,16,121,16],[144,20,121,20,"config"],[144,26,121,26],[144,28,121,28],[145,6,122,4],[145,10,122,8,"key"],[145,13,122,11],[145,18,122,16],[145,27,122,25],[145,31,122,29,"screens"],[145,38,122,36],[145,40,122,38],[146,8,123,6,"items"],[146,13,123,11],[146,14,123,12,"push"],[146,18,123,16],[146,19,123,17],[146,22,123,20,"getItemsFromScreens"],[146,41,123,39],[146,42,123,40,"Screen"],[146,48,123,46],[146,50,123,48,"screens"],[146,57,123,55],[146,58,123,56],[146,59,123,57],[147,6,124,4],[148,6,125,4],[148,10,125,8,"key"],[148,13,125,11],[148,18,125,16],[148,26,125,24],[148,30,125,28,"groups"],[148,36,125,34],[148,38,125,36],[149,8,126,6,"items"],[149,13,126,11],[149,14,126,12,"push"],[149,18,126,16],[149,19,126,17],[149,22,126,20,"Object"],[149,28,126,26],[149,29,126,27,"entries"],[149,36,126,34],[149,37,126,35,"groups"],[149,43,126,41],[149,44,126,42],[149,45,126,43,"map"],[149,48,126,46],[149,49,126,47,"_ref4"],[149,54,126,47],[149,58,129,13],[150,10,129,13],[150,14,129,13,"_ref5"],[150,19,129,13],[150,22,129,13,"_slicedToArray"],[150,36,129,13],[150,37,129,13,"_ref4"],[150,42,129,13],[151,12,126,49,"key"],[151,15,126,52],[151,18,126,52,"_ref5"],[151,23,126,52],[152,12,126,52,"_ref5$"],[152,18,126,52],[152,21,126,52,"_ref5"],[152,26,126,52],[153,12,127,12,"useIf"],[153,17,127,17],[153,20,127,17,"_ref5$"],[153,26,127,17],[153,27,127,8,"if"],[153,29,127,10],[154,12,128,11,"group"],[154,17,128,16],[154,20,128,16,"_objectWithoutProperties"],[154,44,128,16],[154,45,128,16,"_ref5$"],[154,51,128,16],[154,53,128,16,"_excluded3"],[154,63,128,16],[155,10,130,8],[155,14,130,14,"groupItems"],[155,24,130,24],[155,27,130,27,"getItemsFromScreens"],[155,46,130,46],[155,47,130,47,"Screen"],[155,53,130,53],[155,55,130,55,"group"],[155,60,130,60],[155,61,130,61,"screens"],[155,68,130,68],[155,69,130,69],[156,10,131,8],[156,17,131,15],[156,23,131,21],[157,12,132,10],[158,12,133,10],[158,16,133,16,"children"],[158,24,133,24],[158,27,133,27,"groupItems"],[158,37,133,37],[158,38,133,38,"map"],[158,41,133,41],[158,42,133,42,"item"],[158,46,133,46],[158,50,133,50,"item"],[158,54,133,54],[158,55,133,55],[158,56,133,56],[158,57,133,57],[159,12,134,10],[159,16,134,16,"shouldRender"],[159,28,134,28],[159,31,134,31,"useIf"],[159,36,134,36],[159,40,134,40],[159,44,134,44],[159,48,134,48,"useIf"],[159,53,134,53],[159,54,134,54],[159,55,134,55],[160,12,135,10],[160,16,135,14],[160,17,135,15,"shouldRender"],[160,29,135,27],[160,31,135,29],[161,14,136,12],[161,21,136,19],[161,25,136,23],[162,12,137,10],[163,12,138,10],[163,19,138,17],[163,32,138,30],[163,33,138,31],[163,34,138,32],[163,36,138,34,"_react"],[163,42,138,40],[163,43,138,41,"createElement"],[163,56,138,54],[163,58,138,56,"Group"],[163,63,138,61],[163,65,138,63],[164,14,139,12,"navigationKey"],[164,27,139,25],[164,29,139,27,"key"],[164,32,139,30],[165,14,140,12],[165,17,140,15,"group"],[165,22,140,20],[166,14,141,12,"key"],[166,17,141,15],[166,19,141,17,"key"],[167,12,142,10],[167,13,142,11],[167,15,142,13,"children"],[167,23,142,21],[167,24,142,22],[168,10,143,8],[168,11,143,9],[169,8,144,6],[169,9,144,7],[169,10,144,8],[169,11,144,9],[170,6,145,4],[171,4,146,2],[172,4,147,2],[172,8,147,8,"NavigatorComponent"],[172,26,147,26],[172,29,147,29,"NavigatorComponent"],[172,30,147,29],[172,35,147,35],[173,6,148,4],[173,10,148,10,"children"],[173,18,148,18],[173,21,148,21,"items"],[173,26,148,26],[173,27,148,27,"map"],[173,30,148,30],[173,31,148,31,"item"],[173,35,148,35],[173,39,148,39,"item"],[173,43,148,43],[173,44,148,44],[173,45,148,45],[173,46,148,46],[174,6,149,4],[174,13,149,11],[174,26,149,24],[174,27,149,25],[174,28,149,26],[174,30,149,28,"_jsxRuntime"],[174,41,149,39],[174,42,149,40,"jsx"],[174,45,149,43],[174,47,149,45,"Navigator"],[174,56,149,54],[174,58,149,56],[175,8,150,6],[175,11,150,9,"rest"],[175,15,150,13],[176,8,151,6,"children"],[176,16,151,14],[176,18,151,16,"children"],[177,6,152,4],[177,7,152,5],[177,8,152,6],[178,4,153,2],[178,5,153,3],[179,4,154,2,"NavigatorComponent"],[179,22,154,20],[179,23,154,21,"displayName"],[179,34,154,32],[179,37,154,35,"displayName"],[179,48,154,46],[180,4,155,2],[180,11,155,9,"NavigatorComponent"],[180,29,155,27],[181,2,156,0],[182,2,157,0],[183,0,158,0],[184,0,159,0],[185,0,160,0],[186,0,161,0],[187,0,162,0],[188,0,163,0],[189,0,164,0],[190,0,165,0],[191,0,166,0],[192,0,167,0],[193,0,168,0],[194,0,169,0],[195,0,170,0],[196,0,171,0],[197,0,172,0],[198,0,173,0],[199,0,174,0],[200,0,175,0],[201,2,176,0],[201,11,176,9,"createPathConfigForStaticNavigation"],[201,46,176,44,"createPathConfigForStaticNavigation"],[201,47,176,45,"tree"],[201,51,176,49],[201,53,176,51,"options"],[201,60,176,58],[201,62,176,60,"auto"],[201,66,176,64],[201,68,176,66],[202,4,177,2],[202,8,177,6,"initialScreenConfig"],[202,27,177,25],[203,4,178,2],[203,8,178,8,"createPathConfigForTree"],[203,31,178,31],[203,34,178,34,"createPathConfigForTree"],[203,35,178,35,"t"],[203,36,178,36],[203,38,178,38,"o"],[203,39,178,39],[203,41,178,41,"skipInitialDetection"],[203,61,178,61],[203,66,178,66],[204,6,179,4],[204,10,179,10,"createPathConfigForScreens"],[204,36,179,36],[204,39,179,39,"createPathConfigForScreens"],[204,40,179,40,"screens"],[204,47,179,47],[204,49,179,49,"initialRouteName"],[204,65,179,65],[204,70,179,70],[205,8,180,6],[205,15,180,13,"Object"],[205,21,180,19],[205,22,180,20,"fromEntries"],[205,33,180,31],[205,34,180,32,"Object"],[205,40,180,38],[205,41,180,39,"entries"],[205,48,180,46],[205,49,180,47,"screens"],[205,56,180,54],[206,8,181,6],[207,8,182,6],[208,8,182,6],[208,9,183,7,"sort"],[208,13,183,11],[208,14,183,12],[208,15,183,12,"_ref6"],[208,20,183,12],[208,22,183,12,"_ref7"],[208,27,183,12],[208,32,183,26],[209,10,183,26],[209,14,183,26,"_ref8"],[209,19,183,26],[209,22,183,26,"_slicedToArray"],[209,36,183,26],[209,37,183,26,"_ref6"],[209,42,183,26],[210,12,183,14,"a"],[210,13,183,15],[210,16,183,15,"_ref8"],[210,21,183,15],[211,10,183,15],[211,14,183,15,"_ref9"],[211,19,183,15],[211,22,183,15,"_slicedToArray"],[211,36,183,15],[211,37,183,15,"_ref7"],[211,42,183,15],[212,12,183,19,"b"],[212,13,183,20],[212,16,183,20,"_ref9"],[212,21,183,20],[213,10,184,8],[213,14,184,12,"a"],[213,15,184,13],[213,20,184,18,"initialRouteName"],[213,36,184,34],[213,38,184,36],[214,12,185,10],[214,19,185,17],[214,20,185,18],[214,21,185,19],[215,10,186,8],[216,10,187,8],[216,14,187,12,"b"],[216,15,187,13],[216,20,187,18,"initialRouteName"],[216,36,187,34],[216,38,187,36],[217,12,188,10],[217,19,188,17],[217,20,188,18],[218,10,189,8],[219,10,190,8],[219,17,190,15],[219,18,190,16],[220,8,191,6],[220,9,191,7],[220,10,191,8],[220,11,191,9,"map"],[220,14,191,12],[220,15,191,13,"_ref10"],[220,21,191,13],[220,25,191,30],[221,10,191,30],[221,14,191,30,"_ref11"],[221,20,191,30],[221,23,191,30,"_slicedToArray"],[221,37,191,30],[221,38,191,30,"_ref10"],[221,44,191,30],[222,12,191,15,"key"],[222,15,191,18],[222,18,191,18,"_ref11"],[222,24,191,18],[223,12,191,20,"item"],[223,16,191,24],[223,19,191,24,"_ref11"],[223,25,191,24],[224,10,192,8],[224,14,192,14,"screenConfig"],[224,26,192,26],[224,29,192,29],[224,30,192,30],[224,31,192,31],[225,10,193,8],[225,14,193,12],[225,23,193,21],[225,27,193,25,"item"],[225,31,193,29],[225,33,193,31],[226,12,194,10],[226,16,194,14],[226,23,194,21,"item"],[226,27,194,25],[226,28,194,26,"linking"],[226,35,194,33],[226,40,194,38],[226,48,194,46],[226,50,194,48],[227,14,195,12,"screenConfig"],[227,26,195,24],[227,27,195,25,"path"],[227,31,195,29],[227,34,195,32,"item"],[227,38,195,36],[227,39,195,37,"linking"],[227,46,195,44],[228,12,196,10],[228,13,196,11],[228,19,196,17],[229,14,197,12,"Object"],[229,20,197,18],[229,21,197,19,"assign"],[229,27,197,25],[229,28,197,26,"screenConfig"],[229,40,197,38],[229,42,197,40,"item"],[229,46,197,44],[229,47,197,45,"linking"],[229,54,197,52],[229,55,197,53],[230,12,198,10],[231,12,199,10],[231,16,199,14],[231,23,199,21,"screenConfig"],[231,35,199,33],[231,36,199,34,"path"],[231,40,199,38],[231,45,199,43],[231,53,199,51],[231,55,199,53],[232,14,200,12,"screenConfig"],[232,26,200,24],[232,27,200,25,"path"],[232,31,200,29],[232,34,200,32,"screenConfig"],[232,46,200,44],[232,47,200,45,"path"],[232,51,200,49],[232,52,200,50,"replace"],[232,59,200,57],[232,60,200,58],[232,65,200,63],[232,67,200,65],[232,69,200,67],[232,70,200,68],[232,71,200,69],[233,14,200,69],[233,15,201,13,"replace"],[233,22,201,20],[233,23,201,21],[233,28,201,26],[233,30,201,28],[233,32,201,30],[233,33,201,31],[233,34,201,32],[233,35,201,33],[234,12,202,10],[235,10,203,8],[236,10,204,8],[236,14,204,12,"screens"],[236,21,204,19],[237,10,205,8],[237,14,205,14,"skipInitialDetectionInChild"],[237,41,205,41],[237,44,205,44,"skipInitialDetection"],[237,64,205,64],[237,68,205,68,"screenConfig"],[237,80,205,80],[237,81,205,81,"path"],[237,85,205,85],[237,89,205,89],[237,93,205,93],[237,97,205,97,"screenConfig"],[237,109,205,109],[237,110,205,110,"path"],[237,114,205,114],[237,119,205,119],[237,121,205,121],[238,10,206,8],[238,14,206,12],[238,22,206,20],[238,26,206,24,"item"],[238,30,206,28],[238,32,206,30],[239,12,207,10,"screens"],[239,19,207,17],[239,22,207,20,"createPathConfigForTree"],[239,45,207,43],[239,46,207,44,"item"],[239,50,207,48],[239,52,207,50,"undefined"],[239,61,207,59],[239,63,207,61,"skipInitialDetectionInChild"],[239,90,207,88],[239,91,207,89],[240,10,208,8],[240,11,208,9],[240,17,208,15],[240,21,208,19],[240,29,208,27],[240,33,208,31,"item"],[240,37,208,35],[240,41,208,39],[240,49,208,47],[240,53,208,51,"item"],[240,57,208,55],[240,58,208,56,"screen"],[240,64,208,62],[240,69,208,67,"item"],[240,73,208,71],[240,74,208,72,"screen"],[240,80,208,78],[240,81,208,79,"config"],[240,87,208,85],[240,88,208,86,"screens"],[240,95,208,93],[240,99,208,97,"item"],[240,103,208,101],[240,104,208,102,"screen"],[240,110,208,108],[240,111,208,109,"config"],[240,117,208,115],[240,118,208,116,"groups"],[240,124,208,122],[240,125,208,123],[240,127,208,125],[241,12,209,10,"screens"],[241,19,209,17],[241,22,209,20,"createPathConfigForTree"],[241,45,209,43],[241,46,209,44,"item"],[241,50,209,48],[241,51,209,49,"screen"],[241,57,209,55],[241,59,209,57,"undefined"],[241,68,209,66],[241,70,209,68,"skipInitialDetectionInChild"],[241,97,209,95],[241,98,209,96],[242,10,210,8],[243,10,211,8],[243,14,211,12,"screens"],[243,21,211,19],[243,23,211,21],[244,12,212,10,"screenConfig"],[244,24,212,22],[244,25,212,23,"screens"],[244,32,212,30],[244,35,212,33,"screens"],[244,42,212,40],[245,10,213,8],[246,10,214,8],[246,14,214,12,"auto"],[246,18,214,16],[246,22,214,20],[246,23,214,21,"screenConfig"],[246,35,214,33],[246,36,214,34,"screens"],[246,43,214,41],[247,10,215,8],[248,10,216,8],[248,12,216,10],[248,21,216,19],[248,25,216,23,"item"],[248,29,216,27],[248,33,216,31,"item"],[248,37,216,35],[248,38,216,36,"linking"],[248,45,216,43],[248,49,216,47],[248,53,216,51],[248,54,216,52],[248,56,216,54],[249,12,217,10],[249,16,217,14,"screenConfig"],[249,28,217,26],[249,29,217,27,"path"],[249,33,217,31],[249,37,217,35],[249,41,217,39],[249,43,217,41],[250,14,218,12],[250,18,218,16],[250,19,218,17,"skipInitialDetection"],[250,39,218,37],[250,43,218,41,"screenConfig"],[250,55,218,53],[250,56,218,54,"path"],[250,60,218,58],[250,65,218,63],[250,67,218,65],[250,69,218,67],[251,16,219,14],[252,16,220,14],[253,16,221,14,"initialScreenConfig"],[253,35,221,33],[253,38,221,36,"undefined"],[253,47,221,45],[254,14,222,12],[255,12,223,10],[255,13,223,11],[255,19,223,17],[256,14,224,12],[256,18,224,16],[256,19,224,17,"skipInitialDetection"],[256,39,224,37],[256,43,224,41,"initialScreenConfig"],[256,62,224,60],[256,66,224,64],[256,70,224,68],[256,72,224,70],[257,16,225,14,"initialScreenConfig"],[257,35,225,33],[257,38,225,36,"screenConfig"],[257,50,225,48],[258,14,226,12],[259,14,227,12,"screenConfig"],[259,26,227,24],[259,27,227,25,"path"],[259,31,227,29],[259,34,227,32,"key"],[259,37,227,35],[259,38,227,36,"replace"],[259,45,227,43],[259,46,227,44],[259,57,227,55],[259,59,227,57],[259,64,227,62],[259,65,227,63],[259,66,227,64,"replace"],[259,73,227,71],[259,74,227,72],[259,78,227,76],[259,80,227,78],[259,82,227,80],[259,83,227,81],[259,84,227,82,"toLowerCase"],[259,95,227,93],[259,96,227,94],[259,97,227,95],[260,12,228,10],[261,10,229,8],[262,10,230,8],[262,17,230,15],[262,18,230,16,"key"],[262,21,230,19],[262,23,230,21,"screenConfig"],[262,35,230,33],[262,36,230,34],[263,8,231,6],[263,9,231,7],[263,10,231,8],[263,11,231,9,"filter"],[263,17,231,15],[263,18,231,16,"_ref12"],[263,24,231,16],[264,10,231,16],[264,14,231,16,"_ref13"],[264,20,231,16],[264,23,231,16,"_slicedToArray"],[264,37,231,16],[264,38,231,16,"_ref12"],[264,44,231,16],[265,12,231,20,"screen"],[265,18,231,26],[265,21,231,26,"_ref13"],[265,27,231,26],[266,10,231,26],[266,17,231,32,"Object"],[266,23,231,38],[266,24,231,39,"keys"],[266,28,231,43],[266,29,231,44,"screen"],[266,35,231,50],[266,36,231,51],[266,37,231,52,"length"],[266,43,231,58],[266,46,231,61],[266,47,231,62],[267,8,231,62],[267,10,231,63],[267,11,231,64],[268,6,232,4],[268,7,232,5],[269,6,233,4],[269,10,233,10,"screens"],[269,17,233,17],[269,20,233,20],[269,21,233,21],[269,22,233,22],[271,6,235,4],[272,6,236,4],[273,6,237,4],[273,11,237,9],[273,15,237,15,"key"],[273,18,237,18],[273,22,237,22,"t"],[273,23,237,23],[273,24,237,24,"config"],[273,30,237,30],[273,32,237,32],[274,8,238,6],[274,12,238,10,"key"],[274,15,238,13],[274,20,238,18],[274,29,238,27],[274,33,238,31,"t"],[274,34,238,32],[274,35,238,33,"config"],[274,41,238,39],[274,42,238,40,"screens"],[274,49,238,47],[274,51,238,49],[275,10,239,8,"Object"],[275,16,239,14],[275,17,239,15,"assign"],[275,23,239,21],[275,24,239,22,"screens"],[275,31,239,29],[275,33,239,31,"createPathConfigForScreens"],[275,59,239,57],[275,60,239,58,"t"],[275,61,239,59],[275,62,239,60,"config"],[275,68,239,66],[275,69,239,67,"screens"],[275,76,239,74],[275,78,239,76,"o"],[275,79,239,77],[275,81,239,79,"initialRouteName"],[275,97,239,95],[275,101,239,99,"t"],[275,102,239,100],[275,103,239,101,"config"],[275,109,239,107],[275,110,239,108,"initialRouteName"],[275,126,239,124],[275,127,239,125],[275,128,239,126],[276,8,240,6],[277,8,241,6],[277,12,241,10,"key"],[277,15,241,13],[277,20,241,18],[277,28,241,26],[277,32,241,30,"t"],[277,33,241,31],[277,34,241,32,"config"],[277,40,241,38],[277,41,241,39,"groups"],[277,47,241,45],[277,49,241,47],[278,10,242,8,"Object"],[278,16,242,14],[278,17,242,15,"entries"],[278,24,242,22],[278,25,242,23,"t"],[278,26,242,24],[278,27,242,25,"config"],[278,33,242,31],[278,34,242,32,"groups"],[278,40,242,38],[278,41,242,39],[278,42,242,40,"forEach"],[278,49,242,47],[278,50,242,48,"_ref14"],[278,56,242,48],[278,60,242,63],[279,12,242,63],[279,16,242,63,"_ref15"],[279,22,242,63],[279,25,242,63,"_slicedToArray"],[279,39,242,63],[279,40,242,63,"_ref14"],[279,46,242,63],[280,14,242,52,"group"],[280,19,242,57],[280,22,242,57,"_ref15"],[280,28,242,57],[281,12,243,10,"Object"],[281,18,243,16],[281,19,243,17,"assign"],[281,25,243,23],[281,26,243,24,"screens"],[281,33,243,31],[281,35,243,33,"createPathConfigForScreens"],[281,61,243,59],[281,62,243,60,"group"],[281,67,243,65],[281,68,243,66,"screens"],[281,75,243,73],[281,77,243,75,"o"],[281,78,243,76],[281,80,243,78,"initialRouteName"],[281,96,243,94],[281,100,243,98,"t"],[281,101,243,99],[281,102,243,100,"config"],[281,108,243,106],[281,109,243,107,"initialRouteName"],[281,125,243,123],[281,126,243,124],[281,127,243,125],[282,10,244,8],[282,11,244,9],[282,12,244,10],[283,8,245,6],[284,6,246,4],[285,6,247,4],[285,10,247,8,"Object"],[285,16,247,14],[285,17,247,15,"keys"],[285,21,247,19],[285,22,247,20,"screens"],[285,29,247,27],[285,30,247,28],[285,31,247,29,"length"],[285,37,247,35],[285,42,247,40],[285,43,247,41],[285,45,247,43],[286,8,248,6],[286,15,248,13,"undefined"],[286,24,248,22],[287,6,249,4],[288,6,250,4],[288,13,250,11,"screens"],[288,20,250,18],[289,4,251,2],[289,5,251,3],[290,4,252,2],[290,8,252,8,"screens"],[290,15,252,15],[290,18,252,18,"createPathConfigForTree"],[290,41,252,41],[290,42,252,42,"tree"],[290,46,252,46],[290,48,252,48,"options"],[290,55,252,55],[290,57,252,57],[290,62,252,62],[290,63,252,63],[291,4,253,2],[291,8,253,6,"auto"],[291,12,253,10],[291,16,253,14,"initialScreenConfig"],[291,35,253,33],[291,37,253,35],[292,6,254,4,"initialScreenConfig"],[292,25,254,23],[292,26,254,24,"path"],[292,30,254,28],[292,33,254,31],[292,35,254,33],[293,4,255,2],[294,4,256,2],[294,11,256,9,"screens"],[294,18,256,16],[295,2,257,0],[296,0,257,1],[296,3]],"functionMap":{"names":["<global>","_getRequireWildcardCache","_interopRequireWildcard","React.memo$argument_0","getItemsFromScreens","Object.entries.map$argument_0","<anonymous>","children","createComponentForStaticNavigation","groupItems.map$argument_0","NavigatorComponent","items.map$argument_0","createPathConfigForStaticNavigation","createPathConfigForTree","createPathConfigForScreens","Object.entries.sort$argument_0","Object.entries.sort.map$argument_0","Object.entries.sort.map.filter$argument_0","Object.entries.forEach$argument_0"],"mappings":"AAA;ACY,4MD;AEC,mkBF;+CGyB;CHQ;4BIE;qCCC;WC+B;kBCQ,aD;KDE;GDC;CJC;AQS;+CHwB;eCK;0CGE,cH;SDU;OGC;6BEG;+BCC,cD;GFK;CRG;AYoB;kCCE;uCCC;YCI;ODQ,ME;OFwC,SG,8CH;KDC;gDKU;SLE;GDO;CZM"}},"type":"js/module"}]}