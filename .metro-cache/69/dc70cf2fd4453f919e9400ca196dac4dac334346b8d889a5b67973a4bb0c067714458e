{"dependencies":[{"name":"./getReactNavigationConfig","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":35,"index":289},"end":{"line":6,"column":72,"index":326}}],"key":"vHLl09Fo1cot8Q7f7epxLLVamLs="}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":28,"index":224},"end":{"line":5,"column":56,"index":252}}],"key":"lFSV8MloDpR3EnWyvloF9Uq7qFY="}},{"name":"./link/linking","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18,"index":346},"end":{"line":7,"column":43,"index":371}},{"start":{"line":7,"column":18,"index":346},"end":{"line":7,"column":43,"index":371}},{"start":{"line":7,"column":18,"index":346},"end":{"line":7,"column":43,"index":371}},{"start":{"line":7,"column":18,"index":346},"end":{"line":7,"column":43,"index":371}},{"start":{"line":7,"column":18,"index":346},"end":{"line":7,"column":43,"index":371}}],"key":"I1McWHLUyOzTMAaygW/PL/mjMmY="}},{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":17,"index":159},"end":{"line":4,"column":52,"index":194}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getLinkingConfig = exports.getNavigationConfig = void 0;\n  function getNavigationConfig(routes) {\n    var metaOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    return (0, require(_dependencyMap[0], \"./getReactNavigationConfig\").getReactNavigationConfig)(routes, metaOnly);\n  }\n  exports.getNavigationConfig = getNavigationConfig;\n  function getLinkingConfig(store, routes, context) {\n    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$metaOnly = _ref.metaOnly,\n      metaOnly = _ref$metaOnly === void 0 ? true : _ref$metaOnly,\n      serverUrl = _ref.serverUrl;\n    // Returning `undefined` / `null from `getInitialURL` are valid values, so we need to track if it's been called.\n    var hasCachedInitialUrl = false;\n    var initialUrl;\n    var nativeLinkingKey = context.keys().find(key => key.match(/^\\.\\/\\+native-intent\\.[tj]sx?$/));\n    var nativeLinking = nativeLinkingKey ? context(nativeLinkingKey) : undefined;\n    return {\n      prefixes: [],\n      config: getNavigationConfig(routes, metaOnly),\n      // A custom getInitialURL is used on native to ensure the app always starts at\n      // the root path if it's launched from something other than a deep link.\n      // This helps keep the native functionality working like the web functionality.\n      // For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n      // then `/index` would be used on web and `/settings` would be used on native.\n      getInitialURL() {\n        // Expo Router calls `getInitialURL` twice, which may confuse the user if they provide a custom `getInitialURL`.\n        // Therefor we memoize the result.\n        if (!hasCachedInitialUrl) {\n          if (require(_dependencyMap[1], \"expo-modules-core\").Platform.OS === 'web') {\n            initialUrl = serverUrl ?? (0, require(_dependencyMap[2], \"./link/linking\").getInitialURL)();\n          } else {\n            initialUrl = serverUrl ?? (0, require(_dependencyMap[2], \"./link/linking\").getInitialURL)();\n            if (typeof initialUrl === 'string') {\n              if (typeof nativeLinking?.redirectSystemPath === 'function') {\n                initialUrl = nativeLinking.redirectSystemPath({\n                  path: initialUrl,\n                  initial: true\n                });\n              }\n            } else if (initialUrl) {\n              initialUrl = initialUrl.then(url => {\n                if (url && typeof nativeLinking?.redirectSystemPath === 'function') {\n                  return nativeLinking.redirectSystemPath({\n                    path: url,\n                    initial: true\n                  });\n                }\n                return url;\n              });\n            }\n          }\n          hasCachedInitialUrl = true;\n        }\n        return initialUrl;\n      },\n      subscribe: (0, require(_dependencyMap[2], \"./link/linking\").addEventListener)(nativeLinking),\n      getStateFromPath: require(_dependencyMap[2], \"./link/linking\").getStateFromPath.bind(store),\n      getPathFromState(state, options) {\n        return (0, require(_dependencyMap[2], \"./link/linking\").getPathFromState)(state, {\n          screens: {},\n          ...this.config,\n          ...options\n        }) ?? '/';\n      },\n      // Add all functions to ensure the types never need to fallback.\n      // This is a convenience for usage in the package.\n      getActionFromState: require(_dependencyMap[3], \"@react-navigation/native\").getActionFromState\n    };\n  }\n  exports.getLinkingConfig = getLinkingConfig;\n});","lineCount":77,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getLinkingConfig"],[7,26,3,24],[7,29,3,27,"exports"],[7,36,3,34],[7,37,3,35,"getNavigationConfig"],[7,56,3,54],[7,59,3,57],[7,64,3,62],[7,65,3,63],[8,2,8,0],[8,11,8,9,"getNavigationConfig"],[8,30,8,28,"getNavigationConfig"],[8,31,8,29,"routes"],[8,37,8,35],[8,39,8,54],[9,4,8,54],[9,8,8,37,"metaOnly"],[9,16,8,45],[9,19,8,45,"arguments"],[9,28,8,45],[9,29,8,45,"length"],[9,35,8,45],[9,43,8,45,"arguments"],[9,52,8,45],[9,60,8,45,"undefined"],[9,69,8,45],[9,72,8,45,"arguments"],[9,81,8,45],[9,87,8,48],[9,91,8,52],[10,4,9,4],[10,11,9,11],[10,12,9,12],[10,13,9,13],[10,15,9,15,"require"],[10,22,9,15],[10,23,9,15,"_dependencyMap"],[10,37,9,15],[10,72,9,42,"getReactNavigationConfig"],[10,96,9,66],[10,98,9,68,"routes"],[10,104,9,74],[10,106,9,76,"metaOnly"],[10,114,9,84],[10,115,9,85],[11,2,10,0],[12,2,11,0,"exports"],[12,9,11,7],[12,10,11,8,"getNavigationConfig"],[12,29,11,27],[12,32,11,30,"getNavigationConfig"],[12,51,11,49],[13,2,12,0],[13,11,12,9,"getLinkingConfig"],[13,27,12,25,"getLinkingConfig"],[13,28,12,26,"store"],[13,33,12,31],[13,35,12,33,"routes"],[13,41,12,39],[13,43,12,41,"context"],[13,50,12,48],[13,52,12,87],[14,4,12,87],[14,8,12,87,"_ref"],[14,12,12,87],[14,15,12,87,"arguments"],[14,24,12,87],[14,25,12,87,"length"],[14,31,12,87],[14,39,12,87,"arguments"],[14,48,12,87],[14,56,12,87,"undefined"],[14,65,12,87],[14,68,12,87,"arguments"],[14,77,12,87],[14,83,12,83],[14,84,12,84],[14,85,12,85],[15,6,12,85,"_ref$metaOnly"],[15,19,12,85],[15,22,12,85,"_ref"],[15,26,12,85],[15,27,12,52,"metaOnly"],[15,35,12,60],[16,6,12,52,"metaOnly"],[16,14,12,60],[16,17,12,60,"_ref$metaOnly"],[16,30,12,60],[16,44,12,63],[16,48,12,67],[16,51,12,67,"_ref$metaOnly"],[16,64,12,67],[17,6,12,69,"serverUrl"],[17,15,12,78],[17,18,12,78,"_ref"],[17,22,12,78],[17,23,12,69,"serverUrl"],[17,32,12,78],[18,4,13,4],[19,4,14,4],[19,8,14,8,"hasCachedInitialUrl"],[19,27,14,27],[19,30,14,30],[19,35,14,35],[20,4,15,4],[20,8,15,8,"initialUrl"],[20,18,15,18],[21,4,16,4],[21,8,16,10,"nativeLinkingKey"],[21,24,16,26],[21,27,16,29,"context"],[21,34,16,36],[21,35,17,9,"keys"],[21,39,17,13],[21,40,17,14],[21,41,17,15],[21,42,18,9,"find"],[21,46,18,13],[21,47,18,15,"key"],[21,50,18,18],[21,54,18,23,"key"],[21,57,18,26],[21,58,18,27,"match"],[21,63,18,32],[21,64,18,33],[21,96,18,65],[21,97,18,66],[21,98,18,67],[22,4,19,4],[22,8,19,10,"nativeLinking"],[22,21,19,23],[22,24,19,26,"nativeLinkingKey"],[22,40,19,42],[22,43,20,10,"context"],[22,50,20,17],[22,51,20,18,"nativeLinkingKey"],[22,67,20,34],[22,68,20,35],[22,71,21,10,"undefined"],[22,80,21,19],[23,4,22,4],[23,11,22,11],[24,6,23,8,"prefixes"],[24,14,23,16],[24,16,23,18],[24,18,23,20],[25,6,24,8,"config"],[25,12,24,14],[25,14,24,16,"getNavigationConfig"],[25,33,24,35],[25,34,24,36,"routes"],[25,40,24,42],[25,42,24,44,"metaOnly"],[25,50,24,52],[25,51,24,53],[26,6,25,8],[27,6,26,8],[28,6,27,8],[29,6,28,8],[30,6,29,8],[31,6,30,8,"getInitialURL"],[31,19,30,21,"getInitialURL"],[31,20,30,21],[31,22,30,24],[32,8,31,12],[33,8,32,12],[34,8,33,12],[34,12,33,16],[34,13,33,17,"hasCachedInitialUrl"],[34,32,33,36],[34,34,33,38],[35,10,34,16],[35,14,34,20,"require"],[35,21,34,20],[35,22,34,20,"_dependencyMap"],[35,36,34,20],[35,62,34,40,"Platform"],[35,70,34,48],[35,71,34,49,"OS"],[35,73,34,51],[35,78,34,56],[35,83,34,61],[35,85,34,63],[36,12,35,20,"initialUrl"],[36,22,35,30],[36,25,35,33,"serverUrl"],[36,34,35,42],[36,38,35,46],[36,39,35,47],[36,40,35,48],[36,42,35,50,"require"],[36,49,35,50],[36,50,35,50,"_dependencyMap"],[36,64,35,50],[36,87,35,60,"getInitialURL"],[36,100,35,73],[36,102,35,75],[36,103,35,76],[37,10,36,16],[37,11,36,17],[37,17,37,21],[38,12,38,20,"initialUrl"],[38,22,38,30],[38,25,38,33,"serverUrl"],[38,34,38,42],[38,38,38,46],[38,39,38,47],[38,40,38,48],[38,42,38,50,"require"],[38,49,38,50],[38,50,38,50,"_dependencyMap"],[38,64,38,50],[38,87,38,60,"getInitialURL"],[38,100,38,73],[38,102,38,75],[38,103,38,76],[39,12,39,20],[39,16,39,24],[39,23,39,31,"initialUrl"],[39,33,39,41],[39,38,39,46],[39,46,39,54],[39,48,39,56],[40,14,40,24],[40,18,40,28],[40,25,40,35,"nativeLinking"],[40,38,40,48],[40,40,40,50,"redirectSystemPath"],[40,58,40,68],[40,63,40,73],[40,73,40,83],[40,75,40,85],[41,16,41,28,"initialUrl"],[41,26,41,38],[41,29,41,41,"nativeLinking"],[41,42,41,54],[41,43,41,55,"redirectSystemPath"],[41,61,41,73],[41,62,41,74],[42,18,41,76,"path"],[42,22,41,80],[42,24,41,82,"initialUrl"],[42,34,41,92],[43,18,41,94,"initial"],[43,25,41,101],[43,27,41,103],[44,16,41,108],[44,17,41,109],[44,18,41,110],[45,14,42,24],[46,12,43,20],[46,13,43,21],[46,19,44,25],[46,23,44,29,"initialUrl"],[46,33,44,39],[46,35,44,41],[47,14,45,24,"initialUrl"],[47,24,45,34],[47,27,45,37,"initialUrl"],[47,37,45,47],[47,38,45,48,"then"],[47,42,45,52],[47,43,45,54,"url"],[47,46,45,57],[47,50,45,62],[48,16,46,28],[48,20,46,32,"url"],[48,23,46,35],[48,27,46,39],[48,34,46,46,"nativeLinking"],[48,47,46,59],[48,49,46,61,"redirectSystemPath"],[48,67,46,79],[48,72,46,84],[48,82,46,94],[48,84,46,96],[49,18,47,32],[49,25,47,39,"nativeLinking"],[49,38,47,52],[49,39,47,53,"redirectSystemPath"],[49,57,47,71],[49,58,47,72],[50,20,47,74,"path"],[50,24,47,78],[50,26,47,80,"url"],[50,29,47,83],[51,20,47,85,"initial"],[51,27,47,92],[51,29,47,94],[52,18,47,99],[52,19,47,100],[52,20,47,101],[53,16,48,28],[54,16,49,28],[54,23,49,35,"url"],[54,26,49,38],[55,14,50,24],[55,15,50,25],[55,16,50,26],[56,12,51,20],[57,10,52,16],[58,10,53,16,"hasCachedInitialUrl"],[58,29,53,35],[58,32,53,38],[58,36,53,42],[59,8,54,12],[60,8,55,12],[60,15,55,19,"initialUrl"],[60,25,55,29],[61,6,56,8],[61,7,56,9],[62,6,57,8,"subscribe"],[62,15,57,17],[62,17,57,19],[62,18,57,20],[62,19,57,21],[62,21,57,23,"require"],[62,28,57,23],[62,29,57,23,"_dependencyMap"],[62,43,57,23],[62,66,57,33,"addEventListener"],[62,82,57,49],[62,84,57,51,"nativeLinking"],[62,97,57,64],[62,98,57,65],[63,6,58,8,"getStateFromPath"],[63,22,58,24],[63,24,58,26,"require"],[63,31,58,26],[63,32,58,26,"_dependencyMap"],[63,46,58,26],[63,69,58,36,"getStateFromPath"],[63,85,58,52],[63,86,58,53,"bind"],[63,90,58,57],[63,91,58,58,"store"],[63,96,58,63],[63,97,58,64],[64,6,59,8,"getPathFromState"],[64,22,59,24,"getPathFromState"],[64,23,59,25,"state"],[64,28,59,30],[64,30,59,32,"options"],[64,37,59,39],[64,39,59,41],[65,8,60,12],[65,15,60,20],[65,16,60,21],[65,17,60,22],[65,19,60,24,"require"],[65,26,60,24],[65,27,60,24,"_dependencyMap"],[65,41,60,24],[65,64,60,34,"getPathFromState"],[65,80,60,50],[65,82,60,52,"state"],[65,87,60,57],[65,89,60,59],[66,10,61,16,"screens"],[66,17,61,23],[66,19,61,25],[66,20,61,26],[66,21,61,27],[67,10,62,16],[67,13,62,19],[67,17,62,23],[67,18,62,24,"config"],[67,24,62,30],[68,10,63,16],[68,13,63,19,"options"],[69,8,64,12],[69,9,64,13],[69,10,64,14],[69,14,64,18],[69,17,64,21],[70,6,65,8],[70,7,65,9],[71,6,66,8],[72,6,67,8],[73,6,68,8,"getActionFromState"],[73,24,68,26],[73,26,68,28,"require"],[73,33,68,28],[73,34,68,28,"_dependencyMap"],[73,48,68,28],[73,81,68,37,"getActionFromState"],[74,4,69,4],[74,5,69,5],[75,2,70,0],[76,2,71,0,"exports"],[76,9,71,7],[76,10,71,8,"getLinkingConfig"],[76,26,71,24],[76,29,71,27,"getLinkingConfig"],[76,45,71,43],[77,0,71,44],[77,3]],"functionMap":{"names":["<global>","getNavigationConfig","getLinkingConfig","context.keys.find$argument_0","getInitialURL","initialUrl.then$argument_0","getPathFromState"],"mappings":"AAA;ACO;CDE;AEE;cCM,oDD;QEY;qDCe;yBDK;SFM;QIG;SJM;CFK"}},"type":"js/module"}]}