{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":110,"column":0,"index":3213}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"../../../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":145},"end":{"line":4,"column":69,"index":214}}],"key":"2BYIjnTRSFId8SRJ7sJFxLD1BD4="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":391},"end":{"line":8,"column":40,"index":431}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"../../../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":514},"end":{"line":10,"column":61,"index":575}},{"start":{"line":10,"column":0,"index":514},"end":{"line":10,"column":61,"index":575}}],"key":"6QYiO8x9sAoDBctSRJ19A8sqUNk="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":641},"end":{"line":16,"column":17,"index":747}},{"start":{"line":12,"column":0,"index":641},"end":{"line":16,"column":17,"index":747}},{"start":{"line":12,"column":0,"index":641},"end":{"line":16,"column":17,"index":747}},{"start":{"line":12,"column":0,"index":641},"end":{"line":16,"column":17,"index":747}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I="}},{"name":"../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":68,"index":283}},{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":68,"index":283}},{"start":{"line":5,"column":0,"index":215},"end":{"line":5,"column":68,"index":283}}],"key":"ByXat9lt9duIJLDmSeH0V+tRq1s="}},{"name":"../../handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":87},"end":{"line":3,"column":57,"index":144}}],"key":"Q8MtNj8/mrt1iN8Kay94o881ERE="}},{"name":"../../../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":341},"end":{"line":7,"column":49,"index":390}},{"start":{"line":7,"column":0,"index":341},"end":{"line":7,"column":49,"index":390}},{"start":{"line":7,"column":0,"index":341},"end":{"line":7,"column":49,"index":390}}],"key":"HJ6ReZDVLtCQDFQShsuSOLiCtL0="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.attachHandlers = attachHandlers;\n  var _RNGestureHandlerModule = _interopRequireDefault(require(_dependencyMap[1], \"../../../RNGestureHandlerModule\"));\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  function attachHandlers(_ref) {\n    var preparedGesture = _ref.preparedGesture,\n      gestureConfig = _ref.gestureConfig,\n      gesturesToAttach = _ref.gesturesToAttach,\n      viewTag = _ref.viewTag,\n      webEventHandlersRef = _ref.webEventHandlersRef;\n    gestureConfig.initialize();\n\n    // Use queueMicrotask to extract handlerTags, because all refs should be initialized\n    // when it's ran\n    (0, require(_dependencyMap[3], \"../../../ghQueueMicrotask\").ghQueueMicrotask)(() => {\n      if (!preparedGesture.isMounted) {\n        return;\n      }\n      gestureConfig.prepare();\n    });\n    for (var handler of gesturesToAttach) {\n      (0, require(_dependencyMap[4], \"./utils\").checkGestureCallbacksForWorklets)(handler);\n      _RNGestureHandlerModule.default.createGestureHandler(handler.handlerName, handler.handlerTag, (0, require(_dependencyMap[5], \"../../utils\").filterConfig)(handler.config, require(_dependencyMap[4], \"./utils\").ALLOWED_PROPS));\n      (0, require(_dependencyMap[6], \"../../handlersRegistry\").registerHandler)(handler.handlerTag, handler, handler.config.testId);\n    }\n\n    // Use queueMicrotask to extract handlerTags, because all refs should be initialized\n    // when it's ran\n    (0, require(_dependencyMap[3], \"../../../ghQueueMicrotask\").ghQueueMicrotask)(() => {\n      if (!preparedGesture.isMounted) {\n        return;\n      }\n      for (var _handler of gesturesToAttach) {\n        _RNGestureHandlerModule.default.updateGestureHandler(_handler.handlerTag, (0, require(_dependencyMap[5], \"../../utils\").filterConfig)(_handler.config, require(_dependencyMap[4], \"./utils\").ALLOWED_PROPS, (0, require(_dependencyMap[4], \"./utils\").extractGestureRelations)(_handler)));\n      }\n      (0, require(_dependencyMap[5], \"../../utils\").scheduleFlushOperations)();\n    });\n    for (var gesture of gesturesToAttach) {\n      var actionType = gesture.shouldUseReanimated ? require(_dependencyMap[7], \"../../../ActionType\").ActionType.REANIMATED_WORKLET : require(_dependencyMap[7], \"../../../ActionType\").ActionType.JS_FUNCTION_NEW_API;\n      if (_reactNative.Platform.OS === 'web') {\n        _RNGestureHandlerModule.default.attachGestureHandler(gesture.handlerTag, viewTag, require(_dependencyMap[7], \"../../../ActionType\").ActionType.JS_FUNCTION_OLD_API,\n        // Ignored on web\n        webEventHandlersRef);\n      } else {\n        _RNGestureHandlerModule.default.attachGestureHandler(gesture.handlerTag, viewTag, actionType);\n      }\n    }\n    preparedGesture.attachedGestures = gesturesToAttach;\n    if (preparedGesture.animatedHandlers) {\n      var isAnimatedGesture = g => g.shouldUseReanimated;\n      preparedGesture.animatedHandlers.value = gesturesToAttach.filter(isAnimatedGesture).map(g => g.handlers);\n    }\n  }\n});","lineCount":58,"map":[[7,2,4,0],[7,6,4,0,"_RNGestureHandlerModule"],[7,29,4,0],[7,32,4,0,"_interopRequireDefault"],[7,54,4,0],[7,55,4,0,"require"],[7,62,4,0],[7,63,4,0,"_dependencyMap"],[7,77,4,0],[8,2,8,0],[8,6,8,0,"_reactNative"],[8,18,8,0],[8,21,8,0,"require"],[8,28,8,0],[8,29,8,0,"_dependencyMap"],[8,43,8,0],[9,2,26,7],[9,11,26,16,"attachHandlers"],[9,25,26,30,"attachHandlers"],[9,26,26,30,"_ref"],[9,30,26,30],[9,32,32,25],[10,4,32,25],[10,8,27,2,"preparedGesture"],[10,23,27,17],[10,26,27,17,"_ref"],[10,30,27,17],[10,31,27,2,"preparedGesture"],[10,46,27,17],[11,6,28,2,"gestureConfig"],[11,19,28,15],[11,22,28,15,"_ref"],[11,26,28,15],[11,27,28,2,"gestureConfig"],[11,40,28,15],[12,6,29,2,"gesturesToAttach"],[12,22,29,18],[12,25,29,18,"_ref"],[12,29,29,18],[12,30,29,2,"gesturesToAttach"],[12,46,29,18],[13,6,30,2,"viewTag"],[13,13,30,9],[13,16,30,9,"_ref"],[13,20,30,9],[13,21,30,2,"viewTag"],[13,28,30,9],[14,6,31,2,"webEventHandlersRef"],[14,25,31,21],[14,28,31,21,"_ref"],[14,32,31,21],[14,33,31,2,"webEventHandlersRef"],[14,52,31,21],[15,4,33,2,"gestureConfig"],[15,17,33,15],[15,18,33,16,"initialize"],[15,28,33,26],[15,29,33,27],[15,30,33,28],[17,4,35,2],[18,4,36,2],[19,4,37,2],[19,8,37,2,"ghQueueMicrotask"],[19,34,37,2],[19,35,37,2,"ghQueueMicrotask"],[19,80,37,18],[19,82,37,19],[19,88,37,25],[20,6,38,4],[20,10,38,8],[20,11,38,9,"preparedGesture"],[20,26,38,24],[20,27,38,25,"isMounted"],[20,36,38,34],[20,38,38,36],[21,8,39,6],[22,6,40,4],[23,6,41,4,"gestureConfig"],[23,19,41,17],[23,20,41,18,"prepare"],[23,27,41,25],[23,28,41,26],[23,29,41,27],[24,4,42,2],[24,5,42,3],[24,6,42,4],[25,4,44,2],[25,9,44,7],[25,13,44,13,"handler"],[25,20,44,20],[25,24,44,24,"gesturesToAttach"],[25,40,44,40],[25,42,44,42],[26,6,45,4],[26,10,45,4,"checkGestureCallbacksForWorklets"],[26,36,45,4],[26,37,45,4,"checkGestureCallbacksForWorklets"],[26,80,45,36],[26,82,45,37,"handler"],[26,89,45,44],[26,90,45,45],[27,6,46,4,"RNGestureHandlerModule"],[27,37,46,26],[27,38,46,27,"createGestureHandler"],[27,58,46,47],[27,59,47,6,"handler"],[27,66,47,13],[27,67,47,14,"handlerName"],[27,78,47,25],[27,80,48,6,"handler"],[27,87,48,13],[27,88,48,14,"handlerTag"],[27,98,48,24],[27,100,49,6],[27,104,49,6,"filterConfig"],[27,130,49,6],[27,131,49,6,"filterConfig"],[27,158,49,18],[27,160,49,19,"handler"],[27,167,49,26],[27,168,49,27,"config"],[27,174,49,33],[27,176,49,35,"ALLOWED_PROPS"],[27,202,49,35],[27,203,49,35,"ALLOWED_PROPS"],[27,227,49,48],[27,228,50,4],[27,229,50,5],[28,6,52,4],[28,10,52,4,"registerHandler"],[28,36,52,4],[28,37,52,4,"registerHandler"],[28,78,52,19],[28,80,52,20,"handler"],[28,87,52,27],[28,88,52,28,"handlerTag"],[28,98,52,38],[28,100,52,40,"handler"],[28,107,52,47],[28,109,52,49,"handler"],[28,116,52,56],[28,117,52,57,"config"],[28,123,52,63],[28,124,52,64,"testId"],[28,130,52,70],[28,131,52,71],[29,4,53,2],[31,4,55,2],[32,4,56,2],[33,4,57,2],[33,8,57,2,"ghQueueMicrotask"],[33,34,57,2],[33,35,57,2,"ghQueueMicrotask"],[33,80,57,18],[33,82,57,19],[33,88,57,25],[34,6,58,4],[34,10,58,8],[34,11,58,9,"preparedGesture"],[34,26,58,24],[34,27,58,25,"isMounted"],[34,36,58,34],[34,38,58,36],[35,8,59,6],[36,6,60,4],[37,6,61,4],[37,11,61,9],[37,15,61,15,"handler"],[37,23,61,22],[37,27,61,26,"gesturesToAttach"],[37,43,61,42],[37,45,61,44],[38,8,62,6,"RNGestureHandlerModule"],[38,39,62,28],[38,40,62,29,"updateGestureHandler"],[38,60,62,49],[38,61,63,8,"handler"],[38,69,63,15],[38,70,63,16,"handlerTag"],[38,80,63,26],[38,82,64,8],[38,86,64,8,"filterConfig"],[38,112,64,8],[38,113,64,8,"filterConfig"],[38,140,64,20],[38,142,65,10,"handler"],[38,150,65,17],[38,151,65,18,"config"],[38,157,65,24],[38,159,66,10,"ALLOWED_PROPS"],[38,185,66,10],[38,186,66,10,"ALLOWED_PROPS"],[38,210,66,23],[38,212,67,10],[38,216,67,10,"extractGestureRelations"],[38,242,67,10],[38,243,67,10,"extractGestureRelations"],[38,277,67,33],[38,279,67,34,"handler"],[38,287,67,41],[38,288,68,8],[38,289,69,6],[38,290,69,7],[39,6,70,4],[40,6,72,4],[40,10,72,4,"scheduleFlushOperations"],[40,36,72,4],[40,37,72,4,"scheduleFlushOperations"],[40,75,72,27],[40,77,72,28],[40,78,72,29],[41,4,73,2],[41,5,73,3],[41,6,73,4],[42,4,75,2],[42,9,75,7],[42,13,75,13,"gesture"],[42,20,75,20],[42,24,75,24,"gesturesToAttach"],[42,40,75,40],[42,42,75,42],[43,6,76,4],[43,10,76,10,"actionType"],[43,20,76,20],[43,23,76,23,"gesture"],[43,30,76,30],[43,31,76,31,"shouldUseReanimated"],[43,50,76,50],[43,53,77,8,"ActionType"],[43,79,77,8],[43,80,77,8,"ActionType"],[43,113,77,18],[43,114,77,19,"REANIMATED_WORKLET"],[43,132,77,37],[43,135,78,8,"ActionType"],[43,161,78,8],[43,162,78,8,"ActionType"],[43,195,78,18],[43,196,78,19,"JS_FUNCTION_NEW_API"],[43,215,78,38],[44,6,80,4],[44,10,80,8,"Platform"],[44,31,80,16],[44,32,80,17,"OS"],[44,34,80,19],[44,39,80,24],[44,44,80,29],[44,46,80,31],[45,8,82,8,"RNGestureHandlerModule"],[45,39,82,30],[45,40,82,31,"attachGestureHandler"],[45,60,82,51],[45,61,84,8,"gesture"],[45,68,84,15],[45,69,84,16,"handlerTag"],[45,79,84,26],[45,81,85,8,"viewTag"],[45,88,85,15],[45,90,86,8,"ActionType"],[45,116,86,8],[45,117,86,8,"ActionType"],[45,150,86,18],[45,151,86,19,"JS_FUNCTION_OLD_API"],[45,170,86,38],[46,8,86,40],[47,8,87,8,"webEventHandlersRef"],[47,27,88,6],[47,28,88,7],[48,6,89,4],[48,7,89,5],[48,13,89,11],[49,8,90,6,"RNGestureHandlerModule"],[49,39,90,28],[49,40,90,29,"attachGestureHandler"],[49,60,90,49],[49,61,91,8,"gesture"],[49,68,91,15],[49,69,91,16,"handlerTag"],[49,79,91,26],[49,81,92,8,"viewTag"],[49,88,92,15],[49,90,93,8,"actionType"],[49,100,94,6],[49,101,94,7],[50,6,95,4],[51,4,96,2],[52,4,98,2,"preparedGesture"],[52,19,98,17],[52,20,98,18,"attachedGestures"],[52,36,98,34],[52,39,98,37,"gesturesToAttach"],[52,55,98,53],[53,4,100,2],[53,8,100,6,"preparedGesture"],[53,23,100,21],[53,24,100,22,"animatedHandlers"],[53,40,100,38],[53,42,100,40],[54,6,101,4],[54,10,101,10,"isAnimatedGesture"],[54,27,101,27],[54,30,101,31,"g"],[54,31,101,45],[54,35,101,50,"g"],[54,36,101,51],[54,37,101,52,"shouldUseReanimated"],[54,56,101,71],[55,6,103,4,"preparedGesture"],[55,21,103,19],[55,22,103,20,"animatedHandlers"],[55,38,103,36],[55,39,103,37,"value"],[55,44,103,42],[55,47,103,45,"gesturesToAttach"],[55,63,103,61],[55,64,104,7,"filter"],[55,70,104,13],[55,71,104,14,"isAnimatedGesture"],[55,88,104,31],[55,89,104,32],[55,90,105,7,"map"],[55,93,105,10],[55,94,105,12,"g"],[55,95,105,13],[55,99,105,18,"g"],[55,100,105,19],[55,101,105,20,"handlers"],[55,109,105,28],[55,110,107,7],[56,4,108,2],[57,2,109,0],[58,0,109,1],[58,3]],"functionMap":{"names":["<global>","attachHandlers","ghQueueMicrotask$argument_0","isAnimatedGesture","gesturesToAttach.filter.map$argument_0"],"mappings":"AAA;OCyB;mBCW;GDK;mBCe;GDgB;8BE4B,yCF;WGI,iBH;CDI"}},"type":"js/module"}]}