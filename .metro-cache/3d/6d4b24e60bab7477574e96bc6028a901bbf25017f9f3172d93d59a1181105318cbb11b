{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":186,"column":0,"index":7034}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":186,"column":0,"index":7034}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1026},"end":{"line":23,"column":54,"index":1080}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"../../gestureHandlerCommon","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":707},"end":{"line":19,"column":36,"index":818}}],"key":"iYkm+MgDTErKT5jbMC97JfuzH7k="}},{"name":"../../TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":501},"end":{"line":13,"column":65,"index":566}}],"key":"ZqoHIcC0SF6bf3AIHltJPu1k9xI="}},{"name":"../../PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":394},"end":{"line":12,"column":33,"index":500}},{"start":{"line":9,"column":0,"index":394},"end":{"line":12,"column":33,"index":500}}],"key":"bk07O1d6H26279U6oqqnjaS7c4c="}},{"name":"../../LongPressGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":316},"end":{"line":8,"column":77,"index":393}}],"key":"xLOe4E3z7HzpJ/yq6aTNrEbuZio="}},{"name":"../../ForceTouchGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":236},"end":{"line":7,"column":79,"index":315}}],"key":"Zs82FqJFIcjv50A58P90bQbMZ6s="}},{"name":"../../FlingGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":166},"end":{"line":6,"column":69,"index":235}}],"key":"m7drCniziiNjEu9Grhe6bV/AFd0="}},{"name":"../hoverGesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":567},"end":{"line":14,"column":59,"index":626}}],"key":"2DA6Vfuec14INlrI/GwdOE0FAK4="}},{"name":"../../NativeViewGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":627},"end":{"line":15,"column":79,"index":706}}],"key":"FiQaORn3aiHBJrGlJ2FeE26dr38="}},{"name":"../gesture","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":98},"end":{"line":4,"column":66,"index":164}}],"key":"tAi+3DTq2/XlM2rT1I9X7ektuV0="}},{"name":"../../../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":42},"end":{"line":3,"column":55,"index":97}},{"start":{"line":3,"column":0,"index":42},"end":{"line":3,"column":55,"index":97}},{"start":{"line":3,"column":0,"index":42},"end":{"line":3,"column":55,"index":97}}],"key":"4wo4OYT4MSo2InL8kiWmZxvepwE="}},{"name":"../reanimatedWrapper","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1081},"end":{"line":24,"column":50,"index":1131}}],"key":"55E8XkeO+dzLnJh3bfoVrgRwD58="}},{"name":"../../../getReactNativeVersion","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":904},"end":{"line":21,"column":71,"index":975}}],"key":"LRN+jz/5KqOYFnR82ORUXrazSTg="}},{"name":"../../../RNRenderer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":976},"end":{"line":22,"column":49,"index":1025}}],"key":"dd5GIUVDNjn2BlVM36KIcGPscVA="}},{"name":"../eventReceiver","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":25,"column":0,"index":1132},"end":{"line":25,"column":57,"index":1189}},{"start":{"line":25,"column":0,"index":1132},"end":{"line":25,"column":57,"index":1189}}],"key":"5nSvdaEKN+h/ZTz2T/BGCtOX48A="}},{"name":"../../../EnableNewWebImplementation","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":819},"end":{"line":20,"column":84,"index":903}}],"key":"eaIoOU9/v4mL1aA6FJZKxHzRNGE="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ALLOWED_PROPS = void 0;\n  exports.checkGestureCallbacksForWorklets = checkGestureCallbacksForWorklets;\n  exports.extractGestureRelations = extractGestureRelations;\n  exports.useForceRender = useForceRender;\n  exports.useWebEventHandlers = useWebEventHandlers;\n  exports.validateDetectorChildren = validateDetectorChildren;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _reactNative = require(_dependencyMap[2], \"react-native\");\n  var _react = require(_dependencyMap[3], \"react\");\n  var ALLOWED_PROPS = exports.ALLOWED_PROPS = [...require(_dependencyMap[4], \"../../gestureHandlerCommon\").baseGestureHandlerWithDetectorProps, ...require(_dependencyMap[5], \"../../TapGestureHandler\").tapGestureHandlerProps, ...require(_dependencyMap[6], \"../../PanGestureHandler\").panGestureHandlerProps, ...require(_dependencyMap[6], \"../../PanGestureHandler\").panGestureHandlerCustomNativeProps, ...require(_dependencyMap[7], \"../../LongPressGestureHandler\").longPressGestureHandlerProps, ...require(_dependencyMap[8], \"../../ForceTouchGestureHandler\").forceTouchGestureHandlerProps, ...require(_dependencyMap[9], \"../../FlingGestureHandler\").flingGestureHandlerProps, ...require(_dependencyMap[10], \"../hoverGesture\").hoverGestureHandlerProps, ...require(_dependencyMap[11], \"../../NativeViewGestureHandler\").nativeViewGestureHandlerProps];\n  function convertToHandlerTag(ref) {\n    if (typeof ref === 'number') {\n      return ref;\n    } else if (ref instanceof require(_dependencyMap[12], \"../gesture\").BaseGesture) {\n      return ref.handlerTag;\n    } else {\n      // @ts-ignore in this case it should be a ref either to gesture object or\n      // a gesture handler component, in both cases handlerTag property exists\n      return ref.current?.handlerTag ?? -1;\n    }\n  }\n  function extractValidHandlerTags(interactionGroup) {\n    return interactionGroup?.map(convertToHandlerTag)?.filter(tag => tag > 0) ?? [];\n  }\n  function extractGestureRelations(gesture) {\n    var requireToFail = extractValidHandlerTags(gesture.config.requireToFail);\n    var simultaneousWith = extractValidHandlerTags(gesture.config.simultaneousWith);\n    var blocksHandlers = extractValidHandlerTags(gesture.config.blocksHandlers);\n    return {\n      waitFor: requireToFail,\n      simultaneousHandlers: simultaneousWith,\n      blocksHandlers: blocksHandlers\n    };\n  }\n  function checkGestureCallbacksForWorklets(gesture) {\n    if (!__DEV__) {\n      return;\n    }\n    // If a gesture is explicitly marked to run on the JS thread there is no need to check\n    // if callbacks are worklets as the user is aware they will be ran on the JS thread\n    if (gesture.config.runOnJS) {\n      return;\n    }\n    var areSomeNotWorklets = gesture.handlers.isWorklet.includes(false);\n    var areSomeWorklets = gesture.handlers.isWorklet.includes(true);\n\n    // If some of the callbacks are worklets and some are not, and the gesture is not\n    // explicitly marked with `.runOnJS(true)` show an error\n    if (areSomeNotWorklets && areSomeWorklets) {\n      console.error((0, require(_dependencyMap[13], \"../../../utils\").tagMessage)(`Some of the callbacks in the gesture are worklets and some are not. Either make sure that all calbacks are marked as 'worklet' if you wish to run them on the UI thread or use '.runOnJS(true)' modifier on the gesture explicitly to run all callbacks on the JS thread.`));\n    }\n    if (require(_dependencyMap[14], \"../reanimatedWrapper\").Reanimated === undefined) {\n      // If Reanimated is not available, we can't run worklets, so we shouldn't show the warning\n      return;\n    }\n    var areAllNotWorklets = !areSomeWorklets && areSomeNotWorklets;\n    // If none of the callbacks are worklets and the gesture is not explicitly marked with\n    // `.runOnJS(true)` show a warning\n    if (areAllNotWorklets && !(0, require(_dependencyMap[13], \"../../../utils\").isJestEnv)()) {\n      console.warn((0, require(_dependencyMap[13], \"../../../utils\").tagMessage)(`None of the callbacks in the gesture are worklets. If you wish to run them on the JS thread use '.runOnJS(true)' modifier on the gesture to make this explicit. Otherwise, mark the callbacks as 'worklet' to run them on the UI thread.`));\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function validateDetectorChildren(ref) {\n    // Finds the first native view under the Wrap component and traverses the fiber tree upwards\n    // to check whether there is more than one native view as a pseudo-direct child of GestureDetector\n    // i.e. this is not ok:\n    //            Wrap\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    //\n    // but this is fine:\n    //            Wrap\n    //             |\n    //         NativeView\n    //             |\n    //            / \\\n    //           /   \\\n    //          /     \\\n    //         /       \\\n    //   NativeView  NativeView\n    if (__DEV__ && _reactNative.Platform.OS !== 'web') {\n      var REACT_NATIVE_VERSION = (0, require(_dependencyMap[15], \"../../../getReactNativeVersion\").getReactNativeVersion)();\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var wrapType = REACT_NATIVE_VERSION.minor > 63 || REACT_NATIVE_VERSION.major > 0 ?\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternals.elementType :\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      ref._reactInternalFiber.elementType;\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      var instance = require(_dependencyMap[16], \"../../../RNRenderer\").RNRenderer.findHostInstance_DEPRECATED(ref)._internalFiberInstanceHandleDEV;\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      while (instance && instance.elementType !== wrapType) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        if (instance.sibling) {\n          throw new Error('GestureDetector has more than one native view as its children. This can happen if you are using a custom component that renders multiple views, like React.Fragment. You should wrap content of GestureDetector with a <View> or <Animated.View>.');\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n        instance = instance.return;\n      }\n    }\n  }\n  function useForceRender() {\n    var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      renderState = _useState2[0],\n      setRenderState = _useState2[1];\n    var forceRender = (0, _react.useCallback)(() => {\n      setRenderState(!renderState);\n    }, [renderState, setRenderState]);\n    return forceRender;\n  }\n  function useWebEventHandlers() {\n    return (0, _react.useRef)({\n      onGestureHandlerEvent: e => {\n        (0, require(_dependencyMap[17], \"../eventReceiver\").onGestureHandlerEvent)(e.nativeEvent);\n      },\n      onGestureHandlerStateChange: (0, require(_dependencyMap[18], \"../../../EnableNewWebImplementation\").isNewWebImplementationEnabled)() ? e => {\n        (0, require(_dependencyMap[17], \"../eventReceiver\").onGestureHandlerEvent)(e.nativeEvent);\n      } : undefined\n    });\n  }\n});","lineCount":135,"map":[[13,2,1,0],[13,6,1,0,"_reactNative"],[13,18,1,0],[13,21,1,0,"require"],[13,28,1,0],[13,29,1,0,"_dependencyMap"],[13,43,1,0],[14,2,23,0],[14,6,23,0,"_react"],[14,12,23,0],[14,15,23,0,"require"],[14,22,23,0],[14,23,23,0,"_dependencyMap"],[14,37,23,0],[15,2,28,7],[15,6,28,13,"ALLOWED_PROPS"],[15,19,28,26],[15,22,28,26,"exports"],[15,29,28,26],[15,30,28,26,"ALLOWED_PROPS"],[15,43,28,26],[15,46,28,29],[15,47,29,2],[15,50,29,5,"baseGestureHandlerWithDetectorProps"],[15,76,29,5],[15,77,29,5,"baseGestureHandlerWithDetectorProps"],[15,142,29,40],[15,144,30,2],[15,147,30,5,"tapGestureHandlerProps"],[15,173,30,5],[15,174,30,5,"tapGestureHandlerProps"],[15,223,30,27],[15,225,31,2],[15,228,31,5,"panGestureHandlerProps"],[15,254,31,5],[15,255,31,5,"panGestureHandlerProps"],[15,304,31,27],[15,306,32,2],[15,309,32,5,"panGestureHandlerCustomNativeProps"],[15,335,32,5],[15,336,32,5,"panGestureHandlerCustomNativeProps"],[15,397,32,39],[15,399,33,2],[15,402,33,5,"longPressGestureHandlerProps"],[15,428,33,5],[15,429,33,5,"longPressGestureHandlerProps"],[15,490,33,33],[15,492,34,2],[15,495,34,5,"forceTouchGestureHandlerProps"],[15,521,34,5],[15,522,34,5,"forceTouchGestureHandlerProps"],[15,585,34,34],[15,587,35,2],[15,590,35,5,"flingGestureHandlerProps"],[15,616,35,5],[15,617,35,5,"flingGestureHandlerProps"],[15,670,35,29],[15,672,36,2],[15,675,36,5,"hoverGestureHandlerProps"],[15,702,36,5],[15,703,36,5,"hoverGestureHandlerProps"],[15,746,36,29],[15,748,37,2],[15,751,37,5,"nativeViewGestureHandlerProps"],[15,778,37,5],[15,779,37,5,"nativeViewGestureHandlerProps"],[15,842,37,34],[15,843,38,1],[16,2,40,0],[16,11,40,9,"convertToHandlerTag"],[16,30,40,28,"convertToHandlerTag"],[16,31,40,29,"ref"],[16,34,40,44],[16,36,40,54],[17,4,41,2],[17,8,41,6],[17,15,41,13,"ref"],[17,18,41,16],[17,23,41,21],[17,31,41,29],[17,33,41,31],[18,6,42,4],[18,13,42,11,"ref"],[18,16,42,14],[19,4,43,2],[19,5,43,3],[19,11,43,9],[19,15,43,13,"ref"],[19,18,43,16],[19,30,43,28,"BaseGesture"],[19,57,43,28],[19,58,43,28,"BaseGesture"],[19,83,43,39],[19,85,43,41],[20,6,44,4],[20,13,44,11,"ref"],[20,16,44,14],[20,17,44,15,"handlerTag"],[20,27,44,25],[21,4,45,2],[21,5,45,3],[21,11,45,9],[22,6,46,4],[23,6,47,4],[24,6,48,4],[24,13,48,11,"ref"],[24,16,48,14],[24,17,48,15,"current"],[24,24,48,22],[24,26,48,24,"handlerTag"],[24,36,48,34],[24,40,48,38],[24,41,48,39],[24,42,48,40],[25,4,49,2],[26,2,50,0],[27,2,52,0],[27,11,52,9,"extractValidHandlerTags"],[27,34,52,32,"extractValidHandlerTags"],[27,35,52,33,"interactionGroup"],[27,51,52,75],[27,53,52,77],[28,4,53,2],[28,11,54,4,"interactionGroup"],[28,27,54,20],[28,29,54,22,"map"],[28,32,54,25],[28,33,54,26,"convertToHandlerTag"],[28,52,54,45],[28,53,54,46],[28,55,54,48,"filter"],[28,61,54,54],[28,62,54,56,"tag"],[28,65,54,59],[28,69,54,64,"tag"],[28,72,54,67],[28,75,54,70],[28,76,54,71],[28,77,54,72],[28,81,54,76],[28,83,54,78],[29,2,56,0],[30,2,58,7],[30,11,58,16,"extractGestureRelations"],[30,34,58,39,"extractGestureRelations"],[30,35,58,40,"gesture"],[30,42,58,60],[30,44,58,62],[31,4,59,2],[31,8,59,8,"requireToFail"],[31,21,59,21],[31,24,59,24,"extractValidHandlerTags"],[31,47,59,47],[31,48,59,48,"gesture"],[31,55,59,55],[31,56,59,56,"config"],[31,62,59,62],[31,63,59,63,"requireToFail"],[31,76,59,76],[31,77,59,77],[32,4,60,2],[32,8,60,8,"simultaneousWith"],[32,24,60,24],[32,27,60,27,"extractValidHandlerTags"],[32,50,60,50],[32,51,61,4,"gesture"],[32,58,61,11],[32,59,61,12,"config"],[32,65,61,18],[32,66,61,19,"simultaneousWith"],[32,82,62,2],[32,83,62,3],[33,4,63,2],[33,8,63,8,"blocksHandlers"],[33,22,63,22],[33,25,63,25,"extractValidHandlerTags"],[33,48,63,48],[33,49,63,49,"gesture"],[33,56,63,56],[33,57,63,57,"config"],[33,63,63,63],[33,64,63,64,"blocksHandlers"],[33,78,63,78],[33,79,63,79],[34,4,65,2],[34,11,65,9],[35,6,66,4,"waitFor"],[35,13,66,11],[35,15,66,13,"requireToFail"],[35,28,66,26],[36,6,67,4,"simultaneousHandlers"],[36,26,67,24],[36,28,67,26,"simultaneousWith"],[36,44,67,42],[37,6,68,4,"blocksHandlers"],[37,20,68,18],[37,22,68,20,"blocksHandlers"],[38,4,69,2],[38,5,69,3],[39,2,70,0],[40,2,72,7],[40,11,72,16,"checkGestureCallbacksForWorklets"],[40,43,72,48,"checkGestureCallbacksForWorklets"],[40,44,72,49,"gesture"],[40,51,72,69],[40,53,72,71],[41,4,73,2],[41,8,73,6],[41,9,73,7,"__DEV__"],[41,16,73,14],[41,18,73,16],[42,6,74,4],[43,4,75,2],[44,4,76,2],[45,4,77,2],[46,4,78,2],[46,8,78,6,"gesture"],[46,15,78,13],[46,16,78,14,"config"],[46,22,78,20],[46,23,78,21,"runOnJS"],[46,30,78,28],[46,32,78,30],[47,6,79,4],[48,4,80,2],[49,4,82,2],[49,8,82,8,"areSomeNotWorklets"],[49,26,82,26],[49,29,82,29,"gesture"],[49,36,82,36],[49,37,82,37,"handlers"],[49,45,82,45],[49,46,82,46,"isWorklet"],[49,55,82,55],[49,56,82,56,"includes"],[49,64,82,64],[49,65,82,65],[49,70,82,70],[49,71,82,71],[50,4,83,2],[50,8,83,8,"areSomeWorklets"],[50,23,83,23],[50,26,83,26,"gesture"],[50,33,83,33],[50,34,83,34,"handlers"],[50,42,83,42],[50,43,83,43,"isWorklet"],[50,52,83,52],[50,53,83,53,"includes"],[50,61,83,61],[50,62,83,62],[50,66,83,66],[50,67,83,67],[52,4,85,2],[53,4,86,2],[54,4,87,2],[54,8,87,6,"areSomeNotWorklets"],[54,26,87,24],[54,30,87,28,"areSomeWorklets"],[54,45,87,43],[54,47,87,45],[55,6,88,4,"console"],[55,13,88,11],[55,14,88,12,"error"],[55,19,88,17],[55,20,89,6],[55,24,89,6,"tagMessage"],[55,51,89,6],[55,52,89,6,"tagMessage"],[55,80,89,16],[55,82,90,8],[55,349,91,6],[55,350,92,4],[55,351,92,5],[56,4,93,2],[57,4,95,2],[57,8,95,6,"Reanimated"],[57,35,95,6],[57,36,95,6,"Reanimated"],[57,70,95,16],[57,75,95,21,"undefined"],[57,84,95,30],[57,86,95,32],[58,6,96,4],[59,6,97,4],[60,4,98,2],[61,4,100,2],[61,8,100,8,"areAllNotWorklets"],[61,25,100,25],[61,28,100,28],[61,29,100,29,"areSomeWorklets"],[61,44,100,44],[61,48,100,48,"areSomeNotWorklets"],[61,66,100,66],[62,4,101,2],[63,4,102,2],[64,4,103,2],[64,8,103,6,"areAllNotWorklets"],[64,25,103,23],[64,29,103,27],[64,30,103,28],[64,34,103,28,"isJestEnv"],[64,61,103,28],[64,62,103,28,"isJestEnv"],[64,89,103,37],[64,91,103,38],[64,92,103,39],[64,94,103,41],[65,6,104,4,"console"],[65,13,104,11],[65,14,104,12,"warn"],[65,18,104,16],[65,19,105,6],[65,23,105,6,"tagMessage"],[65,50,105,6],[65,51,105,6,"tagMessage"],[65,79,105,16],[65,81,106,8],[65,315,107,6],[65,316,108,4],[65,317,108,5],[66,4,109,2],[67,2,110,0],[69,2,112,0],[70,2,113,7],[70,11,113,16,"validateDetectorChildren"],[70,35,113,40,"validateDetectorChildren"],[70,36,113,41,"ref"],[70,39,113,49],[70,41,113,51],[71,4,114,2],[72,4,115,2],[73,4,116,2],[74,4,117,2],[75,4,118,2],[76,4,119,2],[77,4,120,2],[78,4,121,2],[79,4,122,2],[80,4,123,2],[81,4,124,2],[82,4,125,2],[83,4,126,2],[84,4,127,2],[85,4,128,2],[86,4,129,2],[87,4,130,2],[88,4,131,2],[89,4,132,2],[90,4,133,2],[91,4,134,2],[92,4,135,2],[92,8,135,6,"__DEV__"],[92,15,135,13],[92,19,135,17,"Platform"],[92,40,135,25],[92,41,135,26,"OS"],[92,43,135,28],[92,48,135,33],[92,53,135,38],[92,55,135,40],[93,6,136,4],[93,10,136,10,"REACT_NATIVE_VERSION"],[93,30,136,30],[93,33,136,33],[93,37,136,33,"getReactNativeVersion"],[93,64,136,33],[93,65,136,33,"getReactNativeVersion"],[93,120,136,54],[93,122,136,55],[93,123,136,56],[94,6,137,4],[95,6,138,4],[95,10,138,10,"wrapType"],[95,18,138,18],[95,21,139,6,"REACT_NATIVE_VERSION"],[95,41,139,26],[95,42,139,27,"minor"],[95,47,139,32],[95,50,139,35],[95,52,139,37],[95,56,139,41,"REACT_NATIVE_VERSION"],[95,76,139,61],[95,77,139,62,"major"],[95,82,139,67],[95,85,139,70],[95,86,139,71],[96,6,140,10],[97,6,141,10,"ref"],[97,9,141,13],[97,10,141,14,"_reactInternals"],[97,25,141,29],[97,26,141,30,"elementType"],[97,37,141,41],[98,6,142,10],[99,6,143,10,"ref"],[99,9,143,13],[99,10,143,14,"_reactInternalFiber"],[99,29,143,33],[99,30,143,34,"elementType"],[99,41,143,45],[100,6,144,4],[101,6,145,4],[101,10,145,8,"instance"],[101,18,145,16],[101,21,146,6,"RNRenderer"],[101,48,146,6],[101,49,146,6,"RNRenderer"],[101,82,146,16],[101,83,146,17,"findHostInstance_DEPRECATED"],[101,110,146,44],[101,111,147,8,"ref"],[101,114,148,6],[101,115,148,7],[101,116,148,8,"_internalFiberInstanceHandleDEV"],[101,147,148,39],[103,6,150,4],[104,6,151,4],[104,13,151,11,"instance"],[104,21,151,19],[104,25,151,23,"instance"],[104,33,151,31],[104,34,151,32,"elementType"],[104,45,151,43],[104,50,151,48,"wrapType"],[104,58,151,56],[104,60,151,58],[105,8,152,6],[106,8,153,6],[106,12,153,10,"instance"],[106,20,153,18],[106,21,153,19,"sibling"],[106,28,153,26],[106,30,153,28],[107,10,154,8],[107,16,154,14],[107,20,154,18,"Error"],[107,25,154,23],[107,26,155,10],[107,269,156,8],[107,270,156,9],[108,8,157,6],[110,8,159,6],[111,8,160,6,"instance"],[111,16,160,14],[111,19,160,17,"instance"],[111,27,160,25],[111,28,160,26,"return"],[111,34,160,32],[112,6,161,4],[113,4,162,2],[114,2,163,0],[115,2,165,7],[115,11,165,16,"useForceRender"],[115,25,165,30,"useForceRender"],[115,26,165,30],[115,28,165,33],[116,4,166,2],[116,8,166,2,"_useState"],[116,17,166,2],[116,20,166,40],[116,24,166,40,"useState"],[116,39,166,48],[116,41,166,49],[116,46,166,54],[116,47,166,55],[117,6,166,55,"_useState2"],[117,16,166,55],[117,23,166,55,"_slicedToArray2"],[117,38,166,55],[117,39,166,55,"default"],[117,46,166,55],[117,48,166,55,"_useState"],[117,57,166,55],[118,6,166,9,"renderState"],[118,17,166,20],[118,20,166,20,"_useState2"],[118,30,166,20],[119,6,166,22,"setRenderState"],[119,20,166,36],[119,23,166,36,"_useState2"],[119,33,166,36],[120,4,167,2],[120,8,167,8,"forceRender"],[120,19,167,19],[120,22,167,22],[120,26,167,22,"useCallback"],[120,44,167,33],[120,46,167,34],[120,52,167,40],[121,6,168,4,"setRenderState"],[121,20,168,18],[121,21,168,19],[121,22,168,20,"renderState"],[121,33,168,31],[121,34,168,32],[122,4,169,2],[122,5,169,3],[122,7,169,5],[122,8,169,6,"renderState"],[122,19,169,17],[122,21,169,19,"setRenderState"],[122,35,169,33],[122,36,169,34],[122,37,169,35],[123,4,171,2],[123,11,171,9,"forceRender"],[123,22,171,20],[124,2,172,0],[125,2,174,7],[125,11,174,16,"useWebEventHandlers"],[125,30,174,35,"useWebEventHandlers"],[125,31,174,35],[125,33,174,38],[126,4,175,2],[126,11,175,9],[126,15,175,9,"useRef"],[126,28,175,15],[126,30,175,33],[127,6,176,4,"onGestureHandlerEvent"],[127,27,176,25],[127,29,176,28,"e"],[127,30,176,63],[127,34,176,68],[128,8,177,6],[128,12,177,6,"onGestureHandlerEvent"],[128,39,177,6],[128,40,177,6,"onGestureHandlerEvent"],[128,81,177,27],[128,83,177,28,"e"],[128,84,177,29],[128,85,177,30,"nativeEvent"],[128,96,177,41],[128,97,177,42],[129,6,178,4],[129,7,178,5],[130,6,179,4,"onGestureHandlerStateChange"],[130,33,179,31],[130,35,179,33],[130,39,179,33,"isNewWebImplementationEnabled"],[130,66,179,33],[130,67,179,33,"isNewWebImplementationEnabled"],[130,135,179,62],[130,137,179,63],[130,138,179,64],[130,141,180,9,"e"],[130,142,180,44],[130,146,180,49],[131,8,181,10],[131,12,181,10,"onGestureHandlerEvent"],[131,39,181,10],[131,40,181,10,"onGestureHandlerEvent"],[131,81,181,31],[131,83,181,32,"e"],[131,84,181,33],[131,85,181,34,"nativeEvent"],[131,96,181,45],[131,97,181,46],[132,6,182,8],[132,7,182,9],[132,10,183,8,"undefined"],[133,4,184,2],[133,5,184,3],[133,6,184,4],[134,2,185,0],[135,0,185,1],[135,3]],"functionMap":{"names":["<global>","convertToHandlerTag","extractValidHandlerTags","interactionGroup.map.filter$argument_0","extractGestureRelations","checkGestureCallbacksForWorklets","validateDetectorChildren","useForceRender","forceRender","useWebEventHandlers","useRef$argument_0.onGestureHandlerEvent","<anonymous>"],"mappings":"AAA;ACuC;CDU;AEE;uDCE,gBD;CFE;OIE;CJY;OKE;CLsC;OMG;CNkD;OOE;kCCE;GDE;CPG;OSE;2BCE;KDE;QEE;SFE;CTG"}},"type":"js/module"}]}