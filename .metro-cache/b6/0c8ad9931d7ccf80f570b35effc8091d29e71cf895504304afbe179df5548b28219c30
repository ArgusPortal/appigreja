{"dependencies":[{"name":"@babel/runtime/helpers/toArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":24,"column":46,"index":1210}}],"key":"yxbT34yjmkVZuhOKwnPlwW2nTdA="}},{"name":"escape-string-regexp","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":49,"index":178},"end":{"line":7,"column":80,"index":209}}],"key":"14QBo/6I2jfYu7Ct29OWBvp5ENM="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toArray = require(_dependencyMap[0], \"@babel/runtime/helpers/toArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.extractPathFromURL = extractPathFromURL;\n  var _escapeStringRegexp = _interopRequireDefault(require(_dependencyMap[1], \"escape-string-regexp\"));\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function extractPathFromURL(prefixes, url) {\n    for (var prefix of prefixes) {\n      var protocol = prefix.match(/^[^:]+:/)?.[0] ?? '';\n      var host = prefix.replace(new RegExp(`^${(0, _escapeStringRegexp.default)(protocol)}`), '').replace(/\\/+/g, '/') // Replace multiple slash (//) with single ones\n      .replace(/^\\//, ''); // Remove extra leading slash\n\n      var prefixRegex = new RegExp(`^${(0, _escapeStringRegexp.default)(protocol)}(/)*${host.split('.').map(it => it === '*' ? '[^/]+' : (0, _escapeStringRegexp.default)(it)).join('\\\\.')}`);\n      var _url$split = url.split('?'),\n        _url$split2 = _toArray(_url$split),\n        originAndPath = _url$split2[0],\n        searchParams = _url$split2.slice(1);\n      var normalizedURL = originAndPath.replace(/\\/+/g, '/').concat(searchParams.length ? `?${searchParams.join('?')}` : '');\n      if (prefixRegex.test(normalizedURL)) {\n        return normalizedURL.replace(prefixRegex, '');\n      }\n    }\n    return undefined;\n  }\n});","lineCount":33,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toArray"],[4,14,1,13],[4,17,1,13,"require"],[4,24,1,13],[4,25,1,13,"_dependencyMap"],[4,39,1,13],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,4,2,"value"],[6,9,4,7],[6,11,4,9],[7,2,5,0],[7,3,5,1],[7,4,5,2],[8,2,6,0,"exports"],[8,9,6,7],[8,10,6,8,"extractPathFromURL"],[8,28,6,26],[8,31,6,29,"extractPathFromURL"],[8,49,6,47],[9,2,7,0],[9,6,7,4,"_escapeStringRegexp"],[9,25,7,23],[9,28,7,26,"_interopRequireDefault"],[9,50,7,48],[9,51,7,49,"require"],[9,58,7,56],[9,59,7,56,"_dependencyMap"],[9,73,7,56],[9,100,7,79],[9,101,7,80],[9,102,7,81],[10,2,8,0],[10,11,8,9,"_interopRequireDefault"],[10,33,8,31,"_interopRequireDefault"],[10,34,8,32,"e"],[10,35,8,33],[10,37,8,35],[11,4,8,37],[11,11,8,44,"e"],[11,12,8,45],[11,16,8,49,"e"],[11,17,8,50],[11,18,8,51,"__esModule"],[11,28,8,61],[11,31,8,64,"e"],[11,32,8,65],[11,35,8,68],[12,6,8,70,"default"],[12,13,8,77],[12,15,8,79,"e"],[13,4,8,81],[13,5,8,82],[14,2,8,84],[15,2,9,0],[15,11,9,9,"extractPathFromURL"],[15,29,9,27,"extractPathFromURL"],[15,30,9,28,"prefixes"],[15,38,9,36],[15,40,9,38,"url"],[15,43,9,41],[15,45,9,43],[16,4,10,2],[16,9,10,7],[16,13,10,13,"prefix"],[16,19,10,19],[16,23,10,23,"prefixes"],[16,31,10,31],[16,33,10,33],[17,6,11,4],[17,10,11,10,"protocol"],[17,18,11,18],[17,21,11,21,"prefix"],[17,27,11,27],[17,28,11,28,"match"],[17,33,11,33],[17,34,11,34],[17,43,11,43],[17,44,11,44],[17,47,11,47],[17,48,11,48],[17,49,11,49],[17,53,11,53],[17,55,11,55],[18,6,12,4],[18,10,12,10,"host"],[18,14,12,14],[18,17,12,17,"prefix"],[18,23,12,23],[18,24,12,24,"replace"],[18,31,12,31],[18,32,12,32],[18,36,12,36,"RegExp"],[18,42,12,42],[18,43,12,43],[18,47,12,47],[18,48,12,48],[18,49,12,49],[18,51,12,51,"_escapeStringRegexp"],[18,70,12,70],[18,71,12,71,"default"],[18,78,12,78],[18,80,12,80,"protocol"],[18,88,12,88],[18,89,12,89],[18,91,12,91],[18,92,12,92],[18,94,12,94],[18,96,12,96],[18,97,12,97],[18,98,12,98,"replace"],[18,105,12,105],[18,106,12,106],[18,112,12,112],[18,114,12,114],[18,117,12,117],[18,118,12,118],[18,119,12,119],[19,6,12,119],[19,7,13,5,"replace"],[19,14,13,12],[19,15,13,13],[19,20,13,18],[19,22,13,20],[19,24,13,22],[19,25,13,23],[19,26,13,24],[19,27,13,25],[21,6,15,4],[21,10,15,10,"prefixRegex"],[21,21,15,21],[21,24,15,24],[21,28,15,28,"RegExp"],[21,34,15,34],[21,35,15,35],[21,39,15,39],[21,40,15,40],[21,41,15,41],[21,43,15,43,"_escapeStringRegexp"],[21,62,15,62],[21,63,15,63,"default"],[21,70,15,70],[21,72,15,72,"protocol"],[21,80,15,80],[21,81,15,81],[21,88,15,88,"host"],[21,92,15,92],[21,93,15,93,"split"],[21,98,15,98],[21,99,15,99],[21,102,15,102],[21,103,15,103],[21,104,15,104,"map"],[21,107,15,107],[21,108,15,108,"it"],[21,110,15,110],[21,114,15,114,"it"],[21,116,15,116],[21,121,15,121],[21,124,15,124],[21,127,15,127],[21,134,15,134],[21,137,15,137],[21,138,15,138],[21,139,15,139],[21,141,15,141,"_escapeStringRegexp"],[21,160,15,160],[21,161,15,161,"default"],[21,168,15,168],[21,170,15,170,"it"],[21,172,15,172],[21,173,15,173],[21,174,15,174],[21,175,15,175,"join"],[21,179,15,179],[21,180,15,180],[21,185,15,185],[21,186,15,186],[21,188,15,188],[21,189,15,189],[22,6,16,4],[22,10,16,4,"_url$split"],[22,20,16,4],[22,23,16,45,"url"],[22,26,16,48],[22,27,16,49,"split"],[22,32,16,54],[22,33,16,55],[22,36,16,58],[22,37,16,59],[23,8,16,59,"_url$split2"],[23,19,16,59],[23,22,16,59,"_toArray"],[23,30,16,59],[23,31,16,59,"_url$split"],[23,41,16,59],[24,8,16,11,"originAndPath"],[24,21,16,24],[24,24,16,24,"_url$split2"],[24,35,16,24],[25,8,16,29,"searchParams"],[25,20,16,41],[25,23,16,41,"_url$split2"],[25,34,16,41],[25,35,16,41,"slice"],[25,40,16,41],[26,6,17,4],[26,10,17,10,"normalizedURL"],[26,23,17,23],[26,26,17,26,"originAndPath"],[26,39,17,39],[26,40,17,40,"replace"],[26,47,17,47],[26,48,17,48],[26,54,17,54],[26,56,17,56],[26,59,17,59],[26,60,17,60],[26,61,17,61,"concat"],[26,67,17,67],[26,68,17,68,"searchParams"],[26,80,17,80],[26,81,17,81,"length"],[26,87,17,87],[26,90,17,90],[26,94,17,94,"searchParams"],[26,106,17,106],[26,107,17,107,"join"],[26,111,17,111],[26,112,17,112],[26,115,17,115],[26,116,17,116],[26,118,17,118],[26,121,17,121],[26,123,17,123],[26,124,17,124],[27,6,18,4],[27,10,18,8,"prefixRegex"],[27,21,18,19],[27,22,18,20,"test"],[27,26,18,24],[27,27,18,25,"normalizedURL"],[27,40,18,38],[27,41,18,39],[27,43,18,41],[28,8,19,6],[28,15,19,13,"normalizedURL"],[28,28,19,26],[28,29,19,27,"replace"],[28,36,19,34],[28,37,19,35,"prefixRegex"],[28,48,19,46],[28,50,19,48],[28,52,19,50],[28,53,19,51],[29,6,20,4],[30,4,21,2],[31,4,22,2],[31,11,22,9,"undefined"],[31,20,22,18],[32,2,23,0],[33,0,23,1],[33,3]],"functionMap":{"names":["<global>","_interopRequireDefault","extractPathFromURL","host.split.map$argument_0"],"mappings":"AAA;ACO,qFD;AEC;4GCM,iED;CFQ"}},"type":"js/module"}]}