{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":79,"index":79}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"./environment/browser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":81},"end":{"line":8,"column":31,"index":201}},{"start":{"line":3,"column":0,"index":81},"end":{"line":8,"column":31,"index":201}},{"start":{"line":3,"column":0,"index":81},"end":{"line":8,"column":31,"index":201}},{"start":{"line":3,"column":0,"index":81},"end":{"line":8,"column":31,"index":201}}],"key":"4jLi2oL77AuNgQ8OVF8xZurKgiA="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _reactNative = require(_dependencyMap[0], \"react-native\");\n  if (__DEV__ && typeof \"android\" === 'undefined') {\n    console.warn(`The global process.env.EXPO_OS is not defined. This should be inlined by babel-preset-expo during transformation.`);\n  }\n  var nativeSelect = typeof window !== 'undefined' ? _reactNative.Platform.select :\n  // process.env.EXPO_OS is injected by `babel-preset-expo` and available in both client and `react-server` environments.\n  // Opt to use the env var when possible, and fallback to the React Native Platform module when it's not (arbitrary bundlers and transformers).\n  function select(specifics) {\n    if (!\"android\") return undefined;\n    if (specifics.hasOwnProperty(\"android\")) {\n      return specifics[\"android\"];\n    } else if (true && specifics.hasOwnProperty('native')) {\n      return specifics.native;\n    } else if (specifics.hasOwnProperty('default')) {\n      return specifics.default;\n    }\n    // do nothing...\n    return undefined;\n  };\n  var Platform = {\n    /**\n     * Denotes the currently running platform.\n     * Can be one of ios, android, web.\n     */\n    OS: \"android\" || _reactNative.Platform.OS,\n    /**\n     * Returns the value with the matching platform.\n     * Object keys can be any of ios, android, native, web, default.\n     *\n     * @ios ios, native, default\n     * @android android, native, default\n     * @web web, default\n     */\n    select: nativeSelect,\n    /**\n     * Denotes if the DOM API is available in the current environment.\n     * The DOM is not available in native React runtimes and Node.js.\n     */\n    isDOMAvailable: require(_dependencyMap[1], \"./environment/browser\").isDOMAvailable,\n    /**\n     * Denotes if the current environment can attach event listeners\n     * to the window. This will return false in native React\n     * runtimes and Node.js.\n     */\n    canUseEventListeners: require(_dependencyMap[1], \"./environment/browser\").canUseEventListeners,\n    /**\n     * Denotes if the current environment can inspect properties of the\n     * screen on which the current window is being rendered. This will\n     * return false in native React runtimes and Node.js.\n     */\n    canUseViewport: require(_dependencyMap[1], \"./environment/browser\").canUseViewport,\n    /**\n     * If the JavaScript is being executed in a remote JavaScript environment.\n     * When `true`, synchronous native invocations cannot be executed.\n     */\n    isAsyncDebugging: require(_dependencyMap[1], \"./environment/browser\").isAsyncDebugging\n  };\n  var _default = exports.default = Platform;\n});","lineCount":64,"map":[[6,2,1,0],[6,6,1,0,"_reactNative"],[6,18,1,0],[6,21,1,0,"require"],[6,28,1,0],[6,29,1,0,"_dependencyMap"],[6,43,1,0],[7,2,14,0],[7,6,14,4,"__DEV__"],[7,13,14,11],[7,17,14,15],[7,33,14,41],[7,38,14,46],[7,49,14,57],[7,51,14,59],[8,4,15,2,"console"],[8,11,15,9],[8,12,15,10,"warn"],[8,16,15,14],[8,17,16,4],[8,132,17,2],[8,133,17,3],[9,2,18,0],[10,2,20,0],[10,6,20,6,"nativeSelect"],[10,18,20,18],[10,21,21,2],[10,28,21,9,"window"],[10,34,21,15],[10,39,21,20],[10,50,21,31],[10,53,22,6,"ReactNativePlatform"],[10,74,22,25],[10,75,22,26,"select"],[10,81,22,32],[11,2,23,6],[12,2,24,6],[13,2,25,6],[13,11,25,15,"select"],[13,17,25,21,"select"],[13,18,25,25,"specifics"],[13,27,25,78],[13,29,25,95],[14,4,26,8],[14,8,26,12],[14,18,26,32],[14,20,26,34],[14,27,26,41,"undefined"],[14,36,26,50],[15,4,27,8],[15,8,27,12,"specifics"],[15,17,27,21],[15,18,27,22,"hasOwnProperty"],[15,32,27,36],[15,42,27,56],[15,43,27,57],[15,45,27,59],[16,6,28,10],[16,13,28,17,"specifics"],[16,22,28,26],[16,33,28,47],[17,4,29,8],[17,5,29,9],[17,11,29,15],[17,15,29,19],[17,23,29,52,"specifics"],[17,32,29,61],[17,33,29,62,"hasOwnProperty"],[17,47,29,76],[17,48,29,77],[17,56,29,85],[17,57,29,86],[17,59,29,88],[18,6,30,10],[18,13,30,17,"specifics"],[18,22,30,26],[18,23,30,27,"native"],[18,29,30,33],[19,4,31,8],[19,5,31,9],[19,11,31,15],[19,15,31,19,"specifics"],[19,24,31,28],[19,25,31,29,"hasOwnProperty"],[19,39,31,43],[19,40,31,44],[19,49,31,53],[19,50,31,54],[19,52,31,56],[20,6,32,10],[20,13,32,17,"specifics"],[20,22,32,26],[20,23,32,27,"default"],[20,30,32,34],[21,4,33,8],[22,4,34,8],[23,4,35,8],[23,11,35,15,"undefined"],[23,20,35,24],[24,2,36,6],[24,3,36,7],[25,2,38,0],[25,6,38,6,"Platform"],[25,14,38,14],[25,17,38,17],[26,4,39,2],[27,0,40,0],[28,0,41,0],[29,0,42,0],[30,4,43,2,"OS"],[30,6,43,4],[30,8,43,6],[30,21,43,29,"ReactNativePlatform"],[30,42,43,48],[30,43,43,49,"OS"],[30,45,43,51],[31,4,44,2],[32,0,45,0],[33,0,46,0],[34,0,47,0],[35,0,48,0],[36,0,49,0],[37,0,50,0],[38,0,51,0],[39,4,52,2,"select"],[39,10,52,8],[39,12,52,10,"nativeSelect"],[39,24,52,40],[40,4,53,2],[41,0,54,0],[42,0,55,0],[43,0,56,0],[44,4,57,2,"isDOMAvailable"],[44,18,57,16],[44,20,57,2,"isDOMAvailable"],[44,46,57,2],[44,47,57,2,"isDOMAvailable"],[44,86,57,16],[45,4,58,2],[46,0,59,0],[47,0,60,0],[48,0,61,0],[49,0,62,0],[50,4,63,2,"canUseEventListeners"],[50,24,63,22],[50,26,63,2,"canUseEventListeners"],[50,52,63,2],[50,53,63,2,"canUseEventListeners"],[50,98,63,22],[51,4,64,2],[52,0,65,0],[53,0,66,0],[54,0,67,0],[55,0,68,0],[56,4,69,2,"canUseViewport"],[56,18,69,16],[56,20,69,2,"canUseViewport"],[56,46,69,2],[56,47,69,2,"canUseViewport"],[56,86,69,16],[57,4,70,2],[58,0,71,0],[59,0,72,0],[60,0,73,0],[61,4,74,2,"isAsyncDebugging"],[61,20,74,18],[61,22,74,2,"isAsyncDebugging"],[61,48,74,2],[61,49,74,2,"isAsyncDebugging"],[62,2,75,0],[62,3,75,1],[63,2,75,2],[63,6,75,2,"_default"],[63,14,75,2],[63,17,75,2,"exports"],[63,24,75,2],[63,25,75,2,"default"],[63,32,75,2],[63,35,77,15,"Platform"],[63,43,77,23],[64,0,77,23],[64,3]],"functionMap":{"names":["<global>","select"],"mappings":"AAA;MCwB;ODW"}},"type":"js/module"}]}