{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":757,"column":0,"index":24697}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":757,"column":0,"index":24697}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":757,"column":0,"index":24697}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":757,"column":0,"index":24697}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":757,"column":0,"index":24697}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":757,"column":0,"index":24697}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":414},"end":{"line":9,"column":31,"index":445}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"invariant","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":481},"end":{"line":11,"column":34,"index":515}}],"key":"4HPAaDQ25ZwZ2dzTLatXuUucZUM="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":516},"end":{"line":24,"column":22,"index":714}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"react/jsx-dev-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":757,"column":0,"index":24697}}],"key":"L9D70Z4hi4aGuui1ysja/oQ5ytI="}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}},{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}},{"start":{"line":39,"column":0,"index":1119},"end":{"line":39,"column":33,"index":1152}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE="}},{"name":"../handlers/TapGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":38,"column":0,"index":1052},"end":{"line":38,"column":66,"index":1118}}],"key":"+Msf+8iAdn6txPXicJvQZ0hdOZ0="}},{"name":"../handlers/PanGestureHandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":856},"end":{"line":33,"column":66,"index":922}}],"key":"Z7WldcovRqVbXERv5Mkjp/bqHuA="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _react = _interopRequireWildcard(require(_dependencyMap[6], \"react\"));\n  var React = _react;\n  var _invariant = _interopRequireDefault(require(_dependencyMap[7], \"invariant\"));\n  var _reactNative = require(_dependencyMap[8], \"react-native\");\n  var _jsxDevRuntime = require(_dependencyMap[9], \"react/jsx-dev-runtime\");\n  var _jsxFileName = \"C:\\\\Users\\\\argus\\\\workspace\\\\appigreja\\\\node_modules\\\\react-native-gesture-handler\\\\src\\\\components\\\\DrawerLayout.tsx\"; // This component is based on RN's DrawerLayoutAndroid API\n  //\n  // It perhaps deserves to be put in a separate repo, but since it relies on\n  // react-native-gesture-handler library which isn't very popular at the moment I\n  // decided to keep it here for the time being. It will allow us to move faster\n  // and fix issues that may arise in gesture handler library that could be found\n  // when using the drawer component\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  // Animated.AnimatedInterpolation has been converted to a generic type\n  // in @types/react-native 0.70. This way we can maintain compatibility\n  // with all versions of @types/react-native`\n  var DrawerLayout = exports.default = /*#__PURE__*/function (_Component) {\n    function DrawerLayout(_props) {\n      var _this;\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = _callSuper(this, DrawerLayout, [_props]);\n      _this.accessibilityIsModalView = /*#__PURE__*/React.createRef();\n      _this.pointerEventsView = /*#__PURE__*/React.createRef();\n      _this.panGestureHandler = /*#__PURE__*/React.createRef();\n      _this.drawerShown = false;\n      _this.updateAnimatedEvent = (props, state) => {\n        // Event definition is based on\n        var drawerPosition = props.drawerPosition,\n          drawerWidth = props.drawerWidth,\n          drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n          touchXValue = state.touchX,\n          drawerTranslation = state.drawerTranslation,\n          containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n        if (drawerPosition !== 'left') {\n          // Most of the code is written in a way to handle left-side drawer. In\n          // order to handle right-side drawer the only thing we need to do is to\n          // reverse events coming from gesture handler in a way they emulate\n          // left-side drawer gestures. E.g. dragX is simply -dragX, and touchX is\n          // calulcated by subtracing real touchX from the width of the container\n          // (such that when touch happens at the right edge the value is simply 0)\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue); // TODO(TS): (for all \"as\" in this file) make sure we can map this\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue)); // TODO(TS): make sure we can map this;\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        // While closing the drawer when user starts gesture outside of its area (in greyed\n        // out part of the window), we want the drawer to follow only once finger reaches the\n        // edge of the drawer.\n        // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n        // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n        // an arrow pointing left\n        // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n        //    +---------------+    +---------------+    +---------------+    +---------------+\n        //\n        // For the above to work properly we define animated value that will keep\n        // start position of the gesture. Then we use that value to calculate how\n        // much we need to subtract from the dragX. If the gesture started on the\n        // greyed out area we take the distance from the edge of the drawer to the\n        // start position. Otherwise we don't subtract at all and the drawer be\n        // pulled back as soon as you start the pan.\n        //\n        // This is used only when drawerType is \"front\"\n        //\n        var translationX = dragX;\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition); // TODO: as above\n        }\n        _this.openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        var gestureOptions = {\n          useNativeDriver: props.useNativeAnimations\n        };\n        if (_this.props.onDrawerSlide) {\n          gestureOptions.listener = ev => {\n            var translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n            var position = translationX / _this.state.containerWidth;\n            _this.props.onDrawerSlide?.(position);\n          };\n        }\n        _this.onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], gestureOptions);\n      };\n      _this.handleContainerLayout = _ref => {\n        var nativeEvent = _ref.nativeEvent;\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n      _this.emitStateChanged = (newState, drawerWillShow) => {\n        _this.props.onDrawerStateChanged?.(newState, drawerWillShow);\n      };\n      _this.openingHandlerStateChange = _ref2 => {\n        var nativeEvent = _ref2.nativeEvent;\n        if (nativeEvent.oldState === require(_dependencyMap[10], \"../State\").State.ACTIVE) {\n          _this.handleRelease({\n            nativeEvent\n          });\n        } else if (nativeEvent.state === require(_dependencyMap[10], \"../State\").State.ACTIVE) {\n          _this.emitStateChanged(DRAGGING, false);\n          _this.setState({\n            drawerState: DRAGGING\n          });\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n      _this.onTapHandlerStateChange = _ref3 => {\n        var nativeEvent = _ref3.nativeEvent;\n        if (_this.drawerShown && nativeEvent.oldState === require(_dependencyMap[10], \"../State\").State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n      _this.handleRelease = _ref4 => {\n        var nativeEvent = _ref4.nativeEvent;\n        var _this$props = _this.props,\n          drawerWidth = _this$props.drawerWidth,\n          drawerPosition = _this$props.drawerPosition,\n          drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n          velocityX = nativeEvent.velocityX,\n          touchX = nativeEvent.x;\n        if (drawerPosition !== 'left') {\n          // See description in _updateAnimatedEvent about why events are flipped\n          // for right-side drawer\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this.drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n        if (shouldOpen) {\n          _this.animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this.animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n      _this.updateShowing = showing => {\n        _this.drawerShown = showing;\n        _this.accessibilityIsModalView.current?.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this.pointerEventsView.current?.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n          drawerPosition = _this$props2.drawerPosition,\n          minSwipeDistance = _this$props2.minSwipeDistance,\n          edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this.drawerShown ? -1 : 1);\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        // @ts-ignore internal API, maybe could be fixed in handler types\n        _this.panGestureHandler.current?.setNativeProps({\n          hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n      _this.animateDrawer = (fromValue, toValue, velocity, speed) => {\n        _this.state.dragX.setValue(0);\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n          if (_this.props.useNativeAnimations) {\n            // When using native driver, we predict the next position of the\n            // animation because it takes one frame of a roundtrip to pass RELEASE\n            // event from native driver to JS before we can start animating. Without\n            // it, it is more noticable that the frame is dropped.\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n        var willShow = toValue !== 0;\n        _this.updateShowing(willShow);\n        _this.emitStateChanged(SETTLING, willShow);\n        _this.setState({\n          drawerState: SETTLING\n        });\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity,\n          bounciness: 0,\n          toValue,\n          useNativeDriver: _this.props.useNativeAnimations,\n          speed: speed ?? undefined\n        }).start(_ref5 => {\n          var finished = _ref5.finished;\n          if (finished) {\n            _this.emitStateChanged(IDLE, willShow);\n            _this.setState({\n              drawerOpened: willShow\n            });\n            if (_this.state.drawerState !== DRAGGING) {\n              // It's possilbe that user started drag while the drawer\n              // was settling, don't override state in this case\n              _this.setState({\n                drawerState: IDLE\n              });\n            }\n            if (willShow) {\n              _this.props.onDrawerOpen?.();\n            } else {\n              _this.props.onDrawerClose?.();\n            }\n          }\n        });\n      };\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        _this.animateDrawer(\n        // TODO: decide if it should be null or undefined is the proper value\n        undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would not be clickable\n        _this.forceUpdate();\n      };\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        // TODO: decide if it should be null or undefined is the proper value\n        _this.animateDrawer(undefined, 0, options.velocity ? options.velocity : 0, options.speed);\n\n        // We need to force the update, otherwise the overlay is not rerendered and\n        // it would be still clickable\n        _this.forceUpdate();\n      };\n      _this.renderOverlay = () => {\n        /* Overlay styles */\n        (0, _invariant.default)(_this.openValue, 'should be set');\n        var overlayOpacity;\n        if (_this.state.drawerState !== IDLE) {\n          overlayOpacity = _this.openValue;\n        } else {\n          overlayOpacity = _this.state.drawerOpened ? 1 : 0;\n        }\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(require(_dependencyMap[11], \"../handlers/TapGestureHandler\").TapGestureHandler, {\n          onHandlerStateChange: _this.onTapHandlerStateChange,\n          children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: _this.drawerShown ? 'auto' : 'none',\n            ref: _this.pointerEventsView,\n            style: [styles.overlay, dynamicOverlayStyles]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 9\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.renderDrawer = () => {\n        var _this$props3 = _this.props,\n          drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n          drawerWidth = _this$props3.drawerWidth,\n          drawerPosition = _this$props3.drawerPosition,\n          drawerType = _this$props3.drawerType,\n          drawerContainerStyle = _this$props3.drawerContainerStyle,\n          contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n\n        // We rely on row and row-reverse flex directions to position the drawer\n        // properly. Apparently for RTL these are flipped which requires us to use\n        // the opposite setting for the drawer to appear from left or right\n        // according to the drawerPosition prop\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this.openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n        var drawerTranslateX = 0;\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          if (_this.state.drawerState !== IDLE) {\n            drawerTranslateX = openValue.interpolate({\n              inputRange: [0, 1],\n              outputRange: [closedDrawerOffset, 0],\n              extrapolate: 'clamp'\n            });\n          } else {\n            drawerTranslateX = _this.state.drawerOpened ? 0 : closedDrawerOffset;\n          }\n        }\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this.handleContainerLayout,\n          children: [/*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n            importantForAccessibility: _this.drawerShown ? 'no-hide-descendants' : 'yes',\n            children: [typeof _this.props.children === 'function' ? _this.props.children(_this.openValue) : _this.props.children, _this.renderOverlay()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 9\n          }, _this), /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.Animated.View, {\n            pointerEvents: \"box-none\",\n            ref: _this.accessibilityIsModalView,\n            accessibilityViewIsModal: _this.drawerShown,\n            style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n            children: /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(_reactNative.View, {\n              style: dynamicDrawerStyles,\n              children: _this.props.renderNavigationView(_this.openValue)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 11\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 9\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 7\n        }, _this);\n      };\n      _this.setPanGestureRef = ref => {\n        // TODO(TS): make sure it is OK taken from\n        // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-596081842\n        _this.panGestureHandler.current = ref;\n        _this.props.onGestureRef?.(ref);\n      };\n      var _dragX = new _reactNative.Animated.Value(0);\n      var _touchX = new _reactNative.Animated.Value(0);\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0,\n        drawerState: IDLE,\n        drawerOpened: false\n      };\n      _this.updateAnimatedEvent(_props, _this.state);\n      return _this;\n    }\n    (0, _inherits2.default)(DrawerLayout, _Component);\n    return (0, _createClass2.default)(DrawerLayout, [{\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this.updateAnimatedEvent(props, state);\n        }\n        return true;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n          drawerPosition = _this$props4.drawerPosition,\n          drawerLockMode = _this$props4.drawerLockMode,\n          edgeWidth = _this$props4.edgeWidth,\n          minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n\n        // gestureOrientation is 1 if the expected gesture is from left to right and\n        // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n        // to right gesture, thus orientation will be 1.\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n\n        // When drawer is closed we want the hitSlop to be horizontally shorter than\n        // the container size by the value of SLOP. This will make it only activate\n        // when gesture happens not further than SLOP away from the edge\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this.drawerShown ? undefined : edgeWidth\n        };\n        return /*#__PURE__*/(0, _jsxDevRuntime.jsxDEV)(require(_dependencyMap[12], \"../handlers/PanGestureHandler\").PanGestureHandler\n        // @ts-ignore could be fixed in handler types\n        , {\n          userSelect: this.props.userSelect,\n          activeCursor: this.props.activeCursor,\n          mouseButton: this.props.mouseButton,\n          enableContextMenu: this.props.enableContextMenu,\n          ref: this.setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this.onGestureEvent,\n          onHandlerStateChange: this.openingHandlerStateChange,\n          enableTrackpadTwoFingerGesture: this.props.enableTrackpadTwoFingerGesture,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          children: this.renderDrawer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 7\n        }, this);\n      }\n    }]);\n  }(_react.Component);\n  DrawerLayout.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false\n  };\n  DrawerLayout.positions = {\n    Left: 'left',\n    Right: 'right'\n  };\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1001,\n      flexDirection: 'row'\n    },\n    containerInFront: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1002\n    },\n    containerOnBack: {\n      ..._reactNative.StyleSheet.absoluteFillObject\n    },\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: {\n      ..._reactNative.StyleSheet.absoluteFillObject,\n      zIndex: 1000\n    }\n  });\n});","lineCount":534,"map":[[12,2,9,0],[12,6,9,0,"_react"],[12,12,9,0],[12,15,9,0,"_interopRequireWildcard"],[12,38,9,0],[12,39,9,0,"require"],[12,46,9,0],[12,47,9,0,"_dependencyMap"],[12,61,9,0],[13,2,9,31],[13,6,9,31,"React"],[13,11,9,31],[13,14,9,31,"_react"],[13,20,9,31],[14,2,11,0],[14,6,11,0,"_invariant"],[14,16,11,0],[14,19,11,0,"_interopRequireDefault"],[14,41,11,0],[14,42,11,0,"require"],[14,49,11,0],[14,50,11,0,"_dependencyMap"],[14,64,11,0],[15,2,12,0],[15,6,12,0,"_reactNative"],[15,18,12,0],[15,21,12,0,"require"],[15,28,12,0],[15,29,12,0,"_dependencyMap"],[15,43,12,0],[16,2,24,22],[16,6,24,22,"_jsxDevRuntime"],[16,20,24,22],[16,23,24,22,"require"],[16,30,24,22],[16,31,24,22,"_dependencyMap"],[16,45,24,22],[17,2,24,22],[17,6,24,22,"_jsxFileName"],[17,18,24,22],[17,142,1,0],[18,2,2,0],[19,2,3,0],[20,2,4,0],[21,2,5,0],[22,2,6,0],[23,2,7,0],[24,2,7,0],[24,11,7,0,"_getRequireWildcardCache"],[24,36,7,0,"e"],[24,37,7,0],[24,66,7,0,"WeakMap"],[24,73,7,0],[24,92,7,0,"r"],[24,93,7,0],[24,100,7,0,"WeakMap"],[24,107,7,0],[24,111,7,0,"t"],[24,112,7,0],[24,119,7,0,"WeakMap"],[24,126,7,0],[24,138,7,0,"_getRequireWildcardCache"],[24,162,7,0],[24,174,7,0,"_getRequireWildcardCache"],[24,175,7,0,"e"],[24,176,7,0],[24,187,7,0,"e"],[24,188,7,0],[24,191,7,0,"t"],[24,192,7,0],[24,195,7,0,"r"],[24,196,7,0],[24,201,7,0,"e"],[24,202,7,0],[25,2,7,0],[25,11,7,0,"_interopRequireWildcard"],[25,35,7,0,"e"],[25,36,7,0],[25,38,7,0,"r"],[25,39,7,0],[25,48,7,0,"r"],[25,49,7,0],[25,53,7,0,"e"],[25,54,7,0],[25,58,7,0,"e"],[25,59,7,0],[25,60,7,0,"__esModule"],[25,70,7,0],[25,79,7,0,"e"],[25,80,7,0],[25,95,7,0,"e"],[25,96,7,0],[25,119,7,0,"e"],[25,120,7,0],[25,145,7,0,"e"],[25,146,7,0],[25,157,7,0,"default"],[25,164,7,0],[25,166,7,0,"e"],[25,167,7,0],[25,175,7,0,"t"],[25,176,7,0],[25,179,7,0,"_getRequireWildcardCache"],[25,203,7,0],[25,204,7,0,"r"],[25,205,7,0],[25,212,7,0,"t"],[25,213,7,0],[25,217,7,0,"t"],[25,218,7,0],[25,219,7,0,"has"],[25,222,7,0],[25,223,7,0,"e"],[25,224,7,0],[25,234,7,0,"t"],[25,235,7,0],[25,236,7,0,"get"],[25,239,7,0],[25,240,7,0,"e"],[25,241,7,0],[25,248,7,0,"n"],[25,249,7,0],[25,254,7,0,"__proto__"],[25,263,7,0],[25,273,7,0,"a"],[25,274,7,0],[25,277,7,0,"Object"],[25,283,7,0],[25,284,7,0,"defineProperty"],[25,298,7,0],[25,302,7,0,"Object"],[25,308,7,0],[25,309,7,0,"getOwnPropertyDescriptor"],[25,333,7,0],[25,344,7,0,"u"],[25,345,7,0],[25,349,7,0,"e"],[25,350,7,0],[25,370,7,0,"u"],[25,371,7,0],[25,378,7,0,"hasOwnProperty"],[25,392,7,0],[25,393,7,0,"call"],[25,397,7,0],[25,398,7,0,"e"],[25,399,7,0],[25,401,7,0,"u"],[25,402,7,0],[25,411,7,0,"i"],[25,412,7,0],[25,415,7,0,"a"],[25,416,7,0],[25,419,7,0,"Object"],[25,425,7,0],[25,426,7,0,"getOwnPropertyDescriptor"],[25,450,7,0],[25,451,7,0,"e"],[25,452,7,0],[25,454,7,0,"u"],[25,455,7,0],[25,465,7,0,"i"],[25,466,7,0],[25,471,7,0,"i"],[25,472,7,0],[25,473,7,0,"get"],[25,476,7,0],[25,480,7,0,"i"],[25,481,7,0],[25,482,7,0,"set"],[25,485,7,0],[25,489,7,0,"Object"],[25,495,7,0],[25,496,7,0,"defineProperty"],[25,510,7,0],[25,511,7,0,"n"],[25,512,7,0],[25,514,7,0,"u"],[25,515,7,0],[25,517,7,0,"i"],[25,518,7,0],[25,522,7,0,"n"],[25,523,7,0],[25,524,7,0,"u"],[25,525,7,0],[25,529,7,0,"e"],[25,530,7,0],[25,531,7,0,"u"],[25,532,7,0],[25,544,7,0,"n"],[25,545,7,0],[25,546,7,0,"default"],[25,553,7,0],[25,556,7,0,"e"],[25,557,7,0],[25,559,7,0,"t"],[25,560,7,0],[25,564,7,0,"t"],[25,565,7,0],[25,566,7,0,"set"],[25,569,7,0],[25,570,7,0,"e"],[25,571,7,0],[25,573,7,0,"n"],[25,574,7,0],[25,577,7,0,"n"],[25,578,7,0],[26,2,7,0],[26,11,7,0,"_callSuper"],[26,22,7,0,"t"],[26,23,7,0],[26,25,7,0,"o"],[26,26,7,0],[26,28,7,0,"e"],[26,29,7,0],[26,40,7,0,"o"],[26,41,7,0],[26,48,7,0,"_getPrototypeOf2"],[26,64,7,0],[26,65,7,0,"default"],[26,72,7,0],[26,74,7,0,"o"],[26,75,7,0],[26,82,7,0,"_possibleConstructorReturn2"],[26,109,7,0],[26,110,7,0,"default"],[26,117,7,0],[26,119,7,0,"t"],[26,120,7,0],[26,122,7,0,"_isNativeReflectConstruct"],[26,147,7,0],[26,152,7,0,"Reflect"],[26,159,7,0],[26,160,7,0,"construct"],[26,169,7,0],[26,170,7,0,"o"],[26,171,7,0],[26,173,7,0,"e"],[26,174,7,0],[26,186,7,0,"_getPrototypeOf2"],[26,202,7,0],[26,203,7,0,"default"],[26,210,7,0],[26,212,7,0,"t"],[26,213,7,0],[26,215,7,0,"constructor"],[26,226,7,0],[26,230,7,0,"o"],[26,231,7,0],[26,232,7,0,"apply"],[26,237,7,0],[26,238,7,0,"t"],[26,239,7,0],[26,241,7,0,"e"],[26,242,7,0],[27,2,7,0],[27,11,7,0,"_isNativeReflectConstruct"],[27,37,7,0],[27,51,7,0,"t"],[27,52,7,0],[27,56,7,0,"Boolean"],[27,63,7,0],[27,64,7,0,"prototype"],[27,73,7,0],[27,74,7,0,"valueOf"],[27,81,7,0],[27,82,7,0,"call"],[27,86,7,0],[27,87,7,0,"Reflect"],[27,94,7,0],[27,95,7,0,"construct"],[27,104,7,0],[27,105,7,0,"Boolean"],[27,112,7,0],[27,145,7,0,"t"],[27,146,7,0],[27,159,7,0,"_isNativeReflectConstruct"],[27,184,7,0],[27,196,7,0,"_isNativeReflectConstruct"],[27,197,7,0],[27,210,7,0,"t"],[27,211,7,0],[28,2,41,0],[28,6,41,6,"DRAG_TOSS"],[28,15,41,15],[28,18,41,18],[28,22,41,22],[29,2,43,0],[29,6,43,6,"IDLE"],[29,10,43,23],[29,13,43,26],[29,19,43,32],[30,2,44,0],[30,6,44,6,"DRAGGING"],[30,14,44,27],[30,17,44,30],[30,27,44,40],[31,2,45,0],[31,6,45,6,"SETTLING"],[31,14,45,27],[31,17,45,30],[31,27,45,40],[33,2,57,0],[34,2,58,0],[35,2,59,0],[36,2,59,0],[36,6,202,21,"DrawerLayout"],[36,18,202,33],[36,21,202,33,"exports"],[36,28,202,33],[36,29,202,33,"default"],[36,36,202,33],[36,62,202,33,"_Component"],[36,72,202,33],[37,4,218,2],[37,13,218,2,"DrawerLayout"],[37,26,218,14,"props"],[37,32,218,38],[37,34,218,40],[38,6,218,40],[38,10,218,40,"_this"],[38,15,218,40],[39,6,218,40],[39,10,218,40,"_classCallCheck2"],[39,26,218,40],[39,27,218,40,"default"],[39,34,218,40],[39,42,218,40,"DrawerLayout"],[39,54,218,40],[40,6,219,4,"_this"],[40,11,219,4],[40,14,219,4,"_callSuper"],[40,24,219,4],[40,31,219,4,"DrawerLayout"],[40,43,219,4],[40,46,219,10,"props"],[40,52,219,15],[41,6,219,17,"_this"],[41,11,219,17],[41,12,254,10,"accessibilityIsModalView"],[41,36,254,34],[41,52,254,37,"React"],[41,57,254,42],[41,58,254,43,"createRef"],[41,67,254,52],[41,68,254,59],[41,69,254,60],[42,6,254,60,"_this"],[42,11,254,60],[42,12,255,10,"pointerEventsView"],[42,29,255,27],[42,45,255,30,"React"],[42,50,255,35],[42,51,255,36,"createRef"],[42,60,255,45],[42,61,255,52],[42,62,255,53],[43,6,255,53,"_this"],[43,11,255,53],[43,12,256,10,"panGestureHandler"],[43,29,256,27],[43,45,256,30,"React"],[43,50,256,35],[43,51,256,36,"createRef"],[43,60,256,45],[43,61,256,72],[43,62,256,73],[44,6,256,73,"_this"],[44,11,256,73],[44,12,257,10,"drawerShown"],[44,23,257,21],[44,26,257,24],[44,31,257,29],[45,6,257,29,"_this"],[45,11,257,29],[45,12,264,10,"updateAnimatedEvent"],[45,31,264,29],[45,34,264,32],[45,35,265,4,"props"],[45,40,265,28],[45,42,266,4,"state"],[45,47,266,28],[45,52,267,7],[46,8,268,4],[47,8,269,4],[47,12,269,12,"drawerPosition"],[47,26,269,26],[47,29,269,56,"props"],[47,34,269,61],[47,35,269,12,"drawerPosition"],[47,49,269,26],[48,10,269,28,"drawerWidth"],[48,21,269,39],[48,24,269,56,"props"],[48,29,269,61],[48,30,269,28,"drawerWidth"],[48,41,269,39],[49,10,269,41,"drawerType"],[49,20,269,51],[49,23,269,56,"props"],[49,28,269,61],[49,29,269,41,"drawerType"],[49,39,269,51],[50,8,270,4],[50,12,271,13,"dragXValue"],[50,22,271,23],[50,25,275,8,"state"],[50,30,275,13],[50,31,271,6,"dragX"],[50,36,271,11],[51,10,272,14,"touchXValue"],[51,21,272,25],[51,24,275,8,"state"],[51,29,275,13],[51,30,272,6,"touchX"],[51,36,272,12],[52,10,273,6,"drawerTranslation"],[52,27,273,23],[52,30,275,8,"state"],[52,35,275,13],[52,36,273,6,"drawerTranslation"],[52,53,273,23],[53,10,274,6,"containerWidth"],[53,24,274,20],[53,27,275,8,"state"],[53,32,275,13],[53,33,274,6,"containerWidth"],[53,47,274,20],[54,8,277,4],[54,12,277,8,"dragX"],[54,17,277,13],[54,20,277,16,"dragXValue"],[54,30,277,26],[55,8,278,4],[55,12,278,8,"touchX"],[55,18,278,14],[55,21,278,17,"touchXValue"],[55,32,278,28],[56,8,280,4],[56,12,280,8,"drawerPosition"],[56,26,280,22],[56,31,280,27],[56,37,280,33],[56,39,280,35],[57,10,281,6],[58,10,282,6],[59,10,283,6],[60,10,284,6],[61,10,285,6],[62,10,286,6],[63,10,287,6,"dragX"],[63,15,287,11],[63,18,287,14,"Animated"],[63,39,287,22],[63,40,287,23,"multiply"],[63,48,287,31],[63,49,288,8],[63,53,288,12,"Animated"],[63,74,288,20],[63,75,288,21,"Value"],[63,80,288,26],[63,81,288,27],[63,82,288,28],[63,83,288,29],[63,84,288,30],[63,86,289,8,"dragXValue"],[63,96,290,6],[63,97,290,25],[63,98,290,26],[63,99,290,27],[64,10,291,6,"touchX"],[64,16,291,12],[64,19,291,15,"Animated"],[64,40,291,23],[64,41,291,24,"add"],[64,44,291,27],[64,45,292,8],[64,49,292,12,"Animated"],[64,70,292,20],[64,71,292,21,"Value"],[64,76,292,26],[64,77,292,27,"containerWidth"],[64,91,292,41],[64,92,292,42],[64,94,293,8,"Animated"],[64,115,293,16],[64,116,293,17,"multiply"],[64,124,293,25],[64,125,293,26],[64,129,293,30,"Animated"],[64,150,293,38],[64,151,293,39,"Value"],[64,156,293,44],[64,157,293,45],[64,158,293,46],[64,159,293,47],[64,160,293,48],[64,162,293,50,"touchXValue"],[64,173,293,61],[64,174,294,6],[64,175,294,25],[64,176,294,26],[64,177,294,27],[65,10,295,6,"touchXValue"],[65,21,295,17],[65,22,295,18,"setValue"],[65,30,295,26],[65,31,295,27,"containerWidth"],[65,45,295,41],[65,46,295,42],[66,8,296,4],[66,9,296,5],[66,15,296,11],[67,10,297,6,"touchXValue"],[67,21,297,17],[67,22,297,18,"setValue"],[67,30,297,26],[67,31,297,27],[67,32,297,28],[67,33,297,29],[68,8,298,4],[70,8,300,4],[71,8,301,4],[72,8,302,4],[73,8,303,4],[74,8,304,4],[75,8,305,4],[76,8,306,4],[77,8,307,4],[78,8,308,4],[79,8,309,4],[80,8,310,4],[81,8,311,4],[82,8,312,4],[83,8,313,4],[84,8,314,4],[85,8,315,4],[86,8,316,4],[87,8,317,4],[88,8,318,4],[89,8,319,4],[90,8,320,4],[91,8,321,4],[92,8,322,4],[93,8,323,4],[94,8,324,4],[95,8,325,4],[95,12,325,8,"translationX"],[95,24,325,20],[95,27,325,23,"dragX"],[95,32,325,28],[96,8,326,4],[96,12,326,8,"drawerType"],[96,22,326,18],[96,27,326,23],[96,34,326,30],[96,36,326,32],[97,10,327,6],[97,14,327,12,"startPositionX"],[97,28,327,26],[97,31,327,29,"Animated"],[97,52,327,37],[97,53,327,38,"add"],[97,56,327,41],[97,57,328,8,"touchX"],[97,63,328,14],[97,65,329,8,"Animated"],[97,86,329,16],[97,87,329,17,"multiply"],[97,95,329,25],[97,96,329,26],[97,100,329,30,"Animated"],[97,121,329,38],[97,122,329,39,"Value"],[97,127,329,44],[97,128,329,45],[97,129,329,46],[97,130,329,47],[97,131,329,48],[97,133,329,50,"dragX"],[97,138,329,55],[97,139,330,6],[97,140,330,7],[98,10,332,6],[98,14,332,12,"dragOffsetFromOnStartPosition"],[98,43,332,41],[98,46,332,44,"startPositionX"],[98,60,332,58],[98,61,332,59,"interpolate"],[98,72,332,70],[98,73,332,71],[99,12,333,8,"inputRange"],[99,22,333,18],[99,24,333,20],[99,25,333,21,"drawerWidth"],[99,36,333,32],[99,39,333,36],[99,40,333,37],[99,42,333,39,"drawerWidth"],[99,53,333,50],[99,55,333,53,"drawerWidth"],[99,66,333,64],[99,69,333,68],[99,70,333,69],[99,71,333,70],[100,12,334,8,"outputRange"],[100,23,334,19],[100,25,334,21],[100,26,334,22],[100,27,334,23],[100,29,334,25],[100,30,334,26],[100,32,334,28],[100,33,334,29],[101,10,335,6],[101,11,335,7],[101,12,335,8],[102,10,336,6,"translationX"],[102,22,336,18],[102,25,336,21,"Animated"],[102,46,336,29],[102,47,336,30,"add"],[102,50,336,33],[102,51,337,8,"dragX"],[102,56,337,13],[102,58,338,8,"dragOffsetFromOnStartPosition"],[102,87,339,6],[102,88,339,25],[102,89,339,26],[102,90,339,27],[103,8,340,4],[104,8,342,4,"_this"],[104,13,342,4],[104,14,342,9,"openValue"],[104,23,342,18],[104,26,342,21,"Animated"],[104,47,342,29],[104,48,342,30,"add"],[104,51,342,33],[104,52,342,34,"translationX"],[104,64,342,46],[104,66,342,48,"drawerTranslation"],[104,83,342,65],[104,84,342,66],[104,85,342,67,"interpolate"],[104,96,342,78],[104,97,342,79],[105,10,343,6,"inputRange"],[105,20,343,16],[105,22,343,18],[105,23,343,19],[105,24,343,20],[105,26,343,22,"drawerWidth"],[105,37,343,33],[105,38,343,35],[106,10,344,6,"outputRange"],[106,21,344,17],[106,23,344,19],[106,24,344,20],[106,25,344,21],[106,27,344,23],[106,28,344,24],[106,29,344,25],[107,10,345,6,"extrapolate"],[107,21,345,17],[107,23,345,19],[108,8,346,4],[108,9,346,5],[108,10,346,6],[109,8,348,4],[109,12,348,10,"gestureOptions"],[109,26,354,5],[109,29,354,8],[110,10,355,6,"useNativeDriver"],[110,25,355,21],[110,27,355,23,"props"],[110,32,355,28],[110,33,355,29,"useNativeAnimations"],[111,8,356,4],[111,9,356,5],[112,8,358,4],[112,12,358,8,"_this"],[112,17,358,8],[112,18,358,13,"props"],[112,23,358,18],[112,24,358,19,"onDrawerSlide"],[112,37,358,32],[112,39,358,34],[113,10,359,6,"gestureOptions"],[113,24,359,20],[113,25,359,21,"listener"],[113,33,359,29],[113,36,359,33,"ev"],[113,38,359,35],[113,42,359,40],[114,12,360,8],[114,16,360,14,"translationX"],[114,28,360,26],[114,31,360,29,"Math"],[114,35,360,33],[114,36,360,34,"floor"],[114,41,360,39],[114,42,360,40,"Math"],[114,46,360,44],[114,47,360,45,"abs"],[114,50,360,48],[114,51,360,49,"ev"],[114,53,360,51],[114,54,360,52,"nativeEvent"],[114,65,360,63],[114,66,360,64,"translationX"],[114,78,360,76],[114,79,360,77],[114,80,360,78],[115,12,361,8],[115,16,361,14,"position"],[115,24,361,22],[115,27,361,25,"translationX"],[115,39,361,37],[115,42,361,40,"_this"],[115,47,361,40],[115,48,361,45,"state"],[115,53,361,50],[115,54,361,51,"containerWidth"],[115,68,361,65],[116,12,363,8,"_this"],[116,17,363,8],[116,18,363,13,"props"],[116,23,363,18],[116,24,363,19,"onDrawerSlide"],[116,37,363,32],[116,40,363,35,"position"],[116,48,363,43],[116,49,363,44],[117,10,364,6],[117,11,364,7],[118,8,365,4],[119,8,367,4,"_this"],[119,13,367,4],[119,14,367,9,"onGestureEvent"],[119,28,367,23],[119,31,367,26,"Animated"],[119,52,367,34],[119,53,367,35,"event"],[119,58,367,40],[119,59,368,6],[119,60,368,7],[120,10,368,9,"nativeEvent"],[120,21,368,20],[120,23,368,22],[121,12,368,24,"translationX"],[121,24,368,36],[121,26,368,38,"dragXValue"],[121,36,368,48],[122,12,368,50,"x"],[122,13,368,51],[122,15,368,53,"touchXValue"],[123,10,368,65],[124,8,368,67],[124,9,368,68],[124,10,368,69],[124,12,369,6,"gestureOptions"],[124,26,370,4],[124,27,370,5],[125,6,371,2],[125,7,371,3],[126,6,371,3,"_this"],[126,11,371,3],[126,12,373,10,"handleContainerLayout"],[126,33,373,31],[126,36,373,34,"_ref"],[126,40,373,34],[126,44,373,74],[127,8,373,74],[127,12,373,37,"nativeEvent"],[127,23,373,48],[127,26,373,48,"_ref"],[127,30,373,48],[127,31,373,37,"nativeEvent"],[127,42,373,48],[128,8,374,4,"_this"],[128,13,374,4],[128,14,374,9,"setState"],[128,22,374,17],[128,23,374,18],[129,10,374,20,"containerWidth"],[129,24,374,34],[129,26,374,36,"nativeEvent"],[129,37,374,47],[129,38,374,48,"layout"],[129,44,374,54],[129,45,374,55,"width"],[130,8,374,61],[130,9,374,62],[130,10,374,63],[131,6,375,2],[131,7,375,3],[132,6,375,3,"_this"],[132,11,375,3],[132,12,377,10,"emitStateChanged"],[132,28,377,26],[132,31,377,29],[132,32,378,4,"newState"],[132,40,378,25],[132,42,379,4,"drawerWillShow"],[132,56,379,27],[132,61,380,7],[133,8,381,4,"_this"],[133,13,381,4],[133,14,381,9,"props"],[133,19,381,14],[133,20,381,15,"onDrawerStateChanged"],[133,40,381,35],[133,43,381,38,"newState"],[133,51,381,46],[133,53,381,48,"drawerWillShow"],[133,67,381,62],[133,68,381,63],[134,6,382,2],[134,7,382,3],[135,6,382,3,"_this"],[135,11,382,3],[135,12,384,10,"openingHandlerStateChange"],[135,37,384,35],[135,40,384,38,"_ref2"],[135,45,384,38],[135,49,386,64],[136,8,386,64],[136,12,385,4,"nativeEvent"],[136,23,385,15],[136,26,385,15,"_ref2"],[136,31,385,15],[136,32,385,4,"nativeEvent"],[136,43,385,15],[137,8,387,4],[137,12,387,8,"nativeEvent"],[137,23,387,19],[137,24,387,20,"oldState"],[137,32,387,28],[137,37,387,33,"State"],[137,64,387,33],[137,65,387,33,"State"],[137,82,387,38],[137,83,387,39,"ACTIVE"],[137,89,387,45],[137,91,387,47],[138,10,388,6,"_this"],[138,15,388,6],[138,16,388,11,"handleRelease"],[138,29,388,24],[138,30,388,25],[139,12,388,27,"nativeEvent"],[140,10,388,39],[140,11,388,40],[140,12,388,41],[141,8,389,4],[141,9,389,5],[141,15,389,11],[141,19,389,15,"nativeEvent"],[141,30,389,26],[141,31,389,27,"state"],[141,36,389,32],[141,41,389,37,"State"],[141,68,389,37],[141,69,389,37,"State"],[141,86,389,42],[141,87,389,43,"ACTIVE"],[141,93,389,49],[141,95,389,51],[142,10,390,6,"_this"],[142,15,390,6],[142,16,390,11,"emitStateChanged"],[142,32,390,27],[142,33,390,28,"DRAGGING"],[142,41,390,36],[142,43,390,38],[142,48,390,43],[142,49,390,44],[143,10,391,6,"_this"],[143,15,391,6],[143,16,391,11,"setState"],[143,24,391,19],[143,25,391,20],[144,12,391,22,"drawerState"],[144,23,391,33],[144,25,391,35,"DRAGGING"],[145,10,391,44],[145,11,391,45],[145,12,391,46],[146,10,392,6],[146,14,392,10,"_this"],[146,19,392,10],[146,20,392,15,"props"],[146,25,392,20],[146,26,392,21,"keyboardDismissMode"],[146,45,392,40],[146,50,392,45],[146,59,392,54],[146,61,392,56],[147,12,393,8,"Keyboard"],[147,33,393,16],[147,34,393,17,"dismiss"],[147,41,393,24],[147,42,393,25],[147,43,393,26],[148,10,394,6],[149,10,395,6],[149,14,395,10,"_this"],[149,19,395,10],[149,20,395,15,"props"],[149,25,395,20],[149,26,395,21,"hideStatusBar"],[149,39,395,34],[149,41,395,36],[150,12,396,8,"StatusBar"],[150,34,396,17],[150,35,396,18,"setHidden"],[150,44,396,27],[150,45,396,28],[150,49,396,32],[150,51,396,34,"_this"],[150,56,396,34],[150,57,396,39,"props"],[150,62,396,44],[150,63,396,45,"statusBarAnimation"],[150,81,396,63],[150,85,396,67],[150,92,396,74],[150,93,396,75],[151,10,397,6],[152,8,398,4],[153,6,399,2],[153,7,399,3],[154,6,399,3,"_this"],[154,11,399,3],[154,12,401,10,"onTapHandlerStateChange"],[154,35,401,33],[154,38,401,36,"_ref3"],[154,43,401,36],[154,47,403,64],[155,8,403,64],[155,12,402,4,"nativeEvent"],[155,23,402,15],[155,26,402,15,"_ref3"],[155,31,402,15],[155,32,402,4,"nativeEvent"],[155,43,402,15],[156,8,404,4],[156,12,405,6,"_this"],[156,17,405,6],[156,18,405,11,"drawerShown"],[156,29,405,22],[156,33,406,6,"nativeEvent"],[156,44,406,17],[156,45,406,18,"oldState"],[156,53,406,26],[156,58,406,31,"State"],[156,85,406,31],[156,86,406,31,"State"],[156,103,406,36],[156,104,406,37,"ACTIVE"],[156,110,406,43],[156,114,407,6,"_this"],[156,119,407,6],[156,120,407,11,"props"],[156,125,407,16],[156,126,407,17,"drawerLockMode"],[156,140,407,31],[156,145,407,36],[156,158,407,49],[156,160,408,6],[157,10,409,6,"_this"],[157,15,409,6],[157,16,409,11,"closeDrawer"],[157,27,409,22],[157,28,409,23],[157,29,409,24],[158,8,410,4],[159,6,411,2],[159,7,411,3],[160,6,411,3,"_this"],[160,11,411,3],[160,12,413,10,"handleRelease"],[160,25,413,23],[160,28,413,26,"_ref4"],[160,33,413,26],[160,37,415,64],[161,8,415,64],[161,12,414,4,"nativeEvent"],[161,23,414,15],[161,26,414,15,"_ref4"],[161,31,414,15],[161,32,414,4,"nativeEvent"],[161,43,414,15],[162,8,416,4],[162,12,416,4,"_this$props"],[162,23,416,4],[162,26,416,56,"_this"],[162,31,416,56],[162,32,416,61,"props"],[162,37,416,66],[163,10,416,12,"drawerWidth"],[163,21,416,23],[163,24,416,23,"_this$props"],[163,35,416,23],[163,36,416,12,"drawerWidth"],[163,47,416,23],[164,10,416,25,"drawerPosition"],[164,24,416,39],[164,27,416,39,"_this$props"],[164,38,416,39],[164,39,416,25,"drawerPosition"],[164,53,416,39],[165,10,416,41,"drawerType"],[165,20,416,51],[165,23,416,51,"_this$props"],[165,34,416,51],[165,35,416,41,"drawerType"],[165,45,416,51],[166,8,417,4],[166,12,417,12,"containerWidth"],[166,26,417,26],[166,29,417,31,"_this"],[166,34,417,31],[166,35,417,36,"state"],[166,40,417,41],[166,41,417,12,"containerWidth"],[166,55,417,26],[167,8,418,4],[167,12,418,24,"dragX"],[167,17,418,29],[167,20,418,56,"nativeEvent"],[167,31,418,67],[167,32,418,10,"translationX"],[167,44,418,22],[168,10,418,31,"velocityX"],[168,19,418,40],[168,22,418,56,"nativeEvent"],[168,33,418,67],[168,34,418,31,"velocityX"],[168,43,418,40],[169,10,418,45,"touchX"],[169,16,418,51],[169,19,418,56,"nativeEvent"],[169,30,418,67],[169,31,418,42,"x"],[169,32,418,43],[170,8,420,4],[170,12,420,8,"drawerPosition"],[170,26,420,22],[170,31,420,27],[170,37,420,33],[170,39,420,35],[171,10,421,6],[172,10,422,6],[173,10,423,6,"dragX"],[173,15,423,11],[173,18,423,14],[173,19,423,15,"dragX"],[173,24,423,20],[174,10,424,6,"touchX"],[174,16,424,12],[174,19,424,15,"containerWidth"],[174,33,424,29],[174,36,424,32,"touchX"],[174,42,424,38],[175,10,425,6,"velocityX"],[175,19,425,15],[175,22,425,18],[175,23,425,19,"velocityX"],[175,32,425,28],[176,8,426,4],[177,8,428,4],[177,12,428,10,"gestureStartX"],[177,25,428,23],[177,28,428,26,"touchX"],[177,34,428,32],[177,37,428,35,"dragX"],[177,42,428,40],[178,8,429,4],[178,12,429,8,"dragOffsetBasedOnStart"],[178,34,429,30],[178,37,429,33],[178,38,429,34],[179,8,431,4],[179,12,431,8,"drawerType"],[179,22,431,18],[179,27,431,23],[179,34,431,30],[179,36,431,32],[180,10,432,6,"dragOffsetBasedOnStart"],[180,32,432,28],[180,35,433,8,"gestureStartX"],[180,48,433,21],[180,51,433,24,"drawerWidth"],[180,62,433,36],[180,65,433,39,"gestureStartX"],[180,78,433,52],[180,81,433,55,"drawerWidth"],[180,92,433,67],[180,95,433,70],[180,96,433,71],[181,8,434,4],[182,8,436,4],[182,12,436,10,"startOffsetX"],[182,24,436,22],[182,27,437,6,"dragX"],[182,32,437,11],[182,35,437,14,"dragOffsetBasedOnStart"],[182,57,437,36],[182,61,437,40,"_this"],[182,66,437,40],[182,67,437,45,"drawerShown"],[182,78,437,56],[182,81,437,59,"drawerWidth"],[182,92,437,70],[182,95,437,74],[182,96,437,75],[182,97,437,76],[183,8,438,4],[183,12,438,10,"projOffsetX"],[183,23,438,21],[183,26,438,24,"startOffsetX"],[183,38,438,36],[183,41,438,39,"DRAG_TOSS"],[183,50,438,48],[183,53,438,51,"velocityX"],[183,62,438,60],[184,8,440,4],[184,12,440,10,"shouldOpen"],[184,22,440,20],[184,25,440,23,"projOffsetX"],[184,36,440,34],[184,39,440,37,"drawerWidth"],[184,50,440,48],[184,53,440,52],[184,54,440,53],[185,8,442,4],[185,12,442,8,"shouldOpen"],[185,22,442,18],[185,24,442,20],[186,10,443,6,"_this"],[186,15,443,6],[186,16,443,11,"animateDrawer"],[186,29,443,24],[186,30,443,25,"startOffsetX"],[186,42,443,37],[186,44,443,39,"drawerWidth"],[186,55,443,50],[186,57,443,53,"velocityX"],[186,66,443,62],[186,67,443,63],[187,8,444,4],[187,9,444,5],[187,15,444,11],[188,10,445,6,"_this"],[188,15,445,6],[188,16,445,11,"animateDrawer"],[188,29,445,24],[188,30,445,25,"startOffsetX"],[188,42,445,37],[188,44,445,39],[188,45,445,40],[188,47,445,42,"velocityX"],[188,56,445,51],[188,57,445,52],[189,8,446,4],[190,6,447,2],[190,7,447,3],[191,6,447,3,"_this"],[191,11,447,3],[191,12,449,10,"updateShowing"],[191,25,449,23],[191,28,449,27,"showing"],[191,35,449,43],[191,39,449,48],[192,8,450,4,"_this"],[192,13,450,4],[192,14,450,9,"drawerShown"],[192,25,450,20],[192,28,450,23,"showing"],[192,35,450,30],[193,8,451,4,"_this"],[193,13,451,4],[193,14,451,9,"accessibilityIsModalView"],[193,38,451,33],[193,39,451,34,"current"],[193,46,451,41],[193,48,451,43,"setNativeProps"],[193,62,451,57],[193,63,451,58],[194,10,452,6,"accessibilityViewIsModal"],[194,34,452,30],[194,36,452,32,"showing"],[195,8,453,4],[195,9,453,5],[195,10,453,6],[196,8,454,4,"_this"],[196,13,454,4],[196,14,454,9,"pointerEventsView"],[196,31,454,26],[196,32,454,27,"current"],[196,39,454,34],[196,41,454,36,"setNativeProps"],[196,55,454,50],[196,56,454,51],[197,10,455,6,"pointerEvents"],[197,23,455,19],[197,25,455,21,"showing"],[197,32,455,28],[197,35,455,31],[197,41,455,37],[197,44,455,40],[198,8,456,4],[198,9,456,5],[198,10,456,6],[199,8,457,4],[199,12,457,4,"_this$props2"],[199,24,457,4],[199,27,457,60,"_this"],[199,32,457,60],[199,33,457,65,"props"],[199,38,457,70],[200,10,457,12,"drawerPosition"],[200,24,457,26],[200,27,457,26,"_this$props2"],[200,39,457,26],[200,40,457,12,"drawerPosition"],[200,54,457,26],[201,10,457,28,"minSwipeDistance"],[201,26,457,44],[201,29,457,44,"_this$props2"],[201,41,457,44],[201,42,457,28,"minSwipeDistance"],[201,58,457,44],[202,10,457,46,"edgeWidth"],[202,19,457,55],[202,22,457,55,"_this$props2"],[202,34,457,55],[202,35,457,46,"edgeWidth"],[202,44,457,55],[203,8,458,4],[203,12,458,10,"fromLeft"],[203,20,458,18],[203,23,458,21,"drawerPosition"],[203,37,458,35],[203,42,458,40],[203,48,458,46],[204,8,459,4],[205,8,460,4],[206,8,461,4],[207,8,462,4],[207,12,462,10,"gestureOrientation"],[207,30,462,28],[207,33,463,6],[207,34,463,7,"fromLeft"],[207,42,463,15],[207,45,463,18],[207,46,463,19],[207,49,463,22],[207,50,463,23],[207,51,463,24],[207,56,463,29,"_this"],[207,61,463,29],[207,62,463,34,"drawerShown"],[207,73,463,45],[207,76,463,48],[207,77,463,49],[207,78,463,50],[207,81,463,53],[207,82,463,54],[207,83,463,55],[208,8,464,4],[209,8,465,4],[210,8,466,4],[211,8,467,4],[211,12,467,10,"hitSlop"],[211,19,467,17],[211,22,467,20,"fromLeft"],[211,30,467,28],[211,33,468,8],[212,10,468,10,"left"],[212,14,468,14],[212,16,468,16],[212,17,468,17],[213,10,468,19,"width"],[213,15,468,24],[213,17,468,26,"showing"],[213,24,468,33],[213,27,468,36,"undefined"],[213,36,468,45],[213,39,468,48,"edgeWidth"],[214,8,468,58],[214,9,468,59],[214,12,469,8],[215,10,469,10,"right"],[215,15,469,15],[215,17,469,17],[215,18,469,18],[216,10,469,20,"width"],[216,15,469,25],[216,17,469,27,"showing"],[216,24,469,34],[216,27,469,37,"undefined"],[216,36,469,46],[216,39,469,49,"edgeWidth"],[217,8,469,59],[217,9,469,60],[218,8,470,4],[219,8,471,4,"_this"],[219,13,471,4],[219,14,471,9,"panGestureHandler"],[219,31,471,26],[219,32,471,27,"current"],[219,39,471,34],[219,41,471,36,"setNativeProps"],[219,55,471,50],[219,56,471,51],[220,10,472,6,"hitSlop"],[220,17,472,13],[221,10,473,6,"activeOffsetX"],[221,23,473,19],[221,25,473,21,"gestureOrientation"],[221,43,473,39],[221,46,473,42,"minSwipeDistance"],[222,8,474,4],[222,9,474,5],[222,10,474,6],[223,6,475,2],[223,7,475,3],[224,6,475,3,"_this"],[224,11,475,3],[224,12,477,10,"animateDrawer"],[224,25,477,23],[224,28,477,26],[224,29,478,4,"fromValue"],[224,38,478,40],[224,40,479,4,"toValue"],[224,47,479,19],[224,49,480,4,"velocity"],[224,57,480,20],[224,59,481,4,"speed"],[224,64,481,18],[224,69,482,7],[225,8,483,4,"_this"],[225,13,483,4],[225,14,483,9,"state"],[225,19,483,14],[225,20,483,15,"dragX"],[225,25,483,20],[225,26,483,21,"setValue"],[225,34,483,29],[225,35,483,30],[225,36,483,31],[225,37,483,32],[226,8,484,4,"_this"],[226,13,484,4],[226,14,484,9,"state"],[226,19,484,14],[226,20,484,15,"touchX"],[226,26,484,21],[226,27,484,22,"setValue"],[226,35,484,30],[226,36,485,6,"_this"],[226,41,485,6],[226,42,485,11,"props"],[226,47,485,16],[226,48,485,17,"drawerPosition"],[226,62,485,31],[226,67,485,36],[226,73,485,42],[226,76,485,45],[226,77,485,46],[226,80,485,49,"_this"],[226,85,485,49],[226,86,485,54,"state"],[226,91,485,59],[226,92,485,60,"containerWidth"],[226,106,486,4],[226,107,486,5],[227,8,488,4],[227,12,488,8,"fromValue"],[227,21,488,17],[227,25,488,21],[227,29,488,25],[227,31,488,27],[228,10,489,6],[228,14,489,10,"nextFramePosition"],[228,31,489,27],[228,34,489,30,"fromValue"],[228,43,489,39],[229,10,490,6],[229,14,490,10,"_this"],[229,19,490,10],[229,20,490,15,"props"],[229,25,490,20],[229,26,490,21,"useNativeAnimations"],[229,45,490,40],[229,47,490,42],[230,12,491,8],[231,12,492,8],[232,12,493,8],[233,12,494,8],[234,12,495,8],[234,16,495,12,"fromValue"],[234,25,495,21],[234,28,495,24,"toValue"],[234,35,495,31],[234,39,495,35,"velocity"],[234,47,495,43],[234,50,495,46],[234,51,495,47],[234,53,495,49],[235,14,496,10,"nextFramePosition"],[235,31,496,27],[235,34,496,30,"Math"],[235,38,496,34],[235,39,496,35,"min"],[235,42,496,38],[235,43,496,39,"fromValue"],[235,52,496,48],[235,55,496,51,"velocity"],[235,63,496,59],[235,66,496,62],[235,70,496,66],[235,72,496,68,"toValue"],[235,79,496,75],[235,80,496,76],[236,12,497,8],[236,13,497,9],[236,19,497,15],[236,23,497,19,"fromValue"],[236,32,497,28],[236,35,497,31,"toValue"],[236,42,497,38],[236,46,497,42,"velocity"],[236,54,497,50],[236,57,497,53],[236,58,497,54],[236,60,497,56],[237,14,498,10,"nextFramePosition"],[237,31,498,27],[237,34,498,30,"Math"],[237,38,498,34],[237,39,498,35,"max"],[237,42,498,38],[237,43,498,39,"fromValue"],[237,52,498,48],[237,55,498,51,"velocity"],[237,63,498,59],[237,66,498,62],[237,70,498,66],[237,72,498,68,"toValue"],[237,79,498,75],[237,80,498,76],[238,12,499,8],[239,10,500,6],[240,10,501,6,"_this"],[240,15,501,6],[240,16,501,11,"state"],[240,21,501,16],[240,22,501,17,"drawerTranslation"],[240,39,501,34],[240,40,501,35,"setValue"],[240,48,501,43],[240,49,501,44,"nextFramePosition"],[240,66,501,61],[240,67,501,62],[241,8,502,4],[242,8,504,4],[242,12,504,10,"willShow"],[242,20,504,18],[242,23,504,21,"toValue"],[242,30,504,28],[242,35,504,33],[242,36,504,34],[243,8,505,4,"_this"],[243,13,505,4],[243,14,505,9,"updateShowing"],[243,27,505,22],[243,28,505,23,"willShow"],[243,36,505,31],[243,37,505,32],[244,8,506,4,"_this"],[244,13,506,4],[244,14,506,9,"emitStateChanged"],[244,30,506,25],[244,31,506,26,"SETTLING"],[244,39,506,34],[244,41,506,36,"willShow"],[244,49,506,44],[244,50,506,45],[245,8,507,4,"_this"],[245,13,507,4],[245,14,507,9,"setState"],[245,22,507,17],[245,23,507,18],[246,10,507,20,"drawerState"],[246,21,507,31],[246,23,507,33,"SETTLING"],[247,8,507,42],[247,9,507,43],[247,10,507,44],[248,8,508,4],[248,12,508,8,"_this"],[248,17,508,8],[248,18,508,13,"props"],[248,23,508,18],[248,24,508,19,"hideStatusBar"],[248,37,508,32],[248,39,508,34],[249,10,509,6,"StatusBar"],[249,32,509,15],[249,33,509,16,"setHidden"],[249,42,509,25],[249,43,509,26,"willShow"],[249,51,509,34],[249,53,509,36,"_this"],[249,58,509,36],[249,59,509,41,"props"],[249,64,509,46],[249,65,509,47,"statusBarAnimation"],[249,83,509,65],[249,87,509,69],[249,94,509,76],[249,95,509,77],[250,8,510,4],[251,8,511,4,"Animated"],[251,29,511,12],[251,30,511,13,"spring"],[251,36,511,19],[251,37,511,20,"_this"],[251,42,511,20],[251,43,511,25,"state"],[251,48,511,30],[251,49,511,31,"drawerTranslation"],[251,66,511,48],[251,68,511,50],[252,10,512,6,"velocity"],[252,18,512,14],[253,10,513,6,"bounciness"],[253,20,513,16],[253,22,513,18],[253,23,513,19],[254,10,514,6,"toValue"],[254,17,514,13],[255,10,515,6,"useNativeDriver"],[255,25,515,21],[255,27,515,23,"_this"],[255,32,515,23],[255,33,515,28,"props"],[255,38,515,33],[255,39,515,34,"useNativeAnimations"],[255,58,515,54],[256,10,516,6,"speed"],[256,15,516,11],[256,17,516,13,"speed"],[256,22,516,18],[256,26,516,22,"undefined"],[257,8,517,4],[257,9,517,5],[257,10,517,6],[257,11,517,7,"start"],[257,16,517,12],[257,17,517,13,"_ref5"],[257,22,517,13],[257,26,517,31],[258,10,517,31],[258,14,517,16,"finished"],[258,22,517,24],[258,25,517,24,"_ref5"],[258,30,517,24],[258,31,517,16,"finished"],[258,39,517,24],[259,10,518,6],[259,14,518,10,"finished"],[259,22,518,18],[259,24,518,20],[260,12,519,8,"_this"],[260,17,519,8],[260,18,519,13,"emitStateChanged"],[260,34,519,29],[260,35,519,30,"IDLE"],[260,39,519,34],[260,41,519,36,"willShow"],[260,49,519,44],[260,50,519,45],[261,12,520,8,"_this"],[261,17,520,8],[261,18,520,13,"setState"],[261,26,520,21],[261,27,520,22],[262,14,520,24,"drawerOpened"],[262,26,520,36],[262,28,520,38,"willShow"],[263,12,520,47],[263,13,520,48],[263,14,520,49],[264,12,521,8],[264,16,521,12,"_this"],[264,21,521,12],[264,22,521,17,"state"],[264,27,521,22],[264,28,521,23,"drawerState"],[264,39,521,34],[264,44,521,39,"DRAGGING"],[264,52,521,47],[264,54,521,49],[265,14,522,10],[266,14,523,10],[267,14,524,10,"_this"],[267,19,524,10],[267,20,524,15,"setState"],[267,28,524,23],[267,29,524,24],[268,16,524,26,"drawerState"],[268,27,524,37],[268,29,524,39,"IDLE"],[269,14,524,44],[269,15,524,45],[269,16,524,46],[270,12,525,8],[271,12,526,8],[271,16,526,12,"willShow"],[271,24,526,20],[271,26,526,22],[272,14,527,10,"_this"],[272,19,527,10],[272,20,527,15,"props"],[272,25,527,20],[272,26,527,21,"onDrawerOpen"],[272,38,527,33],[272,41,527,36],[272,42,527,37],[273,12,528,8],[273,13,528,9],[273,19,528,15],[274,14,529,10,"_this"],[274,19,529,10],[274,20,529,15,"props"],[274,25,529,20],[274,26,529,21,"onDrawerClose"],[274,39,529,34],[274,42,529,37],[274,43,529,38],[275,12,530,8],[276,10,531,6],[277,8,532,4],[277,9,532,5],[277,10,532,6],[278,6,533,2],[278,7,533,3],[279,6,533,3,"_this"],[279,11,533,3],[279,12,535,2,"openDrawer"],[279,22,535,12],[279,25,535,15],[279,37,535,55],[280,8,535,55],[280,12,535,16,"options"],[280,19,535,45],[280,22,535,45,"arguments"],[280,31,535,45],[280,32,535,45,"length"],[280,38,535,45],[280,46,535,45,"arguments"],[280,55,535,45],[280,63,535,45,"undefined"],[280,72,535,45],[280,75,535,45,"arguments"],[280,84,535,45],[280,90,535,48],[280,91,535,49],[280,92,535,50],[281,8,536,4,"_this"],[281,13,536,4],[281,14,536,9,"animateDrawer"],[281,27,536,22],[282,8,537,6],[283,8,538,6,"undefined"],[283,17,538,15],[283,19,539,6,"_this"],[283,24,539,6],[283,25,539,11,"props"],[283,30,539,16],[283,31,539,17,"drawerWidth"],[283,42,539,28],[283,44,540,6,"options"],[283,51,540,13],[283,52,540,14,"velocity"],[283,60,540,22],[283,63,540,25,"options"],[283,70,540,32],[283,71,540,33,"velocity"],[283,79,540,41],[283,82,540,44],[283,83,540,45],[283,85,541,6,"options"],[283,92,541,13],[283,93,541,14,"speed"],[283,98,542,4],[283,99,542,5],[285,8,544,4],[286,8,545,4],[287,8,546,4,"_this"],[287,13,546,4],[287,14,546,9,"forceUpdate"],[287,25,546,20],[287,26,546,21],[287,27,546,22],[288,6,547,2],[288,7,547,3],[289,6,547,3,"_this"],[289,11,547,3],[289,12,549,2,"closeDrawer"],[289,23,549,13],[289,26,549,16],[289,38,549,56],[290,8,549,56],[290,12,549,17,"options"],[290,19,549,46],[290,22,549,46,"arguments"],[290,31,549,46],[290,32,549,46,"length"],[290,38,549,46],[290,46,549,46,"arguments"],[290,55,549,46],[290,63,549,46,"undefined"],[290,72,549,46],[290,75,549,46,"arguments"],[290,84,549,46],[290,90,549,49],[290,91,549,50],[290,92,549,51],[291,8,550,4],[292,8,551,4,"_this"],[292,13,551,4],[292,14,551,9,"animateDrawer"],[292,27,551,22],[292,28,552,6,"undefined"],[292,37,552,15],[292,39,553,6],[292,40,553,7],[292,42,554,6,"options"],[292,49,554,13],[292,50,554,14,"velocity"],[292,58,554,22],[292,61,554,25,"options"],[292,68,554,32],[292,69,554,33,"velocity"],[292,77,554,41],[292,80,554,44],[292,81,554,45],[292,83,555,6,"options"],[292,90,555,13],[292,91,555,14,"speed"],[292,96,556,4],[292,97,556,5],[294,8,558,4],[295,8,559,4],[296,8,560,4,"_this"],[296,13,560,4],[296,14,560,9,"forceUpdate"],[296,25,560,20],[296,26,560,21],[296,27,560,22],[297,6,561,2],[297,7,561,3],[298,6,561,3,"_this"],[298,11,561,3],[298,12,563,10,"renderOverlay"],[298,25,563,23],[298,28,563,26],[298,34,563,32],[299,8,564,4],[300,8,565,4],[300,12,565,4,"invariant"],[300,30,565,13],[300,32,565,14,"_this"],[300,37,565,14],[300,38,565,19,"openValue"],[300,47,565,28],[300,49,565,30],[300,64,565,45],[300,65,565,46],[301,8,566,4],[301,12,566,8,"overlayOpacity"],[301,26,566,22],[302,8,568,4],[302,12,568,8,"_this"],[302,17,568,8],[302,18,568,13,"state"],[302,23,568,18],[302,24,568,19,"drawerState"],[302,35,568,30],[302,40,568,35,"IDLE"],[302,44,568,39],[302,46,568,41],[303,10,569,6,"overlayOpacity"],[303,24,569,20],[303,27,569,23,"_this"],[303,32,569,23],[303,33,569,28,"openValue"],[303,42,569,37],[304,8,570,4],[304,9,570,5],[304,15,570,11],[305,10,571,6,"overlayOpacity"],[305,24,571,20],[305,27,571,23,"_this"],[305,32,571,23],[305,33,571,28,"state"],[305,38,571,33],[305,39,571,34,"drawerOpened"],[305,51,571,46],[305,54,571,49],[305,55,571,50],[305,58,571,53],[305,59,571,54],[306,8,572,4],[307,8,574,4],[307,12,574,10,"dynamicOverlayStyles"],[307,32,574,30],[307,35,574,33],[308,10,575,6,"opacity"],[308,17,575,13],[308,19,575,15,"overlayOpacity"],[308,33,575,29],[309,10,576,6,"backgroundColor"],[309,25,576,21],[309,27,576,23,"_this"],[309,32,576,23],[309,33,576,28,"props"],[309,38,576,33],[309,39,576,34,"overlayColor"],[310,8,577,4],[310,9,577,5],[311,8,579,4],[311,28,580,6],[311,32,580,6,"_jsxDevRuntime"],[311,46,580,6],[311,47,580,6,"jsxDEV"],[311,53,580,6],[311,55,580,7,"require"],[311,62,580,7],[311,63,580,7,"_dependencyMap"],[311,77,580,7],[311,116,580,7,"TapGestureHandler"],[311,133,580,24],[312,10,580,25,"onHandlerStateChange"],[312,30,580,45],[312,32,580,47,"_this"],[312,37,580,47],[312,38,580,52,"onTapHandlerStateChange"],[312,61,580,76],[313,10,580,76,"children"],[313,18,580,76],[313,33,581,8],[313,37,581,8,"_jsxDevRuntime"],[313,51,581,8],[313,52,581,8,"jsxDEV"],[313,58,581,8],[313,60,581,9,"_reactNative"],[313,72,581,9],[313,73,581,9,"Animated"],[313,81,581,17],[313,82,581,18,"View"],[313,86,581,22],[314,12,582,10,"pointerEvents"],[314,25,582,23],[314,27,582,25,"_this"],[314,32,582,25],[314,33,582,30,"drawerShown"],[314,44,582,41],[314,47,582,44],[314,53,582,50],[314,56,582,53],[314,62,582,60],[315,12,583,10,"ref"],[315,15,583,13],[315,17,583,15,"_this"],[315,22,583,15],[315,23,583,20,"pointerEventsView"],[315,40,583,38],[316,12,584,10,"style"],[316,17,584,15],[316,19,584,17],[316,20,584,18,"styles"],[316,26,584,24],[316,27,584,25,"overlay"],[316,34,584,32],[316,36,584,34,"dynamicOverlayStyles"],[316,56,584,54],[317,10,584,56],[318,12,584,56,"fileName"],[318,20,584,56],[318,22,584,56,"_jsxFileName"],[318,34,584,56],[319,12,584,56,"lineNumber"],[319,22,584,56],[320,12,584,56,"columnNumber"],[320,24,584,56],[321,10,584,56],[321,13,584,56,"_this"],[321,18,585,9],[322,8,585,10],[323,10,585,10,"fileName"],[323,18,585,10],[323,20,585,10,"_jsxFileName"],[323,32,585,10],[324,10,585,10,"lineNumber"],[324,20,585,10],[325,10,585,10,"columnNumber"],[325,22,585,10],[326,8,585,10],[326,11,585,10,"_this"],[326,16,586,25],[326,17,586,26],[327,6,588,2],[327,7,588,3],[328,6,588,3,"_this"],[328,11,588,3],[328,12,590,10,"renderDrawer"],[328,24,590,22],[328,27,590,25],[328,33,590,31],[329,8,591,4],[329,12,591,4,"_this$props3"],[329,24,591,4],[329,27,598,8,"_this"],[329,32,598,8],[329,33,598,13,"props"],[329,38,598,18],[330,10,592,6,"drawerBackgroundColor"],[330,31,592,27],[330,34,592,27,"_this$props3"],[330,46,592,27],[330,47,592,6,"drawerBackgroundColor"],[330,68,592,27],[331,10,593,6,"drawerWidth"],[331,21,593,17],[331,24,593,17,"_this$props3"],[331,36,593,17],[331,37,593,6,"drawerWidth"],[331,48,593,17],[332,10,594,6,"drawerPosition"],[332,24,594,20],[332,27,594,20,"_this$props3"],[332,39,594,20],[332,40,594,6,"drawerPosition"],[332,54,594,20],[333,10,595,6,"drawerType"],[333,20,595,16],[333,23,595,16,"_this$props3"],[333,35,595,16],[333,36,595,6,"drawerType"],[333,46,595,16],[334,10,596,6,"drawerContainerStyle"],[334,30,596,26],[334,33,596,26,"_this$props3"],[334,45,596,26],[334,46,596,6,"drawerContainerStyle"],[334,66,596,26],[335,10,597,6,"contentContainerStyle"],[335,31,597,27],[335,34,597,27,"_this$props3"],[335,46,597,27],[335,47,597,6,"contentContainerStyle"],[335,68,597,27],[336,8,600,4],[336,12,600,10,"fromLeft"],[336,20,600,18],[336,23,600,21,"drawerPosition"],[336,37,600,35],[336,42,600,40],[336,48,600,46],[337,8,601,4],[337,12,601,10,"drawerSlide"],[337,23,601,21],[337,26,601,24,"drawerType"],[337,36,601,34],[337,41,601,39],[337,47,601,45],[338,8,602,4],[338,12,602,10,"containerSlide"],[338,26,602,24],[338,29,602,27,"drawerType"],[338,39,602,37],[338,44,602,42],[338,51,602,49],[340,8,604,4],[341,8,605,4],[342,8,606,4],[343,8,607,4],[344,8,608,4],[344,12,608,10,"reverseContentDirection"],[344,35,608,33],[344,38,608,36,"I18nManager"],[344,62,608,47],[344,63,608,48,"isRTL"],[344,68,608,53],[344,71,608,56,"fromLeft"],[344,79,608,64],[344,82,608,67],[344,83,608,68,"fromLeft"],[344,91,608,76],[345,8,610,4],[345,12,610,10,"dynamicDrawerStyles"],[345,31,610,29],[345,34,610,32],[346,10,611,6,"backgroundColor"],[346,25,611,21],[346,27,611,23,"drawerBackgroundColor"],[346,48,611,44],[347,10,612,6,"width"],[347,15,612,11],[347,17,612,13,"drawerWidth"],[348,8,613,4],[348,9,613,5],[349,8,614,4],[349,12,614,10,"openValue"],[349,21,614,19],[349,24,614,22,"_this"],[349,29,614,22],[349,30,614,27,"openValue"],[349,39,614,36],[350,8,615,4],[350,12,615,4,"invariant"],[350,30,615,13],[350,32,615,14,"openValue"],[350,41,615,23],[350,43,615,25],[350,58,615,40],[350,59,615,41],[351,8,617,4],[351,12,617,8,"containerStyles"],[351,27,617,23],[352,8,618,4],[352,12,618,8,"containerSlide"],[352,26,618,22],[352,28,618,24],[353,10,619,6],[353,14,619,12,"containerTranslateX"],[353,33,619,31],[353,36,619,34,"openValue"],[353,45,619,43],[353,46,619,44,"interpolate"],[353,57,619,55],[353,58,619,56],[354,12,620,8,"inputRange"],[354,22,620,18],[354,24,620,20],[354,25,620,21],[354,26,620,22],[354,28,620,24],[354,29,620,25],[354,30,620,26],[355,12,621,8,"outputRange"],[355,23,621,19],[355,25,621,21,"fromLeft"],[355,33,621,29],[355,36,621,32],[355,37,621,33],[355,38,621,34],[355,40,621,36,"drawerWidth"],[355,51,621,47],[355,52,621,49],[355,55,621,52],[355,56,621,53],[355,57,621,54],[355,59,621,56],[355,60,621,57,"drawerWidth"],[355,71,621,69],[355,72,621,70],[356,12,622,8,"extrapolate"],[356,23,622,19],[356,25,622,21],[357,10,623,6],[357,11,623,7],[357,12,623,8],[358,10,624,6,"containerStyles"],[358,25,624,21],[358,28,624,24],[359,12,625,8,"transform"],[359,21,625,17],[359,23,625,19],[359,24,625,20],[360,14,625,22,"translateX"],[360,24,625,32],[360,26,625,34,"containerTranslateX"],[361,12,625,54],[361,13,625,55],[362,10,626,6],[362,11,626,7],[363,8,627,4],[364,8,629,4],[364,12,629,8,"drawerTranslateX"],[364,28,629,56],[364,31,629,59],[364,32,629,60],[365,8,630,4],[365,12,630,8,"drawerSlide"],[365,23,630,19],[365,25,630,21],[366,10,631,6],[366,14,631,12,"closedDrawerOffset"],[366,32,631,30],[366,35,631,33,"fromLeft"],[366,43,631,41],[366,46,631,44],[366,47,631,45,"drawerWidth"],[366,58,631,57],[366,61,631,60,"drawerWidth"],[366,72,631,72],[367,10,632,6],[367,14,632,10,"_this"],[367,19,632,10],[367,20,632,15,"state"],[367,25,632,20],[367,26,632,21,"drawerState"],[367,37,632,32],[367,42,632,37,"IDLE"],[367,46,632,41],[367,48,632,43],[368,12,633,8,"drawerTranslateX"],[368,28,633,24],[368,31,633,27,"openValue"],[368,40,633,36],[368,41,633,37,"interpolate"],[368,52,633,48],[368,53,633,49],[369,14,634,10,"inputRange"],[369,24,634,20],[369,26,634,22],[369,27,634,23],[369,28,634,24],[369,30,634,26],[369,31,634,27],[369,32,634,28],[370,14,635,10,"outputRange"],[370,25,635,21],[370,27,635,23],[370,28,635,24,"closedDrawerOffset"],[370,46,635,42],[370,48,635,44],[370,49,635,45],[370,50,635,46],[371,14,636,10,"extrapolate"],[371,25,636,21],[371,27,636,23],[372,12,637,8],[372,13,637,9],[372,14,637,10],[373,10,638,6],[373,11,638,7],[373,17,638,13],[374,12,639,8,"drawerTranslateX"],[374,28,639,24],[374,31,639,27,"_this"],[374,36,639,27],[374,37,639,32,"state"],[374,42,639,37],[374,43,639,38,"drawerOpened"],[374,55,639,50],[374,58,639,53],[374,59,639,54],[374,62,639,57,"closedDrawerOffset"],[374,80,639,75],[375,10,640,6],[376,8,641,4],[377,8,642,4],[377,12,642,10,"drawerStyles"],[377,24,645,5],[377,27,645,8],[378,10,646,6,"transform"],[378,19,646,15],[378,21,646,17],[378,22,646,18],[379,12,646,20,"translateX"],[379,22,646,30],[379,24,646,32,"drawerTranslateX"],[380,10,646,49],[380,11,646,50],[380,12,646,51],[381,10,647,6,"flexDirection"],[381,23,647,19],[381,25,647,21,"reverseContentDirection"],[381,48,647,44],[381,51,647,47],[381,64,647,60],[381,67,647,63],[382,8,648,4],[382,9,648,5],[383,8,650,4],[383,28,651,6],[383,32,651,6,"_jsxDevRuntime"],[383,46,651,6],[383,47,651,6,"jsxDEV"],[383,53,651,6],[383,55,651,7,"_reactNative"],[383,67,651,7],[383,68,651,7,"Animated"],[383,76,651,15],[383,77,651,16,"View"],[383,81,651,20],[384,10,651,21,"style"],[384,15,651,26],[384,17,651,28,"styles"],[384,23,651,34],[384,24,651,35,"main"],[384,28,651,40],[385,10,651,41,"onLayout"],[385,18,651,49],[385,20,651,51,"_this"],[385,25,651,51],[385,26,651,56,"handleContainerLayout"],[385,47,651,78],[386,10,651,78,"children"],[386,18,651,78],[386,34,652,8],[386,38,652,8,"_jsxDevRuntime"],[386,52,652,8],[386,53,652,8,"jsxDEV"],[386,59,652,8],[386,61,652,9,"_reactNative"],[386,73,652,9],[386,74,652,9,"Animated"],[386,82,652,17],[386,83,652,18,"View"],[386,87,652,22],[387,12,653,10,"style"],[387,17,653,15],[387,19,653,17],[387,20,654,12,"drawerType"],[387,30,654,22],[387,35,654,27],[387,42,654,34],[387,45,655,16,"styles"],[387,51,655,22],[387,52,655,23,"containerOnBack"],[387,67,655,38],[387,70,656,16,"styles"],[387,76,656,22],[387,77,656,23,"containerInFront"],[387,93,656,39],[387,95,657,12,"containerStyles"],[387,110,657,27],[387,112,658,12,"contentContainerStyle"],[387,133,658,33],[387,134,659,12],[388,12,660,10,"importantForAccessibility"],[388,37,660,35],[388,39,661,12,"_this"],[388,44,661,12],[388,45,661,17,"drawerShown"],[388,56,661,28],[388,59,661,31],[388,80,661,52],[388,83,661,55],[388,88,662,11],[389,12,662,11,"children"],[389,20,662,11],[389,23,663,11],[389,30,663,18,"_this"],[389,35,663,18],[389,36,663,23,"props"],[389,41,663,28],[389,42,663,29,"children"],[389,50,663,37],[389,55,663,42],[389,65,663,52],[389,68,664,14,"_this"],[389,73,664,14],[389,74,664,19,"props"],[389,79,664,24],[389,80,664,25,"children"],[389,88,664,33],[389,89,664,34,"_this"],[389,94,664,34],[389,95,664,39,"openValue"],[389,104,664,48],[389,105,664,49],[389,108,665,14,"_this"],[389,113,665,14],[389,114,665,19,"props"],[389,119,665,24],[389,120,665,25,"children"],[389,128,665,33],[389,130,666,11,"_this"],[389,135,666,11],[389,136,666,16,"renderOverlay"],[389,149,666,29],[389,150,666,30],[389,151,666,31],[390,10,666,31],[391,12,666,31,"fileName"],[391,20,666,31],[391,22,666,31,"_jsxFileName"],[391,34,666,31],[392,12,666,31,"lineNumber"],[392,22,666,31],[393,12,666,31,"columnNumber"],[393,24,666,31],[394,10,666,31],[394,13,666,31,"_this"],[394,18,667,23],[394,19,667,24],[394,34,668,8],[394,38,668,8,"_jsxDevRuntime"],[394,52,668,8],[394,53,668,8,"jsxDEV"],[394,59,668,8],[394,61,668,9,"_reactNative"],[394,73,668,9],[394,74,668,9,"Animated"],[394,82,668,17],[394,83,668,18,"View"],[394,87,668,22],[395,12,669,10,"pointerEvents"],[395,25,669,23],[395,27,669,24],[395,37,669,34],[396,12,670,10,"ref"],[396,15,670,13],[396,17,670,15,"_this"],[396,22,670,15],[396,23,670,20,"accessibilityIsModalView"],[396,47,670,45],[397,12,671,10,"accessibilityViewIsModal"],[397,36,671,34],[397,38,671,36,"_this"],[397,43,671,36],[397,44,671,41,"drawerShown"],[397,55,671,53],[398,12,672,10,"style"],[398,17,672,15],[398,19,672,17],[398,20,672,18,"styles"],[398,26,672,24],[398,27,672,25,"drawerContainer"],[398,42,672,40],[398,44,672,42,"drawerStyles"],[398,56,672,54],[398,58,672,56,"drawerContainerStyle"],[398,78,672,76],[398,79,672,78],[399,12,672,78,"children"],[399,20,672,78],[399,35,673,10],[399,39,673,10,"_jsxDevRuntime"],[399,53,673,10],[399,54,673,10,"jsxDEV"],[399,60,673,10],[399,62,673,11,"_reactNative"],[399,74,673,11],[399,75,673,11,"View"],[399,79,673,15],[400,14,673,16,"style"],[400,19,673,21],[400,21,673,23,"dynamicDrawerStyles"],[400,40,673,43],[401,14,673,43,"children"],[401,22,673,43],[401,24,674,13,"_this"],[401,29,674,13],[401,30,674,18,"props"],[401,35,674,23],[401,36,674,24,"renderNavigationView"],[401,56,674,44],[401,57,674,45,"_this"],[401,62,674,45],[401,63,674,50,"openValue"],[401,72,674,77],[402,12,674,78],[403,14,674,78,"fileName"],[403,22,674,78],[403,24,674,78,"_jsxFileName"],[403,36,674,78],[404,14,674,78,"lineNumber"],[404,24,674,78],[405,14,674,78,"columnNumber"],[405,26,674,78],[406,12,674,78],[406,15,674,78,"_this"],[406,20,675,16],[407,10,675,17],[408,12,675,17,"fileName"],[408,20,675,17],[408,22,675,17,"_jsxFileName"],[408,34,675,17],[409,12,675,17,"lineNumber"],[409,22,675,17],[410,12,675,17,"columnNumber"],[410,24,675,17],[411,10,675,17],[411,13,675,17,"_this"],[411,18,676,23],[411,19,676,24],[412,8,676,24],[413,10,676,24,"fileName"],[413,18,676,24],[413,20,676,24,"_jsxFileName"],[413,32,676,24],[414,10,676,24,"lineNumber"],[414,20,676,24],[415,10,676,24,"columnNumber"],[415,22,676,24],[416,8,676,24],[416,11,676,24,"_this"],[416,16,677,21],[416,17,677,22],[417,6,679,2],[417,7,679,3],[418,6,679,3,"_this"],[418,11,679,3],[418,12,681,10,"setPanGestureRef"],[418,28,681,26],[418,31,681,30,"ref"],[418,34,681,52],[418,38,681,57],[419,8,682,4],[420,8,683,4],[421,8,685,6,"_this"],[421,13,685,6],[421,14,685,11,"panGestureHandler"],[421,31,685,28],[421,32,686,6,"current"],[421,39,686,13],[421,42,686,16,"ref"],[421,45,686,19],[422,8,687,4,"_this"],[422,13,687,4],[422,14,687,9,"props"],[422,19,687,14],[422,20,687,15,"onGestureRef"],[422,32,687,27],[422,35,687,30,"ref"],[422,38,687,33],[422,39,687,34],[423,6,688,2],[423,7,688,3],[424,6,221,4],[424,10,221,10,"dragX"],[424,16,221,15],[424,19,221,18],[424,23,221,22,"Animated"],[424,44,221,30],[424,45,221,31,"Value"],[424,50,221,36],[424,51,221,37],[424,52,221,38],[424,53,221,39],[425,6,222,4],[425,10,222,10,"touchX"],[425,17,222,16],[425,20,222,19],[425,24,222,23,"Animated"],[425,45,222,31],[425,46,222,32,"Value"],[425,51,222,37],[425,52,222,38],[425,53,222,39],[425,54,222,40],[426,6,223,4],[426,10,223,10,"drawerTranslation"],[426,28,223,27],[426,31,223,30],[426,35,223,34,"Animated"],[426,56,223,42],[426,57,223,43,"Value"],[426,62,223,48],[426,63,223,49],[426,64,223,50],[426,65,223,51],[427,6,225,4,"_this"],[427,11,225,4],[427,12,225,9,"state"],[427,17,225,14],[427,20,225,17],[428,8,226,6,"dragX"],[428,13,226,11],[428,15,226,6,"dragX"],[428,21,226,11],[429,8,227,6,"touchX"],[429,14,227,12],[429,16,227,6,"touchX"],[429,23,227,12],[430,8,228,6,"drawerTranslation"],[430,25,228,23],[430,27,228,6,"drawerTranslation"],[430,45,228,23],[431,8,229,6,"containerWidth"],[431,22,229,20],[431,24,229,22],[431,25,229,23],[432,8,230,6,"drawerState"],[432,19,230,17],[432,21,230,19,"IDLE"],[432,25,230,23],[433,8,231,6,"drawerOpened"],[433,20,231,18],[433,22,231,20],[434,6,232,4],[434,7,232,5],[435,6,234,4,"_this"],[435,11,234,4],[435,12,234,9,"updateAnimatedEvent"],[435,31,234,28],[435,32,234,29,"props"],[435,38,234,34],[435,40,234,36,"_this"],[435,45,234,36],[435,46,234,41,"state"],[435,51,234,46],[435,52,234,47],[436,6,234,48],[436,13,234,48,"_this"],[436,18,234,48],[437,4,235,2],[438,4,235,3],[438,8,235,3,"_inherits2"],[438,18,235,3],[438,19,235,3,"default"],[438,26,235,3],[438,28,235,3,"DrawerLayout"],[438,40,235,3],[438,42,235,3,"_Component"],[438,52,235,3],[439,4,235,3],[439,15,235,3,"_createClass2"],[439,28,235,3],[439,29,235,3,"default"],[439,36,235,3],[439,38,235,3,"DrawerLayout"],[439,50,235,3],[440,6,235,3,"key"],[440,9,235,3],[441,6,235,3,"value"],[441,11,235,3],[441,13,237,2],[441,22,237,2,"shouldComponentUpdate"],[441,43,237,23,"shouldComponentUpdate"],[441,44,237,24,"props"],[441,49,237,48],[441,51,237,50,"state"],[441,56,237,74],[441,58,237,76],[442,8,238,4],[442,12,239,6],[442,16,239,10],[442,17,239,11,"props"],[442,22,239,16],[442,23,239,17,"drawerPosition"],[442,37,239,31],[442,42,239,36,"props"],[442,47,239,41],[442,48,239,42,"drawerPosition"],[442,62,239,56],[442,66,240,6],[442,70,240,10],[442,71,240,11,"props"],[442,76,240,16],[442,77,240,17,"drawerWidth"],[442,88,240,28],[442,93,240,33,"props"],[442,98,240,38],[442,99,240,39,"drawerWidth"],[442,110,240,50],[442,114,241,6],[442,118,241,10],[442,119,241,11,"props"],[442,124,241,16],[442,125,241,17,"drawerType"],[442,135,241,27],[442,140,241,32,"props"],[442,145,241,37],[442,146,241,38,"drawerType"],[442,156,241,48],[442,160,242,6],[442,164,242,10],[442,165,242,11,"state"],[442,170,242,16],[442,171,242,17,"containerWidth"],[442,185,242,31],[442,190,242,36,"state"],[442,195,242,41],[442,196,242,42,"containerWidth"],[442,210,242,56],[442,212,243,6],[443,10,244,6],[443,14,244,10],[443,15,244,11,"updateAnimatedEvent"],[443,34,244,30],[443,35,244,31,"props"],[443,40,244,36],[443,42,244,38,"state"],[443,47,244,43],[443,48,244,44],[444,8,245,4],[445,8,247,4],[445,15,247,11],[445,19,247,15],[446,6,248,2],[447,4,248,3],[448,6,248,3,"key"],[448,9,248,3],[449,6,248,3,"value"],[449,11,248,3],[449,13,690,2],[449,22,690,2,"render"],[449,28,690,8,"render"],[449,29,690,8],[449,31,690,11],[450,8,691,4],[450,12,691,4,"_this$props4"],[450,24,691,4],[450,27,692,6],[450,31,692,10],[450,32,692,11,"props"],[450,37,692,16],[451,10,691,12,"drawerPosition"],[451,24,691,26],[451,27,691,26,"_this$props4"],[451,39,691,26],[451,40,691,12,"drawerPosition"],[451,54,691,26],[452,10,691,28,"drawerLockMode"],[452,24,691,42],[452,27,691,42,"_this$props4"],[452,39,691,42],[452,40,691,28,"drawerLockMode"],[452,54,691,42],[453,10,691,44,"edgeWidth"],[453,19,691,53],[453,22,691,53,"_this$props4"],[453,34,691,53],[453,35,691,44,"edgeWidth"],[453,44,691,53],[454,10,691,55,"minSwipeDistance"],[454,26,691,71],[454,29,691,71,"_this$props4"],[454,41,691,71],[454,42,691,55,"minSwipeDistance"],[454,58,691,71],[455,8,694,4],[455,12,694,10,"fromLeft"],[455,20,694,18],[455,23,694,21,"drawerPosition"],[455,37,694,35],[455,42,694,40],[455,48,694,46],[457,8,696,4],[458,8,697,4],[459,8,698,4],[460,8,699,4],[460,12,699,10,"gestureOrientation"],[460,30,699,28],[460,33,700,6],[460,34,700,7,"fromLeft"],[460,42,700,15],[460,45,700,18],[460,46,700,19],[460,49,700,22],[460,50,700,23],[460,51,700,24],[460,56,700,29],[460,60,700,33],[460,61,700,34,"drawerShown"],[460,72,700,45],[460,75,700,48],[460,76,700,49],[460,77,700,50],[460,80,700,53],[460,81,700,54],[460,82,700,55],[462,8,702,4],[463,8,703,4],[464,8,704,4],[465,8,705,4],[465,12,705,10,"hitSlop"],[465,19,705,17],[465,22,705,20,"fromLeft"],[465,30,705,28],[465,33,706,8],[466,10,706,10,"left"],[466,14,706,14],[466,16,706,16],[466,17,706,17],[467,10,706,19,"width"],[467,15,706,24],[467,17,706,26],[467,21,706,30],[467,22,706,31,"drawerShown"],[467,33,706,42],[467,36,706,45,"undefined"],[467,45,706,54],[467,48,706,57,"edgeWidth"],[468,8,706,67],[468,9,706,68],[468,12,707,8],[469,10,707,10,"right"],[469,15,707,15],[469,17,707,17],[469,18,707,18],[470,10,707,20,"width"],[470,15,707,25],[470,17,707,27],[470,21,707,31],[470,22,707,32,"drawerShown"],[470,33,707,43],[470,36,707,46,"undefined"],[470,45,707,55],[470,48,707,58,"edgeWidth"],[471,8,707,68],[471,9,707,69],[472,8,709,4],[472,28,710,6],[472,32,710,6,"_jsxDevRuntime"],[472,46,710,6],[472,47,710,6,"jsxDEV"],[472,53,710,6],[472,55,710,7,"require"],[472,62,710,7],[472,63,710,7,"_dependencyMap"],[472,77,710,7],[472,116,710,7,"PanGestureHandler"],[473,8,711,8],[474,8,711,8],[475,10,712,8,"userSelect"],[475,20,712,18],[475,22,712,20],[475,26,712,24],[475,27,712,25,"props"],[475,32,712,30],[475,33,712,31,"userSelect"],[475,43,712,42],[476,10,713,8,"activeCursor"],[476,22,713,20],[476,24,713,22],[476,28,713,26],[476,29,713,27,"props"],[476,34,713,32],[476,35,713,33,"activeCursor"],[476,47,713,46],[477,10,714,8,"mouseButton"],[477,21,714,19],[477,23,714,21],[477,27,714,25],[477,28,714,26,"props"],[477,33,714,31],[477,34,714,32,"mouseButton"],[477,45,714,44],[478,10,715,8,"enableContextMenu"],[478,27,715,25],[478,29,715,27],[478,33,715,31],[478,34,715,32,"props"],[478,39,715,37],[478,40,715,38,"enableContextMenu"],[478,57,715,56],[479,10,716,8,"ref"],[479,13,716,11],[479,15,716,13],[479,19,716,17],[479,20,716,18,"setPanGestureRef"],[479,36,716,35],[480,10,717,8,"hitSlop"],[480,17,717,15],[480,19,717,17,"hitSlop"],[480,26,717,25],[481,10,718,8,"activeOffsetX"],[481,23,718,21],[481,25,718,23,"gestureOrientation"],[481,43,718,41],[481,46,718,44,"minSwipeDistance"],[481,62,718,62],[482,10,719,8,"failOffsetY"],[482,21,719,19],[482,23,719,21],[482,24,719,22],[482,25,719,23],[482,27,719,25],[482,29,719,27],[482,31,719,29],[482,32,719,31],[483,10,720,8,"onGestureEvent"],[483,24,720,22],[483,26,720,24],[483,30,720,28],[483,31,720,29,"onGestureEvent"],[483,45,720,44],[484,10,721,8,"onHandlerStateChange"],[484,30,721,28],[484,32,721,30],[484,36,721,34],[484,37,721,35,"openingHandlerStateChange"],[484,62,721,61],[485,10,722,8,"enableTrackpadTwoFingerGesture"],[485,40,722,38],[485,42,723,10],[485,46,723,14],[485,47,723,15,"props"],[485,52,723,20],[485,53,723,21,"enableTrackpadTwoFingerGesture"],[485,83,724,9],[486,10,725,8,"enabled"],[486,17,725,15],[486,19,726,10,"drawerLockMode"],[486,33,726,24],[486,38,726,29],[486,53,726,44],[486,57,726,48,"drawerLockMode"],[486,71,726,62],[486,76,726,67],[486,89,727,9],[487,10,727,9,"children"],[487,18,727,9],[487,20,728,9],[487,24,728,13],[487,25,728,14,"renderDrawer"],[487,37,728,26],[487,38,728,27],[488,8,728,28],[489,10,728,28,"fileName"],[489,18,728,28],[489,20,728,28,"_jsxFileName"],[489,32,728,28],[490,10,728,28,"lineNumber"],[490,20,728,28],[491,10,728,28,"columnNumber"],[491,22,728,28],[492,8,728,28],[492,15,729,25],[492,16,729,26],[493,6,731,2],[494,4,731,3],[495,2,731,3],[495,4,202,42,"Component"],[495,20,202,51],[496,2,202,21,"DrawerLayout"],[496,14,202,33],[496,15,206,9,"defaultProps"],[496,27,206,21],[496,30,206,24],[497,4,207,4,"drawerWidth"],[497,15,207,15],[497,17,207,17],[497,20,207,20],[498,4,208,4,"drawerPosition"],[498,18,208,18],[498,20,208,20],[498,26,208,26],[499,4,209,4,"useNativeAnimations"],[499,23,209,23],[499,25,209,25],[499,29,209,29],[500,4,210,4,"drawerType"],[500,14,210,14],[500,16,210,16],[500,23,210,23],[501,4,211,4,"edgeWidth"],[501,13,211,13],[501,15,211,15],[501,17,211,17],[502,4,212,4,"minSwipeDistance"],[502,20,212,20],[502,22,212,22],[502,23,212,23],[503,4,213,4,"overlayColor"],[503,16,213,16],[503,18,213,18],[503,38,213,38],[504,4,214,4,"drawerLockMode"],[504,18,214,18],[504,20,214,20],[504,30,214,30],[505,4,215,4,"enableTrackpadTwoFingerGesture"],[505,34,215,34],[505,36,215,36],[506,2,216,2],[506,3,216,3],[507,2,202,21,"DrawerLayout"],[507,14,202,33],[507,15,259,9,"positions"],[507,24,259,18],[507,27,259,21],[508,4,260,4,"Left"],[508,8,260,8],[508,10,260,10],[508,16,260,16],[509,4,261,4,"Right"],[509,9,261,9],[509,11,261,11],[510,2,262,2],[510,3,262,3],[511,2,734,0],[511,6,734,6,"styles"],[511,12,734,12],[511,15,734,15,"StyleSheet"],[511,38,734,25],[511,39,734,26,"create"],[511,45,734,32],[511,46,734,33],[512,4,735,2,"drawerContainer"],[512,19,735,17],[512,21,735,19],[513,6,736,4],[513,9,736,7,"StyleSheet"],[513,32,736,17],[513,33,736,18,"absoluteFillObject"],[513,51,736,36],[514,6,737,4,"zIndex"],[514,12,737,10],[514,14,737,12],[514,18,737,16],[515,6,738,4,"flexDirection"],[515,19,738,17],[515,21,738,19],[516,4,739,2],[516,5,739,3],[517,4,740,2,"containerInFront"],[517,20,740,18],[517,22,740,20],[518,6,741,4],[518,9,741,7,"StyleSheet"],[518,32,741,17],[518,33,741,18,"absoluteFillObject"],[518,51,741,36],[519,6,742,4,"zIndex"],[519,12,742,10],[519,14,742,12],[520,4,743,2],[520,5,743,3],[521,4,744,2,"containerOnBack"],[521,19,744,17],[521,21,744,19],[522,6,745,4],[522,9,745,7,"StyleSheet"],[522,32,745,17],[522,33,745,18,"absoluteFillObject"],[523,4,746,2],[523,5,746,3],[524,4,747,2,"main"],[524,8,747,6],[524,10,747,8],[525,6,748,4,"flex"],[525,10,748,8],[525,12,748,10],[525,13,748,11],[526,6,749,4,"zIndex"],[526,12,749,10],[526,14,749,12],[526,15,749,13],[527,6,750,4,"overflow"],[527,14,750,12],[527,16,750,14],[528,4,751,2],[528,5,751,3],[529,4,752,2,"overlay"],[529,11,752,9],[529,13,752,11],[530,6,753,4],[530,9,753,7,"StyleSheet"],[530,32,753,17],[530,33,753,18,"absoluteFillObject"],[530,51,753,36],[531,6,754,4,"zIndex"],[531,12,754,10],[531,14,754,12],[532,4,755,2],[533,2,756,0],[533,3,756,1],[533,4,756,2],[534,0,756,3],[534,3]],"functionMap":{"names":["<global>","DrawerLayout","constructor","shouldComponentUpdate","updateAnimatedEvent","gestureOptions.listener","handleContainerLayout","emitStateChanged","openingHandlerStateChange","onTapHandlerStateChange","handleRelease","updateShowing","animateDrawer","Animated.spring.start$argument_0","openDrawer","closeDrawer","renderOverlay","renderDrawer","setPanGestureRef","render"],"mappings":"AAA;eCyM;ECgB;GDiB;EEE;GFW;gCGgB;gCC+F;ODK;GHO;kCKE;GLE;6BME;GNK;sCOE;GPe;oCQE;GRU;0BSE;GTkC;0BUE;GV0B;0BWE;aCwC;KDe;GXC;eaE;GbY;gBcE;GdY;0BeE;GfyB;yBgBE;GhByF;6BiBE;GjBO;EkBE;GlByC;CDC"}},"type":"js/module"}]}