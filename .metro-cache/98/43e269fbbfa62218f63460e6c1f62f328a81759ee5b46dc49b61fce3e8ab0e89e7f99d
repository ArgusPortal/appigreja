{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":36,"index":153},"end":{"line":7,"column":52,"index":169}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY="}},{"name":"use-latest-callback","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":48,"index":220},"end":{"line":8,"column":78,"index":250}}],"key":"Pp42meoAsoBb9zFxGL4kkNu1jlQ="}},{"name":"./deepFreeze.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":18,"index":271},"end":{"line":9,"column":44,"index":297}},{"start":{"line":9,"column":18,"index":271},"end":{"line":9,"column":44,"index":297}}],"key":"tNACf9IEs8kJ6FfN3urwJPRnTEk="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useSyncState = useSyncState;\n  var React = _interopRequireWildcard(require(_dependencyMap[0], \"react\"));\n  var _useLatestCallback = _interopRequireDefault(require(_dependencyMap[1], \"use-latest-callback\"));\n  function _interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  function _getRequireWildcardCache(e) {\n    if (\"function\" != typeof WeakMap) return null;\n    var r = new WeakMap(),\n      t = new WeakMap();\n    return (_getRequireWildcardCache = function (e) {\n      return e ? t : r;\n    })(e);\n  }\n  function _interopRequireWildcard(e, r) {\n    if (!r && e && e.__esModule) return e;\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return {\n      default: e\n    };\n    var t = _getRequireWildcardCache(r);\n    if (t && t.has(e)) return t.get(e);\n    var n = {\n        __proto__: null\n      },\n      a = Object.defineProperty && Object.getOwnPropertyDescriptor;\n    for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) {\n      var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;\n      i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];\n    }\n    return n.default = e, t && t.set(e, n), n;\n  }\n  var createStore = getInitialState => {\n    var listeners = [];\n    var initialized = false;\n    var state;\n    var getState = () => {\n      if (initialized) {\n        return state;\n      }\n      initialized = true;\n      state = (0, require(_dependencyMap[2], \"./deepFreeze.js\").deepFreeze)(getInitialState());\n      return state;\n    };\n    var isBatching = false;\n    var didUpdate = false;\n    var setState = newState => {\n      state = (0, require(_dependencyMap[2], \"./deepFreeze.js\").deepFreeze)(newState);\n      didUpdate = true;\n      if (!isBatching) {\n        listeners.forEach(listener => listener());\n      }\n    };\n    var subscribe = callback => {\n      listeners.push(callback);\n      return () => {\n        var index = listeners.indexOf(callback);\n        if (index > -1) {\n          listeners.splice(index, 1);\n        }\n      };\n    };\n    var batchUpdates = callback => {\n      isBatching = true;\n      callback();\n      isBatching = false;\n      if (didUpdate) {\n        didUpdate = false;\n        listeners.forEach(listener => listener());\n      }\n    };\n    return {\n      getState,\n      setState,\n      batchUpdates,\n      subscribe\n    };\n  };\n  function useSyncState(getInitialState) {\n    var store = React.useRef(createStore(getInitialState)).current;\n    var state = React.useSyncExternalStore(store.subscribe, store.getState, store.getState);\n    React.useDebugValue(state);\n    var pendingUpdatesRef = React.useRef([]);\n    var scheduleUpdate = (0, _useLatestCallback.default)(callback => {\n      pendingUpdatesRef.current.push(callback);\n    });\n    var flushUpdates = (0, _useLatestCallback.default)(() => {\n      var pendingUpdates = pendingUpdatesRef.current;\n      pendingUpdatesRef.current = [];\n      if (pendingUpdates.length !== 0) {\n        store.batchUpdates(() => {\n          // Flush all the pending updates\n          for (var update of pendingUpdates) {\n            update();\n          }\n        });\n      }\n    });\n    return {\n      state,\n      getState: store.getState,\n      setState: store.setState,\n      scheduleUpdate,\n      flushUpdates\n    };\n  }\n});","lineCount":114,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"useSyncState"],[7,22,6,20],[7,25,6,23,"useSyncState"],[7,37,6,35],[8,2,7,0],[8,6,7,4,"React"],[8,11,7,9],[8,14,7,12,"_interopRequireWildcard"],[8,37,7,35],[8,38,7,36,"require"],[8,45,7,43],[8,46,7,43,"_dependencyMap"],[8,60,7,43],[8,72,7,51],[8,73,7,52],[8,74,7,53],[9,2,8,0],[9,6,8,4,"_useLatestCallback"],[9,24,8,22],[9,27,8,25,"_interopRequireDefault"],[9,49,8,47],[9,50,8,48,"require"],[9,57,8,55],[9,58,8,55,"_dependencyMap"],[9,72,8,55],[9,98,8,77],[9,99,8,78],[9,100,8,79],[10,2,10,0],[10,11,10,9,"_interopRequireDefault"],[10,33,10,31,"_interopRequireDefault"],[10,34,10,32,"e"],[10,35,10,33],[10,37,10,35],[11,4,10,37],[11,11,10,44,"e"],[11,12,10,45],[11,16,10,49,"e"],[11,17,10,50],[11,18,10,51,"__esModule"],[11,28,10,61],[11,31,10,64,"e"],[11,32,10,65],[11,35,10,68],[12,6,10,70,"default"],[12,13,10,77],[12,15,10,79,"e"],[13,4,10,81],[13,5,10,82],[14,2,10,84],[15,2,11,0],[15,11,11,9,"_getRequireWildcardCache"],[15,35,11,33,"_getRequireWildcardCache"],[15,36,11,34,"e"],[15,37,11,35],[15,39,11,37],[16,4,11,39],[16,8,11,43],[16,18,11,53],[16,22,11,57],[16,29,11,64,"WeakMap"],[16,36,11,71],[16,38,11,73],[16,45,11,80],[16,49,11,84],[17,4,11,86],[17,8,11,90,"r"],[17,9,11,91],[17,12,11,94],[17,16,11,98,"WeakMap"],[17,23,11,105],[17,24,11,106],[17,25,11,107],[18,6,11,109,"t"],[18,7,11,110],[18,10,11,113],[18,14,11,117,"WeakMap"],[18,21,11,124],[18,22,11,125],[18,23,11,126],[19,4,11,128],[19,11,11,135],[19,12,11,136,"_getRequireWildcardCache"],[19,36,11,160],[19,39,11,163],[19,48,11,163,"_getRequireWildcardCache"],[19,49,11,173,"e"],[19,50,11,174],[19,52,11,176],[20,6,11,178],[20,13,11,185,"e"],[20,14,11,186],[20,17,11,189,"t"],[20,18,11,190],[20,21,11,193,"r"],[20,22,11,194],[21,4,11,196],[21,5,11,197],[21,7,11,199,"e"],[21,8,11,200],[21,9,11,201],[22,2,11,203],[23,2,12,0],[23,11,12,9,"_interopRequireWildcard"],[23,34,12,32,"_interopRequireWildcard"],[23,35,12,33,"e"],[23,36,12,34],[23,38,12,36,"r"],[23,39,12,37],[23,41,12,39],[24,4,12,41],[24,8,12,45],[24,9,12,46,"r"],[24,10,12,47],[24,14,12,51,"e"],[24,15,12,52],[24,19,12,56,"e"],[24,20,12,57],[24,21,12,58,"__esModule"],[24,31,12,68],[24,33,12,70],[24,40,12,77,"e"],[24,41,12,78],[25,4,12,80],[25,8,12,84],[25,12,12,88],[25,17,12,93,"e"],[25,18,12,94],[25,22,12,98],[25,30,12,106],[25,34,12,110],[25,41,12,117,"e"],[25,42,12,118],[25,46,12,122],[25,56,12,132],[25,60,12,136],[25,67,12,143,"e"],[25,68,12,144],[25,70,12,146],[25,77,12,153],[26,6,12,155,"default"],[26,13,12,162],[26,15,12,164,"e"],[27,4,12,166],[27,5,12,167],[28,4,12,169],[28,8,12,173,"t"],[28,9,12,174],[28,12,12,177,"_getRequireWildcardCache"],[28,36,12,201],[28,37,12,202,"r"],[28,38,12,203],[28,39,12,204],[29,4,12,206],[29,8,12,210,"t"],[29,9,12,211],[29,13,12,215,"t"],[29,14,12,216],[29,15,12,217,"has"],[29,18,12,220],[29,19,12,221,"e"],[29,20,12,222],[29,21,12,223],[29,23,12,225],[29,30,12,232,"t"],[29,31,12,233],[29,32,12,234,"get"],[29,35,12,237],[29,36,12,238,"e"],[29,37,12,239],[29,38,12,240],[30,4,12,242],[30,8,12,246,"n"],[30,9,12,247],[30,12,12,250],[31,8,12,252,"__proto__"],[31,17,12,261],[31,19,12,263],[32,6,12,268],[32,7,12,269],[33,6,12,271,"a"],[33,7,12,272],[33,10,12,275,"Object"],[33,16,12,281],[33,17,12,282,"defineProperty"],[33,31,12,296],[33,35,12,300,"Object"],[33,41,12,306],[33,42,12,307,"getOwnPropertyDescriptor"],[33,66,12,331],[34,4,12,333],[34,9,12,338],[34,13,12,342,"u"],[34,14,12,343],[34,18,12,347,"e"],[34,19,12,348],[34,21,12,350],[34,25,12,354],[34,34,12,363],[34,39,12,368,"u"],[34,40,12,369],[34,44,12,373],[34,45,12,374],[34,46,12,375],[34,47,12,376,"hasOwnProperty"],[34,61,12,390],[34,62,12,391,"call"],[34,66,12,395],[34,67,12,396,"e"],[34,68,12,397],[34,70,12,399,"u"],[34,71,12,400],[34,72,12,401],[34,74,12,403],[35,6,12,405],[35,10,12,409,"i"],[35,11,12,410],[35,14,12,413,"a"],[35,15,12,414],[35,18,12,417,"Object"],[35,24,12,423],[35,25,12,424,"getOwnPropertyDescriptor"],[35,49,12,448],[35,50,12,449,"e"],[35,51,12,450],[35,53,12,452,"u"],[35,54,12,453],[35,55,12,454],[35,58,12,457],[35,62,12,461],[36,6,12,463,"i"],[36,7,12,464],[36,12,12,469,"i"],[36,13,12,470],[36,14,12,471,"get"],[36,17,12,474],[36,21,12,478,"i"],[36,22,12,479],[36,23,12,480,"set"],[36,26,12,483],[36,27,12,484],[36,30,12,487,"Object"],[36,36,12,493],[36,37,12,494,"defineProperty"],[36,51,12,508],[36,52,12,509,"n"],[36,53,12,510],[36,55,12,512,"u"],[36,56,12,513],[36,58,12,515,"i"],[36,59,12,516],[36,60,12,517],[36,63,12,520,"n"],[36,64,12,521],[36,65,12,522,"u"],[36,66,12,523],[36,67,12,524],[36,70,12,527,"e"],[36,71,12,528],[36,72,12,529,"u"],[36,73,12,530],[36,74,12,531],[37,4,12,533],[38,4,12,535],[38,11,12,542,"n"],[38,12,12,543],[38,13,12,544,"default"],[38,20,12,551],[38,23,12,554,"e"],[38,24,12,555],[38,26,12,557,"t"],[38,27,12,558],[38,31,12,562,"t"],[38,32,12,563],[38,33,12,564,"set"],[38,36,12,567],[38,37,12,568,"e"],[38,38,12,569],[38,40,12,571,"n"],[38,41,12,572],[38,42,12,573],[38,44,12,575,"n"],[38,45,12,576],[39,2,12,578],[40,2,13,0],[40,6,13,6,"createStore"],[40,17,13,17],[40,20,13,20,"getInitialState"],[40,35,13,35],[40,39,13,39],[41,4,14,2],[41,8,14,8,"listeners"],[41,17,14,17],[41,20,14,20],[41,22,14,22],[42,4,15,2],[42,8,15,6,"initialized"],[42,19,15,17],[42,22,15,20],[42,27,15,25],[43,4,16,2],[43,8,16,6,"state"],[43,13,16,11],[44,4,17,2],[44,8,17,8,"getState"],[44,16,17,16],[44,19,17,19,"getState"],[44,20,17,19],[44,25,17,25],[45,6,18,4],[45,10,18,8,"initialized"],[45,21,18,19],[45,23,18,21],[46,8,19,6],[46,15,19,13,"state"],[46,20,19,18],[47,6,20,4],[48,6,21,4,"initialized"],[48,17,21,15],[48,20,21,18],[48,24,21,22],[49,6,22,4,"state"],[49,11,22,9],[49,14,22,12],[49,15,22,13],[49,16,22,14],[49,18,22,16,"require"],[49,25,22,16],[49,26,22,16,"_dependencyMap"],[49,40,22,16],[49,64,22,28,"deepFreeze"],[49,74,22,38],[49,76,22,40,"getInitialState"],[49,91,22,55],[49,92,22,56],[49,93,22,57],[49,94,22,58],[50,6,23,4],[50,13,23,11,"state"],[50,18,23,16],[51,4,24,2],[51,5,24,3],[52,4,25,2],[52,8,25,6,"isBatching"],[52,18,25,16],[52,21,25,19],[52,26,25,24],[53,4,26,2],[53,8,26,6,"didUpdate"],[53,17,26,15],[53,20,26,18],[53,25,26,23],[54,4,27,2],[54,8,27,8,"setState"],[54,16,27,16],[54,19,27,19,"newState"],[54,27,27,27],[54,31,27,31],[55,6,28,4,"state"],[55,11,28,9],[55,14,28,12],[55,15,28,13],[55,16,28,14],[55,18,28,16,"require"],[55,25,28,16],[55,26,28,16,"_dependencyMap"],[55,40,28,16],[55,64,28,28,"deepFreeze"],[55,74,28,38],[55,76,28,40,"newState"],[55,84,28,48],[55,85,28,49],[56,6,29,4,"didUpdate"],[56,15,29,13],[56,18,29,16],[56,22,29,20],[57,6,30,4],[57,10,30,8],[57,11,30,9,"isBatching"],[57,21,30,19],[57,23,30,21],[58,8,31,6,"listeners"],[58,17,31,15],[58,18,31,16,"forEach"],[58,25,31,23],[58,26,31,24,"listener"],[58,34,31,32],[58,38,31,36,"listener"],[58,46,31,44],[58,47,31,45],[58,48,31,46],[58,49,31,47],[59,6,32,4],[60,4,33,2],[60,5,33,3],[61,4,34,2],[61,8,34,8,"subscribe"],[61,17,34,17],[61,20,34,20,"callback"],[61,28,34,28],[61,32,34,32],[62,6,35,4,"listeners"],[62,15,35,13],[62,16,35,14,"push"],[62,20,35,18],[62,21,35,19,"callback"],[62,29,35,27],[62,30,35,28],[63,6,36,4],[63,13,36,11],[63,19,36,17],[64,8,37,6],[64,12,37,12,"index"],[64,17,37,17],[64,20,37,20,"listeners"],[64,29,37,29],[64,30,37,30,"indexOf"],[64,37,37,37],[64,38,37,38,"callback"],[64,46,37,46],[64,47,37,47],[65,8,38,6],[65,12,38,10,"index"],[65,17,38,15],[65,20,38,18],[65,21,38,19],[65,22,38,20],[65,24,38,22],[66,10,39,8,"listeners"],[66,19,39,17],[66,20,39,18,"splice"],[66,26,39,24],[66,27,39,25,"index"],[66,32,39,30],[66,34,39,32],[66,35,39,33],[66,36,39,34],[67,8,40,6],[68,6,41,4],[68,7,41,5],[69,4,42,2],[69,5,42,3],[70,4,43,2],[70,8,43,8,"batchUpdates"],[70,20,43,20],[70,23,43,23,"callback"],[70,31,43,31],[70,35,43,35],[71,6,44,4,"isBatching"],[71,16,44,14],[71,19,44,17],[71,23,44,21],[72,6,45,4,"callback"],[72,14,45,12],[72,15,45,13],[72,16,45,14],[73,6,46,4,"isBatching"],[73,16,46,14],[73,19,46,17],[73,24,46,22],[74,6,47,4],[74,10,47,8,"didUpdate"],[74,19,47,17],[74,21,47,19],[75,8,48,6,"didUpdate"],[75,17,48,15],[75,20,48,18],[75,25,48,23],[76,8,49,6,"listeners"],[76,17,49,15],[76,18,49,16,"forEach"],[76,25,49,23],[76,26,49,24,"listener"],[76,34,49,32],[76,38,49,36,"listener"],[76,46,49,44],[76,47,49,45],[76,48,49,46],[76,49,49,47],[77,6,50,4],[78,4,51,2],[78,5,51,3],[79,4,52,2],[79,11,52,9],[80,6,53,4,"getState"],[80,14,53,12],[81,6,54,4,"setState"],[81,14,54,12],[82,6,55,4,"batchUpdates"],[82,18,55,16],[83,6,56,4,"subscribe"],[84,4,57,2],[84,5,57,3],[85,2,58,0],[85,3,58,1],[86,2,59,0],[86,11,59,9,"useSyncState"],[86,23,59,21,"useSyncState"],[86,24,59,22,"getInitialState"],[86,39,59,37],[86,41,59,39],[87,4,60,2],[87,8,60,8,"store"],[87,13,60,13],[87,16,60,16,"React"],[87,21,60,21],[87,22,60,22,"useRef"],[87,28,60,28],[87,29,60,29,"createStore"],[87,40,60,40],[87,41,60,41,"getInitialState"],[87,56,60,56],[87,57,60,57],[87,58,60,58],[87,59,60,59,"current"],[87,66,60,66],[88,4,61,2],[88,8,61,8,"state"],[88,13,61,13],[88,16,61,16,"React"],[88,21,61,21],[88,22,61,22,"useSyncExternalStore"],[88,42,61,42],[88,43,61,43,"store"],[88,48,61,48],[88,49,61,49,"subscribe"],[88,58,61,58],[88,60,61,60,"store"],[88,65,61,65],[88,66,61,66,"getState"],[88,74,61,74],[88,76,61,76,"store"],[88,81,61,81],[88,82,61,82,"getState"],[88,90,61,90],[88,91,61,91],[89,4,62,2,"React"],[89,9,62,7],[89,10,62,8,"useDebugValue"],[89,23,62,21],[89,24,62,22,"state"],[89,29,62,27],[89,30,62,28],[90,4,63,2],[90,8,63,8,"pendingUpdatesRef"],[90,25,63,25],[90,28,63,28,"React"],[90,33,63,33],[90,34,63,34,"useRef"],[90,40,63,40],[90,41,63,41],[90,43,63,43],[90,44,63,44],[91,4,64,2],[91,8,64,8,"scheduleUpdate"],[91,22,64,22],[91,25,64,25],[91,26,64,26],[91,27,64,27],[91,29,64,29,"_useLatestCallback"],[91,47,64,47],[91,48,64,48,"default"],[91,55,64,55],[91,57,64,57,"callback"],[91,65,64,65],[91,69,64,69],[92,6,65,4,"pendingUpdatesRef"],[92,23,65,21],[92,24,65,22,"current"],[92,31,65,29],[92,32,65,30,"push"],[92,36,65,34],[92,37,65,35,"callback"],[92,45,65,43],[92,46,65,44],[93,4,66,2],[93,5,66,3],[93,6,66,4],[94,4,67,2],[94,8,67,8,"flushUpdates"],[94,20,67,20],[94,23,67,23],[94,24,67,24],[94,25,67,25],[94,27,67,27,"_useLatestCallback"],[94,45,67,45],[94,46,67,46,"default"],[94,53,67,53],[94,55,67,55],[94,61,67,61],[95,6,68,4],[95,10,68,10,"pendingUpdates"],[95,24,68,24],[95,27,68,27,"pendingUpdatesRef"],[95,44,68,44],[95,45,68,45,"current"],[95,52,68,52],[96,6,69,4,"pendingUpdatesRef"],[96,23,69,21],[96,24,69,22,"current"],[96,31,69,29],[96,34,69,32],[96,36,69,34],[97,6,70,4],[97,10,70,8,"pendingUpdates"],[97,24,70,22],[97,25,70,23,"length"],[97,31,70,29],[97,36,70,34],[97,37,70,35],[97,39,70,37],[98,8,71,6,"store"],[98,13,71,11],[98,14,71,12,"batchUpdates"],[98,26,71,24],[98,27,71,25],[98,33,71,31],[99,10,72,8],[100,10,73,8],[100,15,73,13],[100,19,73,19,"update"],[100,25,73,25],[100,29,73,29,"pendingUpdates"],[100,43,73,43],[100,45,73,45],[101,12,74,10,"update"],[101,18,74,16],[101,19,74,17],[101,20,74,18],[102,10,75,8],[103,8,76,6],[103,9,76,7],[103,10,76,8],[104,6,77,4],[105,4,78,2],[105,5,78,3],[105,6,78,4],[106,4,79,2],[106,11,79,9],[107,6,80,4,"state"],[107,11,80,9],[108,6,81,4,"getState"],[108,14,81,12],[108,16,81,14,"store"],[108,21,81,19],[108,22,81,20,"getState"],[108,30,81,28],[109,6,82,4,"setState"],[109,14,82,12],[109,16,82,14,"store"],[109,21,82,19],[109,22,82,20,"setState"],[109,30,82,28],[110,6,83,4,"scheduleUpdate"],[110,20,83,18],[111,6,84,4,"flushUpdates"],[112,4,85,2],[112,5,85,3],[113,2,86,0],[114,0,86,1],[114,3]],"functionMap":{"names":["<global>","_interopRequireDefault","_getRequireWildcardCache","_interopRequireWildcard","createStore","getState","setState","listeners.forEach$argument_0","subscribe","<anonymous>","batchUpdates","useSyncState","store.batchUpdates$argument_0"],"mappings":"AAA;ACS,qFD;AEC,4MF;AGC,mkBH;oBIC;mBCI;GDO;mBEG;wBCI,sBD;GFE;oBIC;WCE;KDK;GJC;uBMC;wBHM,sBG;GNE;CJO;AWC;yDFK;GEE;uDFC;yBGI;OHK;GEE;CXQ"}},"type":"js/module"}]}