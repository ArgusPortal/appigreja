{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":33,"column":41,"index":1094}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":18,"index":33},"end":{"line":3,"column":41,"index":56}}],"key":"lGv6jwyWtmgghjjYvCX5yhM2Jt0="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var reactNative = require(_dependencyMap[1], \"react-native\");\n\n  // src/index.android.ts\n  var warnings = /* @__PURE__ */new Set();\n  var isEdgeToEdge = () => reactNative.TurboModuleRegistry.get(\"RNEdgeToEdge\") != null;\n  var controlEdgeToEdgeValues = values => {\n    if (__DEV__ && isEdgeToEdge()) {\n      var entries = Object.entries(values).filter(_ref => {\n        var _ref2 = _slicedToArray(_ref, 2),\n          value = _ref2[1];\n        return typeof value !== \"undefined\";\n      });\n      var stableKey = entries.join(\" \");\n      if (entries.length < 1 || warnings.has(stableKey)) {\n        return;\n      }\n      warnings.add(stableKey);\n      var isPlural = entries.length > 1;\n      var lastIndex = entries.length - 1;\n      var list = entries.reduce((acc, _ref3, index) => {\n        var _ref4 = _slicedToArray(_ref3, 1),\n          name = _ref4[0];\n        return index === 0 ? name : acc + (index === lastIndex ? \" and \" : \", \") + name;\n      }, \"\");\n      console.warn(`${list} ${isPlural ? \"values are\" : \"value is\"} ignored when using react-native-edge-to-edge`);\n    }\n  };\n  exports.controlEdgeToEdgeValues = controlEdgeToEdgeValues;\n  exports.isEdgeToEdge = isEdgeToEdge;\n});","lineCount":34,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"require"],[4,30,1,13],[4,31,1,13,"_dependencyMap"],[4,45,1,13],[5,2,3,0],[5,6,3,4,"reactNative"],[5,17,3,15],[5,20,3,18,"require"],[5,27,3,25],[5,28,3,25,"_dependencyMap"],[5,42,3,25],[5,61,3,40],[5,62,3,41],[7,2,5,0],[8,2,6,0],[8,6,6,4,"warnings"],[8,14,6,12],[8,17,6,15],[8,32,6,31],[8,36,6,35,"Set"],[8,39,6,38],[8,40,6,39],[8,41,6,40],[9,2,7,0],[9,6,7,4,"isEdgeToEdge"],[9,18,7,16],[9,21,7,19,"isEdgeToEdge"],[9,22,7,19],[9,27,7,25,"reactNative"],[9,38,7,36],[9,39,7,37,"TurboModuleRegistry"],[9,58,7,56],[9,59,7,57,"get"],[9,62,7,60],[9,63,7,61],[9,77,7,75],[9,78,7,76],[9,82,7,80],[9,86,7,84],[10,2,8,0],[10,6,8,4,"controlEdgeToEdgeValues"],[10,29,8,27],[10,32,8,31,"values"],[10,38,8,37],[10,42,8,42],[11,4,9,2],[11,8,9,6,"__DEV__"],[11,15,9,13],[11,19,9,17,"isEdgeToEdge"],[11,31,9,29],[11,32,9,30],[11,33,9,31],[11,35,9,33],[12,6,10,4],[12,10,10,10,"entries"],[12,17,10,17],[12,20,10,20,"Object"],[12,26,10,26],[12,27,10,27,"entries"],[12,34,10,34],[12,35,10,35,"values"],[12,41,10,41],[12,42,10,42],[12,43,10,43,"filter"],[12,49,10,49],[12,50,11,6,"_ref"],[12,54,11,6],[13,8,11,6],[13,12,11,6,"_ref2"],[13,17,11,6],[13,20,11,6,"_slicedToArray"],[13,34,11,6],[13,35,11,6,"_ref"],[13,39,11,6],[14,10,11,10,"value"],[14,15,11,15],[14,18,11,15,"_ref2"],[14,23,11,15],[15,8,11,15],[15,15,11,21],[15,22,11,28,"value"],[15,27,11,33],[15,32,11,38],[15,43,11,49],[16,6,11,49],[16,7,12,4],[16,8,12,5],[17,6,13,4],[17,10,13,10,"stableKey"],[17,19,13,19],[17,22,13,22,"entries"],[17,29,13,29],[17,30,13,30,"join"],[17,34,13,34],[17,35,13,35],[17,38,13,38],[17,39,13,39],[18,6,14,4],[18,10,14,8,"entries"],[18,17,14,15],[18,18,14,16,"length"],[18,24,14,22],[18,27,14,25],[18,28,14,26],[18,32,14,30,"warnings"],[18,40,14,38],[18,41,14,39,"has"],[18,44,14,42],[18,45,14,43,"stableKey"],[18,54,14,52],[18,55,14,53],[18,57,14,55],[19,8,15,6],[20,6,16,4],[21,6,17,4,"warnings"],[21,14,17,12],[21,15,17,13,"add"],[21,18,17,16],[21,19,17,17,"stableKey"],[21,28,17,26],[21,29,17,27],[22,6,18,4],[22,10,18,10,"isPlural"],[22,18,18,18],[22,21,18,21,"entries"],[22,28,18,28],[22,29,18,29,"length"],[22,35,18,35],[22,38,18,38],[22,39,18,39],[23,6,19,4],[23,10,19,10,"lastIndex"],[23,19,19,19],[23,22,19,22,"entries"],[23,29,19,29],[23,30,19,30,"length"],[23,36,19,36],[23,39,19,39],[23,40,19,40],[24,6,20,4],[24,10,20,10,"list"],[24,14,20,14],[24,17,20,17,"entries"],[24,24,20,24],[24,25,20,25,"reduce"],[24,31,20,31],[24,32,21,6],[24,33,21,7,"acc"],[24,36,21,10],[24,38,21,10,"_ref3"],[24,43,21,10],[24,45,21,20,"index"],[24,50,21,25],[25,8,21,25],[25,12,21,25,"_ref4"],[25,17,21,25],[25,20,21,25,"_slicedToArray"],[25,34,21,25],[25,35,21,25,"_ref3"],[25,40,21,25],[26,10,21,13,"name"],[26,14,21,17],[26,17,21,17,"_ref4"],[26,22,21,17],[27,8,21,17],[27,15,21,30,"index"],[27,20,21,35],[27,25,21,40],[27,26,21,41],[27,29,21,44,"name"],[27,33,21,48],[27,36,21,51,"acc"],[27,39,21,54],[27,43,21,58,"index"],[27,48,21,63],[27,53,21,68,"lastIndex"],[27,62,21,77],[27,65,21,80],[27,72,21,87],[27,75,21,90],[27,79,21,94],[27,80,21,95],[27,83,21,98,"name"],[27,87,21,102],[28,6,21,102],[28,9,22,6],[28,11,23,4],[28,12,23,5],[29,6,24,4,"console"],[29,13,24,11],[29,14,24,12,"warn"],[29,18,24,16],[29,19,25,6],[29,22,25,9,"list"],[29,26,25,13],[29,30,25,17,"isPlural"],[29,38,25,25],[29,41,25,28],[29,53,25,40],[29,56,25,43],[29,66,25,53],[29,113,26,4],[29,114,26,5],[30,4,27,2],[31,2,28,0],[31,3,28,1],[32,2,30,0,"exports"],[32,9,30,7],[32,10,30,8,"controlEdgeToEdgeValues"],[32,33,30,31],[32,36,30,34,"controlEdgeToEdgeValues"],[32,59,30,57],[33,2,31,0,"exports"],[33,9,31,7],[33,10,31,8,"isEdgeToEdge"],[33,22,31,20],[33,25,31,23,"isEdgeToEdge"],[33,37,31,35],[34,0,31,36],[34,3]],"functionMap":{"names":["<global>","isEdgeToEdge","controlEdgeToEdgeValues","Object.entries.filter$argument_0","entries.reduce$argument_0"],"mappings":"AAA;mBCM,iED;8BEC;MCG,2CD;MEU,gGF;CFO"}},"type":"js/module"}]}