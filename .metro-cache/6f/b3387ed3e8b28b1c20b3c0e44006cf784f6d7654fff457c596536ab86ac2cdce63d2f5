{"dependencies":[{"name":"./lib/markup","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}},{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}},{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}},{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}},{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}},{"start":{"line":7,"column":14,"index":155},"end":{"line":7,"column":37,"index":178}}],"key":"jmWyOIwUhawNxN+alOZIsh3EVEk="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.test = exports.serialize = exports.default = void 0;\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ELEMENT_NODE = 1;\n  var TEXT_NODE = 3;\n  var COMMENT_NODE = 8;\n  var FRAGMENT_NODE = 11;\n  var ELEMENT_REGEXP = /^((HTML|SVG)\\w*)?Element$/;\n  var testHasAttribute = val => {\n    try {\n      return typeof val.hasAttribute === 'function' && val.hasAttribute('is');\n    } catch {\n      return false;\n    }\n  };\n  var testNode = val => {\n    var constructorName = val.constructor.name;\n    var nodeType = val.nodeType,\n      tagName = val.tagName;\n    var isCustomElement = typeof tagName === 'string' && tagName.includes('-') || testHasAttribute(val);\n    return nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement) || nodeType === TEXT_NODE && constructorName === 'Text' || nodeType === COMMENT_NODE && constructorName === 'Comment' || nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment';\n  };\n  var test = val => val?.constructor?.name && testNode(val);\n  exports.test = test;\n  function nodeIsText(node) {\n    return node.nodeType === TEXT_NODE;\n  }\n  function nodeIsComment(node) {\n    return node.nodeType === COMMENT_NODE;\n  }\n  function nodeIsFragment(node) {\n    return node.nodeType === FRAGMENT_NODE;\n  }\n  var serialize = (node, config, indentation, depth, refs, printer) => {\n    if (nodeIsText(node)) {\n      return (0, require(_dependencyMap[0], \"./lib/markup\").printText)(node.data, config);\n    }\n    if (nodeIsComment(node)) {\n      return (0, require(_dependencyMap[0], \"./lib/markup\").printComment)(node.data, config);\n    }\n    var type = nodeIsFragment(node) ? 'DocumentFragment' : node.tagName.toLowerCase();\n    if (++depth > config.maxDepth) {\n      return (0, require(_dependencyMap[0], \"./lib/markup\").printElementAsLeaf)(type, config);\n    }\n    return (0, require(_dependencyMap[0], \"./lib/markup\").printElement)(type, (0, require(_dependencyMap[0], \"./lib/markup\").printProps)(nodeIsFragment(node) ? [] : Array.from(node.attributes, attr => attr.name).sort(), nodeIsFragment(node) ? {} : Array.from(node.attributes).reduce((props, attribute) => {\n      props[attribute.name] = attribute.value;\n      return props;\n    }, {}), config, indentation + config.indent, depth, refs, printer), (0, require(_dependencyMap[0], \"./lib/markup\").printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer), config, indentation);\n  };\n  exports.serialize = serialize;\n  var plugin = {\n    serialize,\n    test\n  };\n  var _default = plugin;\n  exports.default = _default;\n});","lineCount":68,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"test"],[7,14,6,12],[7,17,6,15,"exports"],[7,24,6,22],[7,25,6,23,"serialize"],[7,34,6,32],[7,37,6,35,"exports"],[7,44,6,42],[7,45,6,43,"default"],[7,52,6,50],[7,55,6,53],[7,60,6,58],[7,61,6,59],[8,2,8,0],[9,0,9,0],[10,0,10,0],[11,0,11,0],[12,0,12,0],[13,0,13,0],[15,2,15,0],[15,6,15,6,"ELEMENT_NODE"],[15,18,15,18],[15,21,15,21],[15,22,15,22],[16,2,16,0],[16,6,16,6,"TEXT_NODE"],[16,15,16,15],[16,18,16,18],[16,19,16,19],[17,2,17,0],[17,6,17,6,"COMMENT_NODE"],[17,18,17,18],[17,21,17,21],[17,22,17,22],[18,2,18,0],[18,6,18,6,"FRAGMENT_NODE"],[18,19,18,19],[18,22,18,22],[18,24,18,24],[19,2,19,0],[19,6,19,6,"ELEMENT_REGEXP"],[19,20,19,20],[19,23,19,23],[19,50,19,50],[20,2,20,0],[20,6,20,6,"testHasAttribute"],[20,22,20,22],[20,25,20,25,"val"],[20,28,20,28],[20,32,20,32],[21,4,21,2],[21,8,21,6],[22,6,22,4],[22,13,22,11],[22,20,22,18,"val"],[22,23,22,21],[22,24,22,22,"hasAttribute"],[22,36,22,34],[22,41,22,39],[22,51,22,49],[22,55,22,53,"val"],[22,58,22,56],[22,59,22,57,"hasAttribute"],[22,71,22,69],[22,72,22,70],[22,76,22,74],[22,77,22,75],[23,4,23,2],[23,5,23,3],[23,6,23,4],[23,12,23,10],[24,6,24,4],[24,13,24,11],[24,18,24,16],[25,4,25,2],[26,2,26,0],[26,3,26,1],[27,2,27,0],[27,6,27,6,"testNode"],[27,14,27,14],[27,17,27,17,"val"],[27,20,27,20],[27,24,27,24],[28,4,28,2],[28,8,28,8,"constructorName"],[28,23,28,23],[28,26,28,26,"val"],[28,29,28,29],[28,30,28,30,"constructor"],[28,41,28,41],[28,42,28,42,"name"],[28,46,28,46],[29,4,29,2],[29,8,29,9,"nodeType"],[29,16,29,17],[29,19,29,30,"val"],[29,22,29,33],[29,23,29,9,"nodeType"],[29,31,29,17],[30,6,29,19,"tagName"],[30,13,29,26],[30,16,29,30,"val"],[30,19,29,33],[30,20,29,19,"tagName"],[30,27,29,26],[31,4,30,2],[31,8,30,8,"isCustomElement"],[31,23,30,23],[31,26,31,5],[31,33,31,12,"tagName"],[31,40,31,19],[31,45,31,24],[31,53,31,32],[31,57,31,36,"tagName"],[31,64,31,43],[31,65,31,44,"includes"],[31,73,31,52],[31,74,31,53],[31,77,31,56],[31,78,31,57],[31,82,32,4,"testHasAttribute"],[31,98,32,20],[31,99,32,21,"val"],[31,102,32,24],[31,103,32,25],[32,4,33,2],[32,11,34,5,"nodeType"],[32,19,34,13],[32,24,34,18,"ELEMENT_NODE"],[32,36,34,30],[32,41,35,7,"ELEMENT_REGEXP"],[32,55,35,21],[32,56,35,22,"test"],[32,60,35,26],[32,61,35,27,"constructorName"],[32,76,35,42],[32,77,35,43],[32,81,35,47,"isCustomElement"],[32,96,35,62],[32,97,35,63],[32,101,36,5,"nodeType"],[32,109,36,13],[32,114,36,18,"TEXT_NODE"],[32,123,36,27],[32,127,36,31,"constructorName"],[32,142,36,46],[32,147,36,51],[32,153,36,58],[32,157,37,5,"nodeType"],[32,165,37,13],[32,170,37,18,"COMMENT_NODE"],[32,182,37,30],[32,186,37,34,"constructorName"],[32,201,37,49],[32,206,37,54],[32,215,37,64],[32,219,38,5,"nodeType"],[32,227,38,13],[32,232,38,18,"FRAGMENT_NODE"],[32,245,38,31],[32,249,38,35,"constructorName"],[32,264,38,50],[32,269,38,55],[32,287,38,74],[33,2,40,0],[33,3,40,1],[34,2,41,0],[34,6,41,6,"test"],[34,10,41,10],[34,13,41,13,"val"],[34,16,41,16],[34,20,41,20,"val"],[34,23,41,23],[34,25,41,25,"constructor"],[34,36,41,36],[34,38,41,38,"name"],[34,42,41,42],[34,46,41,46,"testNode"],[34,54,41,54],[34,55,41,55,"val"],[34,58,41,58],[34,59,41,59],[35,2,42,0,"exports"],[35,9,42,7],[35,10,42,8,"test"],[35,14,42,12],[35,17,42,15,"test"],[35,21,42,19],[36,2,43,0],[36,11,43,9,"nodeIsText"],[36,21,43,19,"nodeIsText"],[36,22,43,20,"node"],[36,26,43,24],[36,28,43,26],[37,4,44,2],[37,11,44,9,"node"],[37,15,44,13],[37,16,44,14,"nodeType"],[37,24,44,22],[37,29,44,27,"TEXT_NODE"],[37,38,44,36],[38,2,45,0],[39,2,46,0],[39,11,46,9,"nodeIsComment"],[39,24,46,22,"nodeIsComment"],[39,25,46,23,"node"],[39,29,46,27],[39,31,46,29],[40,4,47,2],[40,11,47,9,"node"],[40,15,47,13],[40,16,47,14,"nodeType"],[40,24,47,22],[40,29,47,27,"COMMENT_NODE"],[40,41,47,39],[41,2,48,0],[42,2,49,0],[42,11,49,9,"nodeIsFragment"],[42,25,49,23,"nodeIsFragment"],[42,26,49,24,"node"],[42,30,49,28],[42,32,49,30],[43,4,50,2],[43,11,50,9,"node"],[43,15,50,13],[43,16,50,14,"nodeType"],[43,24,50,22],[43,29,50,27,"FRAGMENT_NODE"],[43,42,50,40],[44,2,51,0],[45,2,52,0],[45,6,52,6,"serialize"],[45,15,52,15],[45,18,52,18,"serialize"],[45,19,52,19,"node"],[45,23,52,23],[45,25,52,25,"config"],[45,31,52,31],[45,33,52,33,"indentation"],[45,44,52,44],[45,46,52,46,"depth"],[45,51,52,51],[45,53,52,53,"refs"],[45,57,52,57],[45,59,52,59,"printer"],[45,66,52,66],[45,71,52,71],[46,4,53,2],[46,8,53,6,"nodeIsText"],[46,18,53,16],[46,19,53,17,"node"],[46,23,53,21],[46,24,53,22],[46,26,53,24],[47,6,54,4],[47,13,54,11],[47,14,54,12],[47,15,54,13],[47,17,54,15,"require"],[47,24,54,15],[47,25,54,15,"_dependencyMap"],[47,39,54,15],[47,60,54,23,"printText"],[47,69,54,32],[47,71,54,34,"node"],[47,75,54,38],[47,76,54,39,"data"],[47,80,54,43],[47,82,54,45,"config"],[47,88,54,51],[47,89,54,52],[48,4,55,2],[49,4,56,2],[49,8,56,6,"nodeIsComment"],[49,21,56,19],[49,22,56,20,"node"],[49,26,56,24],[49,27,56,25],[49,29,56,27],[50,6,57,4],[50,13,57,11],[50,14,57,12],[50,15,57,13],[50,17,57,15,"require"],[50,24,57,15],[50,25,57,15,"_dependencyMap"],[50,39,57,15],[50,60,57,23,"printComment"],[50,72,57,35],[50,74,57,37,"node"],[50,78,57,41],[50,79,57,42,"data"],[50,83,57,46],[50,85,57,48,"config"],[50,91,57,54],[50,92,57,55],[51,4,58,2],[52,4,59,2],[52,8,59,8,"type"],[52,12,59,12],[52,15,59,15,"nodeIsFragment"],[52,29,59,29],[52,30,59,30,"node"],[52,34,59,34],[52,35,59,35],[52,38,60,6],[52,56,60,24],[52,59,61,6,"node"],[52,63,61,10],[52,64,61,11,"tagName"],[52,71,61,18],[52,72,61,19,"toLowerCase"],[52,83,61,30],[52,84,61,31],[52,85,61,32],[53,4,62,2],[53,8,62,6],[53,10,62,8,"depth"],[53,15,62,13],[53,18,62,16,"config"],[53,24,62,22],[53,25,62,23,"maxDepth"],[53,33,62,31],[53,35,62,33],[54,6,63,4],[54,13,63,11],[54,14,63,12],[54,15,63,13],[54,17,63,15,"require"],[54,24,63,15],[54,25,63,15,"_dependencyMap"],[54,39,63,15],[54,60,63,23,"printElementAsLeaf"],[54,78,63,41],[54,80,63,43,"type"],[54,84,63,47],[54,86,63,49,"config"],[54,92,63,55],[54,93,63,56],[55,4,64,2],[56,4,65,2],[56,11,65,9],[56,12,65,10],[56,13,65,11],[56,15,65,13,"require"],[56,22,65,13],[56,23,65,13,"_dependencyMap"],[56,37,65,13],[56,58,65,21,"printElement"],[56,70,65,33],[56,72,66,4,"type"],[56,76,66,8],[56,78,67,4],[56,79,67,5],[56,80,67,6],[56,82,67,8,"require"],[56,89,67,8],[56,90,67,8,"_dependencyMap"],[56,104,67,8],[56,125,67,16,"printProps"],[56,135,67,26],[56,137,68,6,"nodeIsFragment"],[56,151,68,20],[56,152,68,21,"node"],[56,156,68,25],[56,157,68,26],[56,160,69,10],[56,162,69,12],[56,165,70,10,"Array"],[56,170,70,15],[56,171,70,16,"from"],[56,175,70,20],[56,176,70,21,"node"],[56,180,70,25],[56,181,70,26,"attributes"],[56,191,70,36],[56,193,70,38,"attr"],[56,197,70,42],[56,201,70,46,"attr"],[56,205,70,50],[56,206,70,51,"name"],[56,210,70,55],[56,211,70,56],[56,212,70,57,"sort"],[56,216,70,61],[56,217,70,62],[56,218,70,63],[56,220,71,6,"nodeIsFragment"],[56,234,71,20],[56,235,71,21,"node"],[56,239,71,25],[56,240,71,26],[56,243,72,10],[56,244,72,11],[56,245,72,12],[56,248,73,10,"Array"],[56,253,73,15],[56,254,73,16,"from"],[56,258,73,20],[56,259,73,21,"node"],[56,263,73,25],[56,264,73,26,"attributes"],[56,274,73,36],[56,275,73,37],[56,276,73,38,"reduce"],[56,282,73,44],[56,283,73,45],[56,284,73,46,"props"],[56,289,73,51],[56,291,73,53,"attribute"],[56,300,73,62],[56,305,73,67],[57,6,74,12,"props"],[57,11,74,17],[57,12,74,18,"attribute"],[57,21,74,27],[57,22,74,28,"name"],[57,26,74,32],[57,27,74,33],[57,30,74,36,"attribute"],[57,39,74,45],[57,40,74,46,"value"],[57,45,74,51],[58,6,75,12],[58,13,75,19,"props"],[58,18,75,24],[59,4,76,10],[59,5,76,11],[59,7,76,13],[59,8,76,14],[59,9,76,15],[59,10,76,16],[59,12,77,6,"config"],[59,18,77,12],[59,20,78,6,"indentation"],[59,31,78,17],[59,34,78,20,"config"],[59,40,78,26],[59,41,78,27,"indent"],[59,47,78,33],[59,49,79,6,"depth"],[59,54,79,11],[59,56,80,6,"refs"],[59,60,80,10],[59,62,81,6,"printer"],[59,69,82,4],[59,70,82,5],[59,72,83,4],[59,73,83,5],[59,74,83,6],[59,76,83,8,"require"],[59,83,83,8],[59,84,83,8,"_dependencyMap"],[59,98,83,8],[59,119,83,16,"printChildren"],[59,132,83,29],[59,134,84,6,"Array"],[59,139,84,11],[59,140,84,12,"prototype"],[59,149,84,21],[59,150,84,22,"slice"],[59,155,84,27],[59,156,84,28,"call"],[59,160,84,32],[59,161,84,33,"node"],[59,165,84,37],[59,166,84,38,"childNodes"],[59,176,84,48],[59,180,84,52,"node"],[59,184,84,56],[59,185,84,57,"children"],[59,193,84,65],[59,194,84,66],[59,196,85,6,"config"],[59,202,85,12],[59,204,86,6,"indentation"],[59,215,86,17],[59,218,86,20,"config"],[59,224,86,26],[59,225,86,27,"indent"],[59,231,86,33],[59,233,87,6,"depth"],[59,238,87,11],[59,240,88,6,"refs"],[59,244,88,10],[59,246,89,6,"printer"],[59,253,90,4],[59,254,90,5],[59,256,91,4,"config"],[59,262,91,10],[59,264,92,4,"indentation"],[59,275,93,2],[59,276,93,3],[60,2,94,0],[60,3,94,1],[61,2,95,0,"exports"],[61,9,95,7],[61,10,95,8,"serialize"],[61,19,95,17],[61,22,95,20,"serialize"],[61,31,95,29],[62,2,96,0],[62,6,96,6,"plugin"],[62,12,96,12],[62,15,96,15],[63,4,97,2,"serialize"],[63,13,97,11],[64,4,98,2,"test"],[65,2,99,0],[65,3,99,1],[66,2,100,0],[66,6,100,4,"_default"],[66,14,100,12],[66,17,100,15,"plugin"],[66,23,100,21],[67,2,101,0,"exports"],[67,9,101,7],[67,10,101,8,"default"],[67,17,101,15],[67,20,101,18,"_default"],[67,28,101,26],[68,0,101,27],[68,3]],"functionMap":{"names":["<global>","testHasAttribute","testNode","test","nodeIsText","nodeIsComment","nodeIsFragment","serialize","Array.from$argument_1","Array.from.reduce$argument_0"],"mappings":"AAA;yBCmB;CDM;iBEC;CFa;aGC,8CH;AIE;CJE;AKC;CLE;AMC;CNE;kBOC;sCCkB,iBD;6CEG;WFG;CPkB"}},"type":"js/module"}]}