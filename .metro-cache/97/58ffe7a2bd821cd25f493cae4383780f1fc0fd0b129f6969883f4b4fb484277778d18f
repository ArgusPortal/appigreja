{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":366,"column":38,"index":16604}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"./WebBrowser.types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":183},"end":{"line":4,"column":88,"index":271}},{"start":{"line":4,"column":0,"index":183},"end":{"line":4,"column":88,"index":271}},{"start":{"line":4,"column":0,"index":183},"end":{"line":4,"column":88,"index":271}},{"start":{"line":4,"column":0,"index":183},"end":{"line":4,"column":88,"index":271}},{"start":{"line":4,"column":0,"index":183},"end":{"line":4,"column":88,"index":271}}],"key":"29Oh91VcmrXUhNZnDncgfxSU3bQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":366,"column":38,"index":16604}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":57},"end":{"line":2,"column":74,"index":131}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"./ExpoWebBrowser","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":132},"end":{"line":3,"column":50,"index":182}}],"key":"OZkL6dn5GThy2fR1W+98Qlxlxh4="}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}},{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":56,"index":56}}],"key":"fU8WLIPqoAGygnPbZ/QJiQQfXEY="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, \"WebBrowserPresentationStyle\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[1], \"./WebBrowser.types\").WebBrowserPresentationStyle;\n    }\n  });\n  Object.defineProperty(exports, \"WebBrowserResultType\", {\n    enumerable: true,\n    get: function () {\n      return require(_dependencyMap[1], \"./WebBrowser.types\").WebBrowserResultType;\n    }\n  });\n  exports.coolDownAsync = coolDownAsync;\n  exports.dismissAuthSession = dismissAuthSession;\n  exports.dismissBrowser = dismissBrowser;\n  exports.getCustomTabsSupportingBrowsersAsync = getCustomTabsSupportingBrowsersAsync;\n  exports.mayInitWithUrlAsync = mayInitWithUrlAsync;\n  exports.maybeCompleteAuthSession = maybeCompleteAuthSession;\n  exports.openAuthSessionAsync = openAuthSessionAsync;\n  exports.openBrowserAsync = openBrowserAsync;\n  exports.warmUpAsync = warmUpAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _reactNative = require(_dependencyMap[3], \"react-native\");\n  var _ExpoWebBrowser = _interopRequireDefault(require(_dependencyMap[4], \"./ExpoWebBrowser\"));\n  var emptyCustomTabsPackages = {\n    defaultBrowserPackage: undefined,\n    preferredBrowserPackage: undefined,\n    browserPackages: [],\n    servicePackages: []\n  };\n  // @needsAudit\n  /**\n   * Returns a list of applications package names supporting Custom Tabs, Custom Tabs\n   * service, user chosen and preferred one. This may not be fully reliable, since it uses\n   * `PackageManager.getResolvingActivities` under the hood. (For example, some browsers might not be\n   * present in browserPackages list once another browser is set to default.)\n   *\n   * @return The promise which fulfils with [`WebBrowserCustomTabsResults`](#webbrowsercustomtabsresults) object.\n   * @platform android\n   */\n  function getCustomTabsSupportingBrowsersAsync() {\n    return _getCustomTabsSupportingBrowsersAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * This method calls `warmUp` method on [CustomTabsClient](https://developer.android.com/reference/android/support/customtabs/CustomTabsClient.html#warmup(long))\n   * for specified package.\n   *\n   * @param browserPackage Package of browser to be warmed up. If not set, preferred browser will be warmed.\n   *\n   * @return A promise which fulfils with `WebBrowserWarmUpResult` object.\n   * @platform android\n   */\n  function _getCustomTabsSupportingBrowsersAsync() {\n    _getCustomTabsSupportingBrowsersAsync = (0, _asyncToGenerator2.default)(function* () {\n      if (!_ExpoWebBrowser.default.getCustomTabsSupportingBrowsersAsync) {\n        throw new (require(_dependencyMap[5], \"expo-modules-core\").UnavailabilityError)('WebBrowser', 'getCustomTabsSupportingBrowsersAsync');\n      }\n      if (_reactNative.Platform.OS !== 'android') {\n        return emptyCustomTabsPackages;\n      } else {\n        return yield _ExpoWebBrowser.default.getCustomTabsSupportingBrowsersAsync();\n      }\n    });\n    return _getCustomTabsSupportingBrowsersAsync.apply(this, arguments);\n  }\n  function warmUpAsync(_x) {\n    return _warmUpAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * This method initiates (if needed) [CustomTabsSession](https://developer.android.com/reference/android/support/customtabs/CustomTabsSession.html#maylaunchurl)\n   * and calls its `mayLaunchUrl` method for browser specified by the package.\n   *\n   * @param url The url of page that is likely to be loaded first when opening browser.\n   * @param browserPackage Package of browser to be informed. If not set, preferred\n   * browser will be used.\n   *\n   * @return A promise which fulfils with `WebBrowserMayInitWithUrlResult` object.\n   * @platform android\n   */\n  function _warmUpAsync() {\n    _warmUpAsync = (0, _asyncToGenerator2.default)(function* (browserPackage) {\n      if (!_ExpoWebBrowser.default.warmUpAsync) {\n        throw new (require(_dependencyMap[5], \"expo-modules-core\").UnavailabilityError)('WebBrowser', 'warmUpAsync');\n      }\n      if (_reactNative.Platform.OS !== 'android') {\n        return {};\n      } else {\n        return yield _ExpoWebBrowser.default.warmUpAsync(browserPackage);\n      }\n    });\n    return _warmUpAsync.apply(this, arguments);\n  }\n  function mayInitWithUrlAsync(_x2, _x3) {\n    return _mayInitWithUrlAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * This methods removes all bindings to services created by [`warmUpAsync`](#webbrowserwarmupasyncbrowserpackage)\n   * or [`mayInitWithUrlAsync`](#webbrowsermayinitwithurlasyncurl-browserpackage). You should call\n   * this method once you don't need them to avoid potential memory leaks. However, those binding\n   * would be cleared once your application is destroyed, which might be sufficient in most cases.\n   *\n   * @param browserPackage Package of browser to be cooled. If not set, preferred browser will be used.\n   *\n   * @return The promise which fulfils with ` WebBrowserCoolDownResult` when cooling is performed, or\n   * an empty object when there was no connection to be dismissed.\n   * @platform android\n   */\n  function _mayInitWithUrlAsync() {\n    _mayInitWithUrlAsync = (0, _asyncToGenerator2.default)(function* (url, browserPackage) {\n      if (!_ExpoWebBrowser.default.mayInitWithUrlAsync) {\n        throw new (require(_dependencyMap[5], \"expo-modules-core\").UnavailabilityError)('WebBrowser', 'mayInitWithUrlAsync');\n      }\n      if (_reactNative.Platform.OS !== 'android') {\n        return {};\n      } else {\n        return yield _ExpoWebBrowser.default.mayInitWithUrlAsync(url, browserPackage);\n      }\n    });\n    return _mayInitWithUrlAsync.apply(this, arguments);\n  }\n  function coolDownAsync(_x4) {\n    return _coolDownAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Opens the url with Safari in a modal on iOS using [`SFSafariViewController`](https://developer.apple.com/documentation/safariservices/sfsafariviewcontroller),\n   * and Chrome in a new [custom tab](https://developer.chrome.com/multidevice/android/customtabs)\n   * on Android. On iOS, the modal Safari will not share cookies with the system Safari. If you need\n   * this, use [`openAuthSessionAsync`](#webbrowseropenauthsessionasyncurl-redirecturl-options).\n   *\n   * @param url The url to open in the web browser.\n   * @param browserParams A dictionary of key-value pairs.\n   *\n   * @return The promise behaves differently based on the platform.\n   * On Android promise resolves with `{ type: 'opened' }` if we were able to open browser.\n   * On iOS:\n   * - If the user closed the web browser, the Promise resolves with `{ type: 'cancel' }`.\n   * - If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser), the Promise resolves with `{ type: 'dismiss' }`.\n   */\n  function _coolDownAsync() {\n    _coolDownAsync = (0, _asyncToGenerator2.default)(function* (browserPackage) {\n      if (!_ExpoWebBrowser.default.coolDownAsync) {\n        throw new (require(_dependencyMap[5], \"expo-modules-core\").UnavailabilityError)('WebBrowser', 'coolDownAsync');\n      }\n      if (_reactNative.Platform.OS !== 'android') {\n        return {};\n      } else {\n        return yield _ExpoWebBrowser.default.coolDownAsync(browserPackage);\n      }\n    });\n    return _coolDownAsync.apply(this, arguments);\n  }\n  function openBrowserAsync(_x5) {\n    return _openBrowserAsync.apply(this, arguments);\n  } // @needsAudit\n  /**\n   * Dismisses the presented web browser.\n   *\n   * @return The promise that resolves with `{ type: 'dismiss' }` on the successful attempt or throws an error if dismiss functionality is not available.\n   * @platform ios\n   */\n  function _openBrowserAsync() {\n    _openBrowserAsync = (0, _asyncToGenerator2.default)(function* (url) {\n      var browserParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!_ExpoWebBrowser.default.openBrowserAsync) {\n        throw new (require(_dependencyMap[5], \"expo-modules-core\").UnavailabilityError)('WebBrowser', 'openBrowserAsync');\n      }\n      var result;\n      try {\n        result = yield _ExpoWebBrowser.default.openBrowserAsync(url, _processOptions(browserParams));\n      } catch {\n        return {\n          type: require(_dependencyMap[1], \"./WebBrowser.types\").WebBrowserResultType.LOCKED\n        };\n      }\n      return result;\n    });\n    return _openBrowserAsync.apply(this, arguments);\n  }\n  function dismissBrowser() {\n    return _ExpoWebBrowser.default.dismissBrowser?.();\n  }\n  // @needsAudit\n  /**\n   * # On Android:\n   * This will be done using a \"custom Chrome tabs\" browser, [AppState](https://reactnative.dev/docs/appstate),\n   * and [Linking](./linking/) APIs.\n   *\n   * # On iOS:\n   * Opens the url with Safari in a modal using `ASWebAuthenticationSession`. The user will be asked\n   * whether to allow the app to authenticate using the given url.\n   * To handle redirection back to the mobile application, the redirect URI set in the authentication server\n   * has to use the protocol provided as the scheme in **app.json** [`expo.scheme`](./../config/app/#scheme).\n   * For example, `demo://` not `https://` protocol.\n   * Using `Linking.addEventListener` is not needed and can have side effects.\n   *\n   * # On web:\n   * > This API can only be used in a secure environment (localhost/https).\n   * to test this. Otherwise, an error with code [`ERR_WEB_BROWSER_CRYPTO`](#err_web_browser_crypto) will be thrown.\n   * This will use the browser's [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open) API.\n   * - _Desktop_: This will create a new web popup window in the browser that can be closed later using `WebBrowser.maybeCompleteAuthSession()`.\n   * - _Mobile_: This will open a new tab in the browser which can be closed using `WebBrowser.maybeCompleteAuthSession()`.\n   *\n   * How this works on web:\n   * - A crypto state will be created for verifying the redirect.\n   *   - This means you need to run with `npx expo start --https`\n   * - The state will be added to the window's `localstorage`. This ensures that auth cannot complete\n   *   unless it's done from a page running with the same origin as it was started.\n   *   Ex: if `openAuthSessionAsync` is invoked on `https://localhost:19006`, then `maybeCompleteAuthSession`\n   *   must be invoked on a page hosted from the origin `https://localhost:19006`. Using a different\n   *   website, or even a different host like `https://128.0.0.*:19006` for example will not work.\n   * - A timer will be started to check for every 1000 milliseconds (1 second) to detect if the window\n   *   has been closed by the user. If this happens then a promise will resolve with `{ type: 'dismiss' }`.\n   *\n   * > On mobile web, Chrome and Safari will block any call to [`window.open()`](https://developer.mozilla.org/en-US/docs/Web/API/Window/open)\n   * which takes too long to fire after a user interaction. This method must be invoked immediately\n   * after a user interaction. If the event is blocked, an error with code [`ERR_WEB_BROWSER_BLOCKED`](#err_web_browser_blocked) will be thrown.\n   *\n   * @param url The url to open in the web browser. This should be a login page.\n   * @param redirectUrl _Optional_ - The url to deep link back into your app.\n   * On web, this defaults to the output of [`Linking.createURL(\"\")`](./linking/#linkingcreateurlpath-namedparameters).\n   * @param options _Optional_ - An object extending the [`WebBrowserOpenOptions`](#webbrowseropenoptions).\n   * If there is no native AuthSession implementation available (which is the case on Android)\n   * these params will be used in the browser polyfill. If there is a native AuthSession implementation,\n   * these params will be ignored.\n   *\n   * @return\n   * - If the user does not permit the application to authenticate with the given url, the Promise fulfills with `{ type: 'cancel' }` object.\n   * - If the user closed the web browser, the Promise fulfills with `{ type: 'cancel' }` object.\n   * - If the browser is closed using [`dismissBrowser`](#webbrowserdismissbrowser),\n   * the Promise fulfills with `{ type: 'dismiss' }` object.\n   */\n  function openAuthSessionAsync(_x6, _x7) {\n    return _openAuthSessionAsync.apply(this, arguments);\n  }\n  /**\n   * Dismisses the current authentication session. On web, it will close the popup window associated with auth process.\n   *\n   * @return The `void` on the successful attempt or throws an error if dismiss functionality is not available.\n   *\n   * @platform ios\n   * @platform web\n   */\n  function _openAuthSessionAsync() {\n    _openAuthSessionAsync = (0, _asyncToGenerator2.default)(function* (url, redirectUrl) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (_authSessionIsNativelySupported()) {\n        if (!_ExpoWebBrowser.default.openAuthSessionAsync) {\n          throw new (require(_dependencyMap[5], \"expo-modules-core\").UnavailabilityError)('WebBrowser', 'openAuthSessionAsync');\n        }\n        if (['ios', 'web'].includes(_reactNative.Platform.OS)) {\n          return _ExpoWebBrowser.default.openAuthSessionAsync(url, redirectUrl, _processOptions(options));\n        }\n        return _ExpoWebBrowser.default.openAuthSessionAsync(url, redirectUrl);\n      } else {\n        return _openAuthSessionPolyfillAsync(url, redirectUrl, options);\n      }\n    });\n    return _openAuthSessionAsync.apply(this, arguments);\n  }\n  function dismissAuthSession() {\n    if (_authSessionIsNativelySupported()) {\n      if (!_ExpoWebBrowser.default.dismissAuthSession) {\n        throw new (require(_dependencyMap[5], \"expo-modules-core\").UnavailabilityError)('WebBrowser', 'dismissAuthSession');\n      }\n      _ExpoWebBrowser.default.dismissAuthSession();\n    } else {\n      if (!_ExpoWebBrowser.default.dismissBrowser) {\n        throw new (require(_dependencyMap[5], \"expo-modules-core\").UnavailabilityError)('WebBrowser', 'dismissBrowser');\n      }\n      _ExpoWebBrowser.default.dismissBrowser();\n    }\n  }\n  // @needsAudit\n  /**\n   * Possibly completes an authentication session on web in a window popup. The method\n   * should be invoked on the page that the window redirects to.\n   *\n   * @param options\n   *\n   * @return Returns an object with message about why the redirect failed or succeeded:\n   *\n   * If `type` is set to `failed`, the reason depends on the message:\n   * - `Not supported on this platform`: If the platform doesn't support this method (Android, iOS).\n   * - `Cannot use expo-web-browser in a non-browser environment`: If the code was executed in an SSR\n   *   or node environment.\n   * - `No auth session is currently in progress`: (the cached state wasn't found in local storage).\n   *   This can happen if the window redirects to an origin (website) that is different to the initial\n   *   website origin. If this happens in development, it may be because the auth started on localhost\n   *   and finished on your computer port (Ex: `128.0.0.*`). This is controlled by the `redirectUrl`\n   *   and `returnUrl`.\n   * - `Current URL \"<URL>\" and original redirect URL \"<URL>\" do not match`: This can occur when the\n   *   redirect URL doesn't match what was initial defined as the `returnUrl`. You can skip this test\n   *   in development by passing `{ skipRedirectCheck: true }` to the function.\n   *\n   * If `type` is set to `success`, the parent window will attempt to close the child window immediately.\n   *\n   * If the error `ERR_WEB_BROWSER_REDIRECT` was thrown, it may mean that the parent window was\n   * reloaded before the auth was completed. In this case you'll need to close the child window manually.\n   *\n   * @platform web\n   */\n  function maybeCompleteAuthSession() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (_ExpoWebBrowser.default.maybeCompleteAuthSession) {\n      return _ExpoWebBrowser.default.maybeCompleteAuthSession(options);\n    }\n    return {\n      type: 'failed',\n      message: 'Not supported on this platform'\n    };\n  }\n  function _processOptions(options) {\n    return {\n      ...options,\n      controlsColor: (0, _reactNative.processColor)(options.controlsColor),\n      toolbarColor: (0, _reactNative.processColor)(options.toolbarColor),\n      secondaryToolbarColor: (0, _reactNative.processColor)(options.secondaryToolbarColor)\n    };\n  }\n  /* Android polyfill for ASWebAuthenticationSession flow */\n  function _authSessionIsNativelySupported() {\n    return _reactNative.Platform.OS !== 'android';\n  }\n  var _redirectSubscription = null;\n  /*\n   * openBrowserAsync on Android doesn't wait until closed, so we need to polyfill\n   * it with AppState\n   */\n  // Store the `resolve` function from a Promise to fire when the AppState\n  // returns to active\n  var _onWebBrowserCloseAndroid = null;\n  // If the initial AppState.currentState is null, we assume that the first call to\n  // AppState#change event is not actually triggered by a real change,\n  // is triggered instead by the bridge capturing the current state\n  // (https://reactnative.dev/docs/appstate#basic-usage)\n  var _isAppStateAvailable = _reactNative.AppState.currentState !== null;\n  function _onAppStateChangeAndroid(state) {\n    if (!_isAppStateAvailable) {\n      _isAppStateAvailable = true;\n      return;\n    }\n    if (state === 'active' && _onWebBrowserCloseAndroid) {\n      _onWebBrowserCloseAndroid();\n    }\n  }\n  function _openBrowserAndWaitAndroidAsync(_x8) {\n    return _openBrowserAndWaitAndroidAsync2.apply(this, arguments);\n  }\n  function _openBrowserAndWaitAndroidAsync2() {\n    _openBrowserAndWaitAndroidAsync2 = (0, _asyncToGenerator2.default)(function* (startUrl) {\n      var browserParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var appStateChangedToActive = new Promise(resolve => {\n        _onWebBrowserCloseAndroid = resolve;\n      });\n      var stateChangeSubscription = _reactNative.AppState.addEventListener('change', _onAppStateChangeAndroid);\n      var result = {\n        type: require(_dependencyMap[1], \"./WebBrowser.types\").WebBrowserResultType.CANCEL\n      };\n      var type = null;\n      try {\n        var _yield$openBrowserAsy = yield openBrowserAsync(startUrl, browserParams);\n        type = _yield$openBrowserAsy.type;\n      } catch (e) {\n        stateChangeSubscription.remove();\n        _onWebBrowserCloseAndroid = null;\n        throw e;\n      }\n      if (type === 'opened') {\n        yield appStateChangedToActive;\n        result = {\n          type: require(_dependencyMap[1], \"./WebBrowser.types\").WebBrowserResultType.DISMISS\n        };\n      }\n      stateChangeSubscription.remove();\n      _onWebBrowserCloseAndroid = null;\n      return result;\n    });\n    return _openBrowserAndWaitAndroidAsync2.apply(this, arguments);\n  }\n  function _openAuthSessionPolyfillAsync(_x9, _x10) {\n    return _openAuthSessionPolyfillAsync2.apply(this, arguments);\n  }\n  function _openAuthSessionPolyfillAsync2() {\n    _openAuthSessionPolyfillAsync2 = (0, _asyncToGenerator2.default)(function* (startUrl, returnUrl) {\n      var browserParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      if (_redirectSubscription) {\n        throw new Error(`The WebBrowser's auth session is in an invalid state with a redirect handler set when it should not be`);\n      }\n      if (_onWebBrowserCloseAndroid) {\n        throw new Error(`WebBrowser is already open, only one can be open at a time`);\n      }\n      try {\n        if (_reactNative.Platform.OS === 'android') {\n          return yield Promise.race([_openBrowserAndWaitAndroidAsync(startUrl, browserParams), _waitForRedirectAsync(returnUrl)]);\n        } else {\n          return yield Promise.race([openBrowserAsync(startUrl, browserParams), _waitForRedirectAsync(returnUrl)]);\n        }\n      } finally {\n        // We can't dismiss the browser on Android, only call this when it's available.\n        // Users on Android need to manually press the 'x' button in Chrome Custom Tabs, sadly.\n        if (_ExpoWebBrowser.default.dismissBrowser) {\n          _ExpoWebBrowser.default.dismissBrowser();\n        }\n        _stopWaitingForRedirect();\n      }\n    });\n    return _openAuthSessionPolyfillAsync2.apply(this, arguments);\n  }\n  function _stopWaitingForRedirect() {\n    if (!_redirectSubscription) {\n      throw new Error(`The WebBrowser auth session is in an invalid state with no redirect handler when one should be set`);\n    }\n    _redirectSubscription.remove();\n    _redirectSubscription = null;\n  }\n  function _waitForRedirectAsync(returnUrl) {\n    // Note that this Promise never resolves when `returnUrl` is nullish\n    return new Promise(resolve => {\n      var redirectHandler = event => {\n        if (returnUrl && event.url.startsWith(returnUrl)) {\n          resolve({\n            url: event.url,\n            type: 'success'\n          });\n        }\n      };\n      _redirectSubscription = _reactNative.Linking.addEventListener('url', redirectHandler);\n    });\n  }\n});","lineCount":435,"map":[[28,2,2,0],[28,6,2,0,"_reactNative"],[28,18,2,0],[28,21,2,0,"require"],[28,28,2,0],[28,29,2,0,"_dependencyMap"],[28,43,2,0],[29,2,3,0],[29,6,3,0,"_ExpoWebBrowser"],[29,21,3,0],[29,24,3,0,"_interopRequireDefault"],[29,46,3,0],[29,47,3,0,"require"],[29,54,3,0],[29,55,3,0,"_dependencyMap"],[29,69,3,0],[30,2,6,0],[30,6,6,6,"emptyCustomTabsPackages"],[30,29,6,29],[30,32,6,32],[31,4,7,4,"defaultBrowserPackage"],[31,25,7,25],[31,27,7,27,"undefined"],[31,36,7,36],[32,4,8,4,"preferredBrowserPackage"],[32,27,8,27],[32,29,8,29,"undefined"],[32,38,8,38],[33,4,9,4,"browserPackages"],[33,19,9,19],[33,21,9,21],[33,23,9,23],[34,4,10,4,"servicePackages"],[34,19,10,19],[34,21,10,21],[35,2,11,0],[35,3,11,1],[36,2,12,0],[37,2,13,0],[38,0,14,0],[39,0,15,0],[40,0,16,0],[41,0,17,0],[42,0,18,0],[43,0,19,0],[44,0,20,0],[45,0,21,0],[46,2,13,0],[46,11,22,22,"getCustomTabsSupportingBrowsersAsync"],[46,47,22,58,"getCustomTabsSupportingBrowsersAsync"],[46,48,22,58],[47,4,22,58],[47,11,22,58,"_getCustomTabsSupportingBrowsersAsync"],[47,48,22,58],[47,49,22,58,"apply"],[47,54,22,58],[47,61,22,58,"arguments"],[47,70,22,58],[48,2,22,58],[48,4,33,0],[49,2,34,0],[50,0,35,0],[51,0,36,0],[52,0,37,0],[53,0,38,0],[54,0,39,0],[55,0,40,0],[56,0,41,0],[57,0,42,0],[58,2,34,0],[58,11,34,0,"_getCustomTabsSupportingBrowsersAsync"],[58,49,34,0],[59,4,34,0,"_getCustomTabsSupportingBrowsersAsync"],[59,41,34,0],[59,48,34,0,"_asyncToGenerator2"],[59,66,34,0],[59,67,34,0,"default"],[59,74,34,0],[59,76,22,7],[59,89,22,61],[60,6,23,4],[60,10,23,8],[60,11,23,9,"ExponentWebBrowser"],[60,34,23,27],[60,35,23,28,"getCustomTabsSupportingBrowsersAsync"],[60,71,23,64],[60,73,23,66],[61,8,24,8],[61,14,24,14],[61,19,24,18,"UnavailabilityError"],[61,45,24,18],[61,46,24,18,"UnavailabilityError"],[61,86,24,37],[61,88,24,38],[61,100,24,50],[61,102,24,52],[61,140,24,90],[61,141,24,91],[62,6,25,4],[63,6,26,4],[63,10,26,8,"Platform"],[63,31,26,16],[63,32,26,17,"OS"],[63,34,26,19],[63,39,26,24],[63,48,26,33],[63,50,26,35],[64,8,27,8],[64,15,27,15,"emptyCustomTabsPackages"],[64,38,27,38],[65,6,28,4],[65,7,28,5],[65,13,29,9],[66,8,30,8],[66,21,30,21,"ExponentWebBrowser"],[66,44,30,39],[66,45,30,40,"getCustomTabsSupportingBrowsersAsync"],[66,81,30,76],[66,82,30,77],[66,83,30,78],[67,6,31,4],[68,4,32,0],[68,5,32,1],[69,4,32,1],[69,11,32,1,"_getCustomTabsSupportingBrowsersAsync"],[69,48,32,1],[69,49,32,1,"apply"],[69,54,32,1],[69,61,32,1,"arguments"],[69,70,32,1],[70,2,32,1],[71,2,32,1],[71,11,43,22,"warmUpAsync"],[71,22,43,33,"warmUpAsync"],[71,23,43,33,"_x"],[71,25,43,33],[72,4,43,33],[72,11,43,33,"_warmUpAsync"],[72,23,43,33],[72,24,43,33,"apply"],[72,29,43,33],[72,36,43,33,"arguments"],[72,45,43,33],[73,2,43,33],[73,4,54,0],[74,2,55,0],[75,0,56,0],[76,0,57,0],[77,0,58,0],[78,0,59,0],[79,0,60,0],[80,0,61,0],[81,0,62,0],[82,0,63,0],[83,0,64,0],[84,0,65,0],[85,2,55,0],[85,11,55,0,"_warmUpAsync"],[85,24,55,0],[86,4,55,0,"_warmUpAsync"],[86,16,55,0],[86,23,55,0,"_asyncToGenerator2"],[86,41,55,0],[86,42,55,0,"default"],[86,49,55,0],[86,51,43,7],[86,62,43,34,"browserPackage"],[86,76,43,48],[86,78,43,50],[87,6,44,4],[87,10,44,8],[87,11,44,9,"ExponentWebBrowser"],[87,34,44,27],[87,35,44,28,"warmUpAsync"],[87,46,44,39],[87,48,44,41],[88,8,45,8],[88,14,45,14],[88,19,45,18,"UnavailabilityError"],[88,45,45,18],[88,46,45,18,"UnavailabilityError"],[88,86,45,37],[88,88,45,38],[88,100,45,50],[88,102,45,52],[88,115,45,65],[88,116,45,66],[89,6,46,4],[90,6,47,4],[90,10,47,8,"Platform"],[90,31,47,16],[90,32,47,17,"OS"],[90,34,47,19],[90,39,47,24],[90,48,47,33],[90,50,47,35],[91,8,48,8],[91,15,48,15],[91,16,48,16],[91,17,48,17],[92,6,49,4],[92,7,49,5],[92,13,50,9],[93,8,51,8],[93,21,51,21,"ExponentWebBrowser"],[93,44,51,39],[93,45,51,40,"warmUpAsync"],[93,56,51,51],[93,57,51,52,"browserPackage"],[93,71,51,66],[93,72,51,67],[94,6,52,4],[95,4,53,0],[95,5,53,1],[96,4,53,1],[96,11,53,1,"_warmUpAsync"],[96,23,53,1],[96,24,53,1,"apply"],[96,29,53,1],[96,36,53,1,"arguments"],[96,45,53,1],[97,2,53,1],[98,2,53,1],[98,11,66,22,"mayInitWithUrlAsync"],[98,30,66,41,"mayInitWithUrlAsync"],[98,31,66,41,"_x2"],[98,34,66,41],[98,36,66,41,"_x3"],[98,39,66,41],[99,4,66,41],[99,11,66,41,"_mayInitWithUrlAsync"],[99,31,66,41],[99,32,66,41,"apply"],[99,37,66,41],[99,44,66,41,"arguments"],[99,53,66,41],[100,2,66,41],[100,4,77,0],[101,2,78,0],[102,0,79,0],[103,0,80,0],[104,0,81,0],[105,0,82,0],[106,0,83,0],[107,0,84,0],[108,0,85,0],[109,0,86,0],[110,0,87,0],[111,0,88,0],[112,0,89,0],[113,2,78,0],[113,11,78,0,"_mayInitWithUrlAsync"],[113,32,78,0],[114,4,78,0,"_mayInitWithUrlAsync"],[114,24,78,0],[114,31,78,0,"_asyncToGenerator2"],[114,49,78,0],[114,50,78,0,"default"],[114,57,78,0],[114,59,66,7],[114,70,66,42,"url"],[114,73,66,45],[114,75,66,47,"browserPackage"],[114,89,66,61],[114,91,66,63],[115,6,67,4],[115,10,67,8],[115,11,67,9,"ExponentWebBrowser"],[115,34,67,27],[115,35,67,28,"mayInitWithUrlAsync"],[115,54,67,47],[115,56,67,49],[116,8,68,8],[116,14,68,14],[116,19,68,18,"UnavailabilityError"],[116,45,68,18],[116,46,68,18,"UnavailabilityError"],[116,86,68,37],[116,88,68,38],[116,100,68,50],[116,102,68,52],[116,123,68,73],[116,124,68,74],[117,6,69,4],[118,6,70,4],[118,10,70,8,"Platform"],[118,31,70,16],[118,32,70,17,"OS"],[118,34,70,19],[118,39,70,24],[118,48,70,33],[118,50,70,35],[119,8,71,8],[119,15,71,15],[119,16,71,16],[119,17,71,17],[120,6,72,4],[120,7,72,5],[120,13,73,9],[121,8,74,8],[121,21,74,21,"ExponentWebBrowser"],[121,44,74,39],[121,45,74,40,"mayInitWithUrlAsync"],[121,64,74,59],[121,65,74,60,"url"],[121,68,74,63],[121,70,74,65,"browserPackage"],[121,84,74,79],[121,85,74,80],[122,6,75,4],[123,4,76,0],[123,5,76,1],[124,4,76,1],[124,11,76,1,"_mayInitWithUrlAsync"],[124,31,76,1],[124,32,76,1,"apply"],[124,37,76,1],[124,44,76,1,"arguments"],[124,53,76,1],[125,2,76,1],[126,2,76,1],[126,11,90,22,"coolDownAsync"],[126,24,90,35,"coolDownAsync"],[126,25,90,35,"_x4"],[126,28,90,35],[127,4,90,35],[127,11,90,35,"_coolDownAsync"],[127,25,90,35],[127,26,90,35,"apply"],[127,31,90,35],[127,38,90,35,"arguments"],[127,47,90,35],[128,2,90,35],[128,4,101,0],[129,2,102,0],[130,0,103,0],[131,0,104,0],[132,0,105,0],[133,0,106,0],[134,0,107,0],[135,0,108,0],[136,0,109,0],[137,0,110,0],[138,0,111,0],[139,0,112,0],[140,0,113,0],[141,0,114,0],[142,0,115,0],[143,0,116,0],[144,2,102,0],[144,11,102,0,"_coolDownAsync"],[144,26,102,0],[145,4,102,0,"_coolDownAsync"],[145,18,102,0],[145,25,102,0,"_asyncToGenerator2"],[145,43,102,0],[145,44,102,0,"default"],[145,51,102,0],[145,53,90,7],[145,64,90,36,"browserPackage"],[145,78,90,50],[145,80,90,52],[146,6,91,4],[146,10,91,8],[146,11,91,9,"ExponentWebBrowser"],[146,34,91,27],[146,35,91,28,"coolDownAsync"],[146,48,91,41],[146,50,91,43],[147,8,92,8],[147,14,92,14],[147,19,92,18,"UnavailabilityError"],[147,45,92,18],[147,46,92,18,"UnavailabilityError"],[147,86,92,37],[147,88,92,38],[147,100,92,50],[147,102,92,52],[147,117,92,67],[147,118,92,68],[148,6,93,4],[149,6,94,4],[149,10,94,8,"Platform"],[149,31,94,16],[149,32,94,17,"OS"],[149,34,94,19],[149,39,94,24],[149,48,94,33],[149,50,94,35],[150,8,95,8],[150,15,95,15],[150,16,95,16],[150,17,95,17],[151,6,96,4],[151,7,96,5],[151,13,97,9],[152,8,98,8],[152,21,98,21,"ExponentWebBrowser"],[152,44,98,39],[152,45,98,40,"coolDownAsync"],[152,58,98,53],[152,59,98,54,"browserPackage"],[152,73,98,68],[152,74,98,69],[153,6,99,4],[154,4,100,0],[154,5,100,1],[155,4,100,1],[155,11,100,1,"_coolDownAsync"],[155,25,100,1],[155,26,100,1,"apply"],[155,31,100,1],[155,38,100,1,"arguments"],[155,47,100,1],[156,2,100,1],[157,2,100,1],[157,11,117,22,"openBrowserAsync"],[157,27,117,38,"openBrowserAsync"],[157,28,117,38,"_x5"],[157,31,117,38],[158,4,117,38],[158,11,117,38,"_openBrowserAsync"],[158,28,117,38],[158,29,117,38,"apply"],[158,34,117,38],[158,41,117,38,"arguments"],[158,50,117,38],[159,2,117,38],[159,4,130,0],[160,2,131,0],[161,0,132,0],[162,0,133,0],[163,0,134,0],[164,0,135,0],[165,0,136,0],[166,2,131,0],[166,11,131,0,"_openBrowserAsync"],[166,29,131,0],[167,4,131,0,"_openBrowserAsync"],[167,21,131,0],[167,28,131,0,"_asyncToGenerator2"],[167,46,131,0],[167,47,131,0,"default"],[167,54,131,0],[167,56,117,7],[167,67,117,39,"url"],[167,70,117,42],[167,72,117,64],[168,6,117,64],[168,10,117,44,"browserParams"],[168,23,117,57],[168,26,117,57,"arguments"],[168,35,117,57],[168,36,117,57,"length"],[168,42,117,57],[168,50,117,57,"arguments"],[168,59,117,57],[168,67,117,57,"undefined"],[168,76,117,57],[168,79,117,57,"arguments"],[168,88,117,57],[168,94,117,60],[168,95,117,61],[168,96,117,62],[169,6,118,4],[169,10,118,8],[169,11,118,9,"ExponentWebBrowser"],[169,34,118,27],[169,35,118,28,"openBrowserAsync"],[169,51,118,44],[169,53,118,46],[170,8,119,8],[170,14,119,14],[170,19,119,18,"UnavailabilityError"],[170,45,119,18],[170,46,119,18,"UnavailabilityError"],[170,86,119,37],[170,88,119,38],[170,100,119,50],[170,102,119,52],[170,120,119,70],[170,121,119,71],[171,6,120,4],[172,6,121,4],[172,10,121,8,"result"],[172,16,121,14],[173,6,122,4],[173,10,122,8],[174,8,123,8,"result"],[174,14,123,14],[174,23,123,23,"ExponentWebBrowser"],[174,46,123,41],[174,47,123,42,"openBrowserAsync"],[174,63,123,58],[174,64,123,59,"url"],[174,67,123,62],[174,69,123,64,"_processOptions"],[174,84,123,79],[174,85,123,80,"browserParams"],[174,98,123,93],[174,99,123,94],[174,100,123,95],[175,6,124,4],[175,7,124,5],[175,8,125,4],[175,14,125,10],[176,8,126,8],[176,15,126,15],[177,10,126,17,"type"],[177,14,126,21],[177,16,126,23,"WebBrowserResultType"],[177,42,126,23],[177,43,126,23,"WebBrowserResultType"],[177,85,126,43],[177,86,126,44,"LOCKED"],[178,8,126,51],[178,9,126,52],[179,6,127,4],[180,6,128,4],[180,13,128,11,"result"],[180,19,128,17],[181,4,129,0],[181,5,129,1],[182,4,129,1],[182,11,129,1,"_openBrowserAsync"],[182,28,129,1],[182,29,129,1,"apply"],[182,34,129,1],[182,41,129,1,"arguments"],[182,50,129,1],[183,2,129,1],[184,2,137,7],[184,11,137,16,"dismissBrowser"],[184,25,137,30,"dismissBrowser"],[184,26,137,30],[184,28,137,33],[185,4,138,4],[185,11,138,11,"ExponentWebBrowser"],[185,34,138,29],[185,35,138,30,"dismissBrowser"],[185,49,138,44],[185,52,138,47],[185,53,138,48],[186,2,139,0],[187,2,140,0],[188,2,141,0],[189,0,142,0],[190,0,143,0],[191,0,144,0],[192,0,145,0],[193,0,146,0],[194,0,147,0],[195,0,148,0],[196,0,149,0],[197,0,150,0],[198,0,151,0],[199,0,152,0],[200,0,153,0],[201,0,154,0],[202,0,155,0],[203,0,156,0],[204,0,157,0],[205,0,158,0],[206,0,159,0],[207,0,160,0],[208,0,161,0],[209,0,162,0],[210,0,163,0],[211,0,164,0],[212,0,165,0],[213,0,166,0],[214,0,167,0],[215,0,168,0],[216,0,169,0],[217,0,170,0],[218,0,171,0],[219,0,172,0],[220,0,173,0],[221,0,174,0],[222,0,175,0],[223,0,176,0],[224,0,177,0],[225,0,178,0],[226,0,179,0],[227,0,180,0],[228,0,181,0],[229,0,182,0],[230,0,183,0],[231,0,184,0],[232,0,185,0],[233,0,186,0],[234,0,187,0],[235,0,188,0],[236,0,189,0],[237,2,141,0],[237,11,190,22,"openAuthSessionAsync"],[237,31,190,42,"openAuthSessionAsync"],[237,32,190,42,"_x6"],[237,35,190,42],[237,37,190,42,"_x7"],[237,40,190,42],[238,4,190,42],[238,11,190,42,"_openAuthSessionAsync"],[238,32,190,42],[238,33,190,42,"apply"],[238,38,190,42],[238,45,190,42,"arguments"],[238,54,190,42],[239,2,190,42],[240,2,204,0],[241,0,205,0],[242,0,206,0],[243,0,207,0],[244,0,208,0],[245,0,209,0],[246,0,210,0],[247,0,211,0],[248,2,204,0],[248,11,204,0,"_openAuthSessionAsync"],[248,33,204,0],[249,4,204,0,"_openAuthSessionAsync"],[249,25,204,0],[249,32,204,0,"_asyncToGenerator2"],[249,50,204,0],[249,51,204,0,"default"],[249,58,204,0],[249,60,190,7],[249,71,190,43,"url"],[249,74,190,46],[249,76,190,48,"redirectUrl"],[249,87,190,59],[249,89,190,75],[250,6,190,75],[250,10,190,61,"options"],[250,17,190,68],[250,20,190,68,"arguments"],[250,29,190,68],[250,30,190,68,"length"],[250,36,190,68],[250,44,190,68,"arguments"],[250,53,190,68],[250,61,190,68,"undefined"],[250,70,190,68],[250,73,190,68,"arguments"],[250,82,190,68],[250,88,190,71],[250,89,190,72],[250,90,190,73],[251,6,191,4],[251,10,191,8,"_authSessionIsNativelySupported"],[251,41,191,39],[251,42,191,40],[251,43,191,41],[251,45,191,43],[252,8,192,8],[252,12,192,12],[252,13,192,13,"ExponentWebBrowser"],[252,36,192,31],[252,37,192,32,"openAuthSessionAsync"],[252,57,192,52],[252,59,192,54],[253,10,193,12],[253,16,193,18],[253,21,193,22,"UnavailabilityError"],[253,47,193,22],[253,48,193,22,"UnavailabilityError"],[253,88,193,41],[253,90,193,42],[253,102,193,54],[253,104,193,56],[253,126,193,78],[253,127,193,79],[254,8,194,8],[255,8,195,8],[255,12,195,12],[255,13,195,13],[255,18,195,18],[255,20,195,20],[255,25,195,25],[255,26,195,26],[255,27,195,27,"includes"],[255,35,195,35],[255,36,195,36,"Platform"],[255,57,195,44],[255,58,195,45,"OS"],[255,60,195,47],[255,61,195,48],[255,63,195,50],[256,10,196,12],[256,17,196,19,"ExponentWebBrowser"],[256,40,196,37],[256,41,196,38,"openAuthSessionAsync"],[256,61,196,58],[256,62,196,59,"url"],[256,65,196,62],[256,67,196,64,"redirectUrl"],[256,78,196,75],[256,80,196,77,"_processOptions"],[256,95,196,92],[256,96,196,93,"options"],[256,103,196,100],[256,104,196,101],[256,105,196,102],[257,8,197,8],[258,8,198,8],[258,15,198,15,"ExponentWebBrowser"],[258,38,198,33],[258,39,198,34,"openAuthSessionAsync"],[258,59,198,54],[258,60,198,55,"url"],[258,63,198,58],[258,65,198,60,"redirectUrl"],[258,76,198,71],[258,77,198,72],[259,6,199,4],[259,7,199,5],[259,13,200,9],[260,8,201,8],[260,15,201,15,"_openAuthSessionPolyfillAsync"],[260,44,201,44],[260,45,201,45,"url"],[260,48,201,48],[260,50,201,50,"redirectUrl"],[260,61,201,61],[260,63,201,63,"options"],[260,70,201,70],[260,71,201,71],[261,6,202,4],[262,4,203,0],[262,5,203,1],[263,4,203,1],[263,11,203,1,"_openAuthSessionAsync"],[263,32,203,1],[263,33,203,1,"apply"],[263,38,203,1],[263,45,203,1,"arguments"],[263,54,203,1],[264,2,203,1],[265,2,212,7],[265,11,212,16,"dismissAuthSession"],[265,29,212,34,"dismissAuthSession"],[265,30,212,34],[265,32,212,37],[266,4,213,4],[266,8,213,8,"_authSessionIsNativelySupported"],[266,39,213,39],[266,40,213,40],[266,41,213,41],[266,43,213,43],[267,6,214,8],[267,10,214,12],[267,11,214,13,"ExponentWebBrowser"],[267,34,214,31],[267,35,214,32,"dismissAuthSession"],[267,53,214,50],[267,55,214,52],[268,8,215,12],[268,14,215,18],[268,19,215,22,"UnavailabilityError"],[268,45,215,22],[268,46,215,22,"UnavailabilityError"],[268,86,215,41],[268,88,215,42],[268,100,215,54],[268,102,215,56],[268,122,215,76],[268,123,215,77],[269,6,216,8],[270,6,217,8,"ExponentWebBrowser"],[270,29,217,26],[270,30,217,27,"dismissAuthSession"],[270,48,217,45],[270,49,217,46],[270,50,217,47],[271,4,218,4],[271,5,218,5],[271,11,219,9],[272,6,220,8],[272,10,220,12],[272,11,220,13,"ExponentWebBrowser"],[272,34,220,31],[272,35,220,32,"dismissBrowser"],[272,49,220,46],[272,51,220,48],[273,8,221,12],[273,14,221,18],[273,19,221,22,"UnavailabilityError"],[273,45,221,22],[273,46,221,22,"UnavailabilityError"],[273,86,221,41],[273,88,221,42],[273,100,221,54],[273,102,221,56],[273,118,221,72],[273,119,221,73],[274,6,222,8],[275,6,223,8,"ExponentWebBrowser"],[275,29,223,26],[275,30,223,27,"dismissBrowser"],[275,44,223,41],[275,45,223,42],[275,46,223,43],[276,4,224,4],[277,2,225,0],[278,2,226,0],[279,2,227,0],[280,0,228,0],[281,0,229,0],[282,0,230,0],[283,0,231,0],[284,0,232,0],[285,0,233,0],[286,0,234,0],[287,0,235,0],[288,0,236,0],[289,0,237,0],[290,0,238,0],[291,0,239,0],[292,0,240,0],[293,0,241,0],[294,0,242,0],[295,0,243,0],[296,0,244,0],[297,0,245,0],[298,0,246,0],[299,0,247,0],[300,0,248,0],[301,0,249,0],[302,0,250,0],[303,0,251,0],[304,0,252,0],[305,0,253,0],[306,0,254,0],[307,2,255,7],[307,11,255,16,"maybeCompleteAuthSession"],[307,35,255,40,"maybeCompleteAuthSession"],[307,36,255,40],[307,38,255,55],[308,4,255,55],[308,8,255,41,"options"],[308,15,255,48],[308,18,255,48,"arguments"],[308,27,255,48],[308,28,255,48,"length"],[308,34,255,48],[308,42,255,48,"arguments"],[308,51,255,48],[308,59,255,48,"undefined"],[308,68,255,48],[308,71,255,48,"arguments"],[308,80,255,48],[308,86,255,51],[308,87,255,52],[308,88,255,53],[309,4,256,4],[309,8,256,8,"ExponentWebBrowser"],[309,31,256,26],[309,32,256,27,"maybeCompleteAuthSession"],[309,56,256,51],[309,58,256,53],[310,6,257,8],[310,13,257,15,"ExponentWebBrowser"],[310,36,257,33],[310,37,257,34,"maybeCompleteAuthSession"],[310,61,257,58],[310,62,257,59,"options"],[310,69,257,66],[310,70,257,67],[311,4,258,4],[312,4,259,4],[312,11,259,11],[313,6,259,13,"type"],[313,10,259,17],[313,12,259,19],[313,20,259,27],[314,6,259,29,"message"],[314,13,259,36],[314,15,259,38],[315,4,259,71],[315,5,259,72],[316,2,260,0],[317,2,261,0],[317,11,261,9,"_processOptions"],[317,26,261,24,"_processOptions"],[317,27,261,25,"options"],[317,34,261,32],[317,36,261,34],[318,4,262,4],[318,11,262,11],[319,6,263,8],[319,9,263,11,"options"],[319,16,263,18],[320,6,264,8,"controlsColor"],[320,19,264,21],[320,21,264,23],[320,25,264,23,"processColor"],[320,50,264,35],[320,52,264,36,"options"],[320,59,264,43],[320,60,264,44,"controlsColor"],[320,73,264,57],[320,74,264,58],[321,6,265,8,"toolbarColor"],[321,18,265,20],[321,20,265,22],[321,24,265,22,"processColor"],[321,49,265,34],[321,51,265,35,"options"],[321,58,265,42],[321,59,265,43,"toolbarColor"],[321,71,265,55],[321,72,265,56],[322,6,266,8,"secondaryToolbarColor"],[322,27,266,29],[322,29,266,31],[322,33,266,31,"processColor"],[322,58,266,43],[322,60,266,44,"options"],[322,67,266,51],[322,68,266,52,"secondaryToolbarColor"],[322,89,266,73],[323,4,267,4],[323,5,267,5],[324,2,268,0],[325,2,269,0],[326,2,270,0],[326,11,270,9,"_authSessionIsNativelySupported"],[326,42,270,40,"_authSessionIsNativelySupported"],[326,43,270,40],[326,45,270,43],[327,4,271,4],[327,11,271,11,"Platform"],[327,32,271,19],[327,33,271,20,"OS"],[327,35,271,22],[327,40,271,27],[327,49,271,36],[328,2,272,0],[329,2,273,0],[329,6,273,4,"_redirectSubscription"],[329,27,273,25],[329,30,273,28],[329,34,273,32],[330,2,274,0],[331,0,275,0],[332,0,276,0],[333,0,277,0],[334,2,278,0],[335,2,279,0],[336,2,280,0],[336,6,280,4,"_onWebBrowserCloseAndroid"],[336,31,280,29],[336,34,280,32],[336,38,280,36],[337,2,281,0],[338,2,282,0],[339,2,283,0],[340,2,284,0],[341,2,285,0],[341,6,285,4,"_isAppStateAvailable"],[341,26,285,24],[341,29,285,27,"AppState"],[341,50,285,35],[341,51,285,36,"currentState"],[341,63,285,48],[341,68,285,53],[341,72,285,57],[342,2,286,0],[342,11,286,9,"_onAppStateChangeAndroid"],[342,35,286,33,"_onAppStateChangeAndroid"],[342,36,286,34,"state"],[342,41,286,39],[342,43,286,41],[343,4,287,4],[343,8,287,8],[343,9,287,9,"_isAppStateAvailable"],[343,29,287,29],[343,31,287,31],[344,6,288,8,"_isAppStateAvailable"],[344,26,288,28],[344,29,288,31],[344,33,288,35],[345,6,289,8],[346,4,290,4],[347,4,291,4],[347,8,291,8,"state"],[347,13,291,13],[347,18,291,18],[347,26,291,26],[347,30,291,30,"_onWebBrowserCloseAndroid"],[347,55,291,55],[347,57,291,57],[348,6,292,8,"_onWebBrowserCloseAndroid"],[348,31,292,33],[348,32,292,34],[348,33,292,35],[349,4,293,4],[350,2,294,0],[351,2,294,1],[351,11,295,15,"_openBrowserAndWaitAndroidAsync"],[351,42,295,46,"_openBrowserAndWaitAndroidAsync"],[351,43,295,46,"_x8"],[351,46,295,46],[352,4,295,46],[352,11,295,46,"_openBrowserAndWaitAndroidAsync2"],[352,43,295,46],[352,44,295,46,"apply"],[352,49,295,46],[352,56,295,46,"arguments"],[352,65,295,46],[353,2,295,46],[354,2,295,46],[354,11,295,46,"_openBrowserAndWaitAndroidAsync2"],[354,44,295,46],[355,4,295,46,"_openBrowserAndWaitAndroidAsync2"],[355,36,295,46],[355,43,295,46,"_asyncToGenerator2"],[355,61,295,46],[355,62,295,46,"default"],[355,69,295,46],[355,71,295,0],[355,82,295,47,"startUrl"],[355,90,295,55],[355,92,295,77],[356,6,295,77],[356,10,295,57,"browserParams"],[356,23,295,70],[356,26,295,70,"arguments"],[356,35,295,70],[356,36,295,70,"length"],[356,42,295,70],[356,50,295,70,"arguments"],[356,59,295,70],[356,67,295,70,"undefined"],[356,76,295,70],[356,79,295,70,"arguments"],[356,88,295,70],[356,94,295,73],[356,95,295,74],[356,96,295,75],[357,6,296,4],[357,10,296,10,"appStateChangedToActive"],[357,33,296,33],[357,36,296,36],[357,40,296,40,"Promise"],[357,47,296,47],[357,48,296,49,"resolve"],[357,55,296,56],[357,59,296,61],[358,8,297,8,"_onWebBrowserCloseAndroid"],[358,33,297,33],[358,36,297,36,"resolve"],[358,43,297,43],[359,6,298,4],[359,7,298,5],[359,8,298,6],[360,6,299,4],[360,10,299,10,"stateChangeSubscription"],[360,33,299,33],[360,36,299,36,"AppState"],[360,57,299,44],[360,58,299,45,"addEventListener"],[360,74,299,61],[360,75,299,62],[360,83,299,70],[360,85,299,72,"_onAppStateChangeAndroid"],[360,109,299,96],[360,110,299,97],[361,6,300,4],[361,10,300,8,"result"],[361,16,300,14],[361,19,300,17],[362,8,300,19,"type"],[362,12,300,23],[362,14,300,25,"WebBrowserResultType"],[362,40,300,25],[362,41,300,25,"WebBrowserResultType"],[362,83,300,45],[362,84,300,46,"CANCEL"],[363,6,300,53],[363,7,300,54],[364,6,301,4],[364,10,301,8,"type"],[364,14,301,12],[364,17,301,15],[364,21,301,19],[365,6,302,4],[365,10,302,8],[366,8,302,8],[366,12,302,8,"_yield$openBrowserAsy"],[366,33,302,8],[366,42,303,26,"openBrowserAsync"],[366,58,303,42],[366,59,303,43,"startUrl"],[366,67,303,51],[366,69,303,53,"browserParams"],[366,82,303,66],[366,83,303,67],[367,8,303,11,"type"],[367,12,303,15],[367,15,303,15,"_yield$openBrowserAsy"],[367,36,303,15],[367,37,303,11,"type"],[367,41,303,15],[368,6,304,4],[368,7,304,5],[368,8,305,4],[368,15,305,11,"e"],[368,16,305,12],[368,18,305,14],[369,8,306,8,"stateChangeSubscription"],[369,31,306,31],[369,32,306,32,"remove"],[369,38,306,38],[369,39,306,39],[369,40,306,40],[370,8,307,8,"_onWebBrowserCloseAndroid"],[370,33,307,33],[370,36,307,36],[370,40,307,40],[371,8,308,8],[371,14,308,14,"e"],[371,15,308,15],[372,6,309,4],[373,6,310,4],[373,10,310,8,"type"],[373,14,310,12],[373,19,310,17],[373,27,310,25],[373,29,310,27],[374,8,311,8],[374,14,311,14,"appStateChangedToActive"],[374,37,311,37],[375,8,312,8,"result"],[375,14,312,14],[375,17,312,17],[376,10,312,19,"type"],[376,14,312,23],[376,16,312,25,"WebBrowserResultType"],[376,42,312,25],[376,43,312,25,"WebBrowserResultType"],[376,85,312,45],[376,86,312,46,"DISMISS"],[377,8,312,54],[377,9,312,55],[378,6,313,4],[379,6,314,4,"stateChangeSubscription"],[379,29,314,27],[379,30,314,28,"remove"],[379,36,314,34],[379,37,314,35],[379,38,314,36],[380,6,315,4,"_onWebBrowserCloseAndroid"],[380,31,315,29],[380,34,315,32],[380,38,315,36],[381,6,316,4],[381,13,316,11,"result"],[381,19,316,17],[382,4,317,0],[382,5,317,1],[383,4,317,1],[383,11,317,1,"_openBrowserAndWaitAndroidAsync2"],[383,43,317,1],[383,44,317,1,"apply"],[383,49,317,1],[383,56,317,1,"arguments"],[383,65,317,1],[384,2,317,1],[385,2,317,1],[385,11,318,15,"_openAuthSessionPolyfillAsync"],[385,40,318,44,"_openAuthSessionPolyfillAsync"],[385,41,318,44,"_x9"],[385,44,318,44],[385,46,318,44,"_x10"],[385,50,318,44],[386,4,318,44],[386,11,318,44,"_openAuthSessionPolyfillAsync2"],[386,41,318,44],[386,42,318,44,"apply"],[386,47,318,44],[386,54,318,44,"arguments"],[386,63,318,44],[387,2,318,44],[388,2,318,44],[388,11,318,44,"_openAuthSessionPolyfillAsync2"],[388,42,318,44],[389,4,318,44,"_openAuthSessionPolyfillAsync2"],[389,34,318,44],[389,41,318,44,"_asyncToGenerator2"],[389,59,318,44],[389,60,318,44,"default"],[389,67,318,44],[389,69,318,0],[389,80,318,45,"startUrl"],[389,88,318,53],[389,90,318,55,"returnUrl"],[389,99,318,64],[389,101,318,86],[390,6,318,86],[390,10,318,66,"browserParams"],[390,23,318,79],[390,26,318,79,"arguments"],[390,35,318,79],[390,36,318,79,"length"],[390,42,318,79],[390,50,318,79,"arguments"],[390,59,318,79],[390,67,318,79,"undefined"],[390,76,318,79],[390,79,318,79,"arguments"],[390,88,318,79],[390,94,318,82],[390,95,318,83],[390,96,318,84],[391,6,319,4],[391,10,319,8,"_redirectSubscription"],[391,31,319,29],[391,33,319,31],[392,8,320,8],[392,14,320,14],[392,18,320,18,"Error"],[392,23,320,23],[392,24,320,24],[392,128,320,128],[392,129,320,129],[393,6,321,4],[394,6,322,4],[394,10,322,8,"_onWebBrowserCloseAndroid"],[394,35,322,33],[394,37,322,35],[395,8,323,8],[395,14,323,14],[395,18,323,18,"Error"],[395,23,323,23],[395,24,323,24],[395,84,323,84],[395,85,323,85],[396,6,324,4],[397,6,325,4],[397,10,325,8],[398,8,326,8],[398,12,326,12,"Platform"],[398,33,326,20],[398,34,326,21,"OS"],[398,36,326,23],[398,41,326,28],[398,50,326,37],[398,52,326,39],[399,10,327,12],[399,23,327,25,"Promise"],[399,30,327,32],[399,31,327,33,"race"],[399,35,327,37],[399,36,327,38],[399,37,328,16,"_openBrowserAndWaitAndroidAsync"],[399,68,328,47],[399,69,328,48,"startUrl"],[399,77,328,56],[399,79,328,58,"browserParams"],[399,92,328,71],[399,93,328,72],[399,95,329,16,"_waitForRedirectAsync"],[399,116,329,37],[399,117,329,38,"returnUrl"],[399,126,329,47],[399,127,329,48],[399,128,330,13],[399,129,330,14],[400,8,331,8],[400,9,331,9],[400,15,332,13],[401,10,333,12],[401,23,333,25,"Promise"],[401,30,333,32],[401,31,333,33,"race"],[401,35,333,37],[401,36,333,38],[401,37,334,16,"openBrowserAsync"],[401,53,334,32],[401,54,334,33,"startUrl"],[401,62,334,41],[401,64,334,43,"browserParams"],[401,77,334,56],[401,78,334,57],[401,80,335,16,"_waitForRedirectAsync"],[401,101,335,37],[401,102,335,38,"returnUrl"],[401,111,335,47],[401,112,335,48],[401,113,336,13],[401,114,336,14],[402,8,337,8],[403,6,338,4],[403,7,338,5],[403,16,339,12],[404,8,340,8],[405,8,341,8],[406,8,342,8],[406,12,342,12,"ExponentWebBrowser"],[406,35,342,30],[406,36,342,31,"dismissBrowser"],[406,50,342,45],[406,52,342,47],[407,10,343,12,"ExponentWebBrowser"],[407,33,343,30],[407,34,343,31,"dismissBrowser"],[407,48,343,45],[407,49,343,46],[407,50,343,47],[408,8,344,8],[409,8,345,8,"_stopWaitingForRedirect"],[409,31,345,31],[409,32,345,32],[409,33,345,33],[410,6,346,4],[411,4,347,0],[411,5,347,1],[412,4,347,1],[412,11,347,1,"_openAuthSessionPolyfillAsync2"],[412,41,347,1],[412,42,347,1,"apply"],[412,47,347,1],[412,54,347,1,"arguments"],[412,63,347,1],[413,2,347,1],[414,2,348,0],[414,11,348,9,"_stopWaitingForRedirect"],[414,34,348,32,"_stopWaitingForRedirect"],[414,35,348,32],[414,37,348,35],[415,4,349,4],[415,8,349,8],[415,9,349,9,"_redirectSubscription"],[415,30,349,30],[415,32,349,32],[416,6,350,8],[416,12,350,14],[416,16,350,18,"Error"],[416,21,350,23],[416,22,350,24],[416,122,350,124],[416,123,350,125],[417,4,351,4],[418,4,352,4,"_redirectSubscription"],[418,25,352,25],[418,26,352,26,"remove"],[418,32,352,32],[418,33,352,33],[418,34,352,34],[419,4,353,4,"_redirectSubscription"],[419,25,353,25],[419,28,353,28],[419,32,353,32],[420,2,354,0],[421,2,355,0],[421,11,355,9,"_waitForRedirectAsync"],[421,32,355,30,"_waitForRedirectAsync"],[421,33,355,31,"returnUrl"],[421,42,355,40],[421,44,355,42],[422,4,356,4],[423,4,357,4],[423,11,357,11],[423,15,357,15,"Promise"],[423,22,357,22],[423,23,357,24,"resolve"],[423,30,357,31],[423,34,357,36],[424,6,358,8],[424,10,358,14,"redirectHandler"],[424,25,358,29],[424,28,358,33,"event"],[424,33,358,38],[424,37,358,43],[425,8,359,12],[425,12,359,16,"returnUrl"],[425,21,359,25],[425,25,359,29,"event"],[425,30,359,34],[425,31,359,35,"url"],[425,34,359,38],[425,35,359,39,"startsWith"],[425,45,359,49],[425,46,359,50,"returnUrl"],[425,55,359,59],[425,56,359,60],[425,58,359,62],[426,10,360,16,"resolve"],[426,17,360,23],[426,18,360,24],[427,12,360,26,"url"],[427,15,360,29],[427,17,360,31,"event"],[427,22,360,36],[427,23,360,37,"url"],[427,26,360,40],[428,12,360,42,"type"],[428,16,360,46],[428,18,360,48],[429,10,360,58],[429,11,360,59],[429,12,360,60],[430,8,361,12],[431,6,362,8],[431,7,362,9],[432,6,363,8,"_redirectSubscription"],[432,27,363,29],[432,30,363,32,"Linking"],[432,50,363,39],[432,51,363,40,"addEventListener"],[432,67,363,56],[432,68,363,57],[432,73,363,62],[432,75,363,64,"redirectHandler"],[432,90,363,79],[432,91,363,80],[433,4,364,4],[433,5,364,5],[433,6,364,6],[434,2,365,0],[435,0,365,1],[435,3]],"functionMap":{"names":["<global>","getCustomTabsSupportingBrowsersAsync","warmUpAsync","mayInitWithUrlAsync","coolDownAsync","openBrowserAsync","dismissBrowser","openAuthSessionAsync","dismissAuthSession","maybeCompleteAuthSession","_processOptions","_authSessionIsNativelySupported","_onAppStateChangeAndroid","_openBrowserAndWaitAndroidAsync","Promise$argument_0","_openAuthSessionPolyfillAsync","_stopWaitingForRedirect","_waitForRedirectAsync","redirectHandler"],"mappings":"AAA;OCqB;CDU;OEW;CFU;OGa;CHU;OIc;CJU;OKiB;CLY;OMQ;CNE;OOmD;CPa;OQS;CRa;OS8B;CTK;AUC;CVO;AWE;CXE;AYc;CZQ;AaC;gDCC;KDE;CbmB;AeC;Cf6B;AgBC;ChBM;AiBC;uBHE;gCIC;SJI;KGE;CjBC"}},"type":"js/module"}]}