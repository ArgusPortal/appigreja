{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":20,"column":0,"index":732}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"./NativeErrorManager","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":54,"index":54}}],"key":"2G8HPQl48FQ6VudbkRbhXaaKPvk="}},{"name":"../Platform","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":55},"end":{"line":2,"column":35,"index":90}}],"key":"SkcN7Zi2IL0pUxWZCaWeI65icek="}},{"name":"../errors/CodedError","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":91},"end":{"line":3,"column":50,"index":141}}],"key":"BOW/VZxuvFh2KA4VCC9eipjaigw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  var _NativeErrorManager = _interopRequireDefault(require(_dependencyMap[1], \"./NativeErrorManager\"));\n  var _Platform = _interopRequireDefault(require(_dependencyMap[2], \"../Platform\"));\n  if (__DEV__ && _Platform.default.OS === 'android' && _NativeErrorManager.default) {\n    var onNewException = 'ExpoModulesCoreErrorManager.onNewException';\n    var onNewWarning = 'ExpoModulesCoreErrorManager.onNewWarning';\n    _NativeErrorManager.default.addListener(onNewException, _ref => {\n      var message = _ref.message;\n      console.error(message);\n    });\n    _NativeErrorManager.default.addListener(onNewWarning, _ref2 => {\n      var message = _ref2.message;\n      console.warn(message);\n    });\n  }\n\n  // We have to export `CodedError` via global object to use in later in the C++ code.\n  globalThis.ExpoModulesCore_CodedError = require(_dependencyMap[3], \"../errors/CodedError\").CodedError;\n});","lineCount":20,"map":[[3,2,1,0],[3,6,1,0,"_NativeErrorManager"],[3,25,1,0],[3,28,1,0,"_interopRequireDefault"],[3,50,1,0],[3,51,1,0,"require"],[3,58,1,0],[3,59,1,0,"_dependencyMap"],[3,73,1,0],[4,2,2,0],[4,6,2,0,"_Platform"],[4,15,2,0],[4,18,2,0,"_interopRequireDefault"],[4,40,2,0],[4,41,2,0,"require"],[4,48,2,0],[4,49,2,0,"_dependencyMap"],[4,63,2,0],[5,2,5,0],[5,6,5,4,"__DEV__"],[5,13,5,11],[5,17,5,15,"Platform"],[5,34,5,23],[5,35,5,24,"OS"],[5,37,5,26],[5,42,5,31],[5,51,5,40],[5,55,5,44,"NativeErrorManager"],[5,82,5,62],[5,84,5,64],[6,4,6,2],[6,8,6,8,"onNewException"],[6,22,6,22],[6,25,6,25],[6,69,6,69],[7,4,7,2],[7,8,7,8,"onNewWarning"],[7,20,7,20],[7,23,7,23],[7,65,7,65],[8,4,9,2,"NativeErrorManager"],[8,31,9,20],[8,32,9,21,"addListener"],[8,43,9,32],[8,44,9,33,"onNewException"],[8,58,9,47],[8,60,9,49,"_ref"],[8,64,9,49],[8,68,9,87],[9,6,9,87],[9,10,9,52,"message"],[9,17,9,59],[9,20,9,59,"_ref"],[9,24,9,59],[9,25,9,52,"message"],[9,32,9,59],[10,6,10,4,"console"],[10,13,10,11],[10,14,10,12,"error"],[10,19,10,17],[10,20,10,18,"message"],[10,27,10,25],[10,28,10,26],[11,4,11,2],[11,5,11,3],[11,6,11,4],[12,4,13,2,"NativeErrorManager"],[12,31,13,20],[12,32,13,21,"addListener"],[12,43,13,32],[12,44,13,33,"onNewWarning"],[12,56,13,45],[12,58,13,47,"_ref2"],[12,63,13,47],[12,67,13,85],[13,6,13,85],[13,10,13,50,"message"],[13,17,13,57],[13,20,13,57,"_ref2"],[13,25,13,57],[13,26,13,50,"message"],[13,33,13,57],[14,6,14,4,"console"],[14,13,14,11],[14,14,14,12,"warn"],[14,18,14,16],[14,19,14,17,"message"],[14,26,14,24],[14,27,14,25],[15,4,15,2],[15,5,15,3],[15,6,15,4],[16,2,16,0],[18,2,18,0],[19,2,19,0,"globalThis"],[19,12,19,10],[19,13,19,11,"ExpoModulesCore_CodedError"],[19,39,19,37],[19,42,19,40,"CodedError"],[19,68,19,40],[19,69,19,40,"CodedError"],[19,103,19,50],[20,0,19,51],[20,3]],"functionMap":{"names":["<global>","NativeErrorManager.addListener$argument_1"],"mappings":"AAA;iDCQ;GDE;+CCE;GDE"}},"type":"js/module"}]}