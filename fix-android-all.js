/**
 * Script Utilit√°rio para resolver todos os problemas comuns do Android
 * Este arquivo pode ser executado diretamente: node fix-android-all.js
 */

const { execSync } = require('child_process');
const path = require('path');
const fs = require('fs');

console.log('üõ†Ô∏è  Ferramenta de Reparo Total para Android');
console.log('===========================================');

// Verificar se estamos no diret√≥rio correto
const packageJsonPath = path.join(__dirname, 'package.json');
if (!fs.existsSync(packageJsonPath)) {
  console.error('‚ùå Erro: Este script deve ser executado no diret√≥rio raiz do projeto.');
  process.exit(1);
}

const runCommand = (command, label) => {
  console.log(`\nüîÑ ${label}...`);
  try {
    execSync(command, { stdio: 'inherit', cwd: __dirname });
    console.log(`‚úÖ ${label} conclu√≠do com sucesso!`);
    return true;
  } catch (e) {
    console.error(`‚ùå Erro durante ${label}: ${e.message}`);
    return false;
  }
};

// Passos de reparo em sequ√™ncia
console.log('\nüßπ Iniciando processo de reparo completo...');

// 1. Limpar caches
runCommand('rimraf .metro-cache node_modules/.cache .expo', 'Limpando caches');

// 2. Verificar e corrigir depend√™ncias babel
runCommand('node scripts/check-babel-deps.js', 'Verificando depend√™ncias Babel');

// 3. Verificar e corrigir depend√™ncias Expo
if (fs.existsSync(path.join(__dirname, 'scripts/check-expo-deps.js'))) {
  runCommand('node scripts/check-expo-deps.js', 'Verificando depend√™ncias Expo');
} else {
  console.log('\n‚ö†Ô∏è Script de verifica√ß√£o Expo n√£o encontrado, pulando esta etapa');
}

// 4. Verificar e corrigir problemas com Metro SHA-1
if (fs.existsSync(path.join(__dirname, 'scripts/fix-metro-sha1.js'))) {
  runCommand('node scripts/fix-metro-sha1.js', 'Corrigindo problemas Metro SHA-1');
} else {
  console.log('\n‚ö†Ô∏è Script de reparo Metro SHA-1 n√£o encontrado, pulando esta etapa');
}

// 5. Verificar e corrigir React Native
runCommand('node scripts/fix-react-native.js', 'Verificando React Native');

// 6. Reinstalar m√≥dulos problem√°ticos
console.log('\nüîÑ Reinstalando m√≥dulos problem√°ticos...');
try {
  // Verificar e modificar o arquivo package.json para garantir vers√µes exatas
  const packageJson = require(packageJsonPath);
  const dependencies = packageJson.dependencies || {};
  
  // Fixar vers√µes exatas para alguns pacotes problem√°ticos
  if (dependencies['expo-linking']) dependencies['expo-linking'] = '7.0.5';
  if (dependencies['react-native']) dependencies['react-native'] = '0.76.7';
  
  // Salvar mudan√ßas
  fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2));
  console.log('‚úÖ Vers√µes problem√°ticas fixadas em package.json');
  
  // Reinstalar m√≥dulos espec√≠ficos
  runCommand('npm install expo-linking@7.0.5 --save-exact', 'Reinstalando expo-linking');
  runCommand('npm install react-native@0.76.7 --save-exact', 'Reinstalando react-native');
  
} catch (e) {
  console.error(`‚ùå Erro ao modificar package.json: ${e.message}`);
}

// 7. Iniciar a aplica√ß√£o
if (runCommand('npm run android-clean', 'Iniciando aplica√ß√£o Android')) {
  console.log('\nüéâ Todos os reparos foram conclu√≠dos e a aplica√ß√£o foi iniciada!');
} else {
  console.log('\n‚ö†Ô∏è Todos os reparos foram aplicados, mas houve um problema ao iniciar a aplica√ß√£o.');
  console.log('Tente executar o comando manualmente: npm run android');
}
